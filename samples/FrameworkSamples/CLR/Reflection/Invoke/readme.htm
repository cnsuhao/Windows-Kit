<html><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" /><META NAME="save" CONTENT="history" /><title xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Reflection Invoke Technology Sample</title><META NAME="Description" CONTENT="&#xD;&#xA;                    This sample demonstrates how to implement late binding to any managed assembly with public classes and methods. From the command line you select an assembly, type, method, and parameters. The sample will attempt to load the asse ..."></META><META NAME="MS.LOCALE" CONTENT="en-us" /><style>
body
{font-family:Verdana;font-size:medium;}
div#mainSection, div#header
{font-size:70%;width: 100%;}
div#mainBody
{font-size:90%;}
div#mainSection div table
{font-size: 100%;text-align: left;}
span#nsrTitle
{color:#003399;font-size:90%;font-weight:600;}
div#header
{background-color:#D4DFFF;}
.heading
{font-size:120%;color:#003399;}
.subHeading
{font-size:100%;margin-bottom:4;}
li
{margin-top:-2;margin-bottom:3;}
p
{margin-top:10;margin-bottom:5;}
div.tableSection p
{margin-top:1;margin-bottom:4;}	
div#mainSection table th
{background-color:#EFEFF7;color:#000066;text-align:left;}
div#mainSection table td
{background-color:#F7F7FF;}
div#mainSection table
{margin-top:5px;margin-bottom: px;}
			</style></head><body><div id="header"><table width="100%" id="topTable"></table></div><div id="mainSection"><div id="mainBody"><br /><font color="DarkGray">[This readme is a partial copy of the sample's topic in the SDK documentation.]</font><br /><font color="DarkGray" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"></font><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"></p><div class="introduction"><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    This sample demonstrates how to implement late binding to any managed assembly with public classes and methods. From the command line you select an assembly, type, method, and parameters. The sample will attempt to load the assembly, locate the type and method, and invoke the method with the passed parameters. The sample even attempts to do the necessary type conversions for method calls that take parameters that are not strings. The reflection classes make this advanced functionality surprisingly simple. A simple DLL project named Tester.dll is included with this sample. The tester project provides a simple type with some methods to try with the Invoke sample.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    For information about using the samples, see the following topics:
                </p><ul xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p><span sdata="link">How to: View and Download Samples</span></p></li><li><p><span sdata="link">How to: Set Sample Settings</span></p></li></ul></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To build the sample using the command prompt</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Navigate to one of the language-specific subdirectories for the sample. 
                </p></li><li><p>
                    Type <span class="input">msbuild InvokeCS.sln</span> or <span class="input">msbuild InvokeVB.sln</span>, depending on your choice of programming language, at the command line. 
                </p></li></ol></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To build the sample using Visual Studio</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Open Windows Explorer and navigate to one of the language-specific subdirectories for the sample.
                </p></li><li><p>
                    Double-click the icon for <b>InvokeCS.sl</b>n or <b>InvokeVB.sln</b>, depending on your choice of programming language, to open the file in Visual Studio.
                </p></li><li><p>
                    On the <span class="ui">Build</span> menu, click <span class="ui">Build Solution</span>.
                </p></li></ol><div class="alert"><table width="100%" cellspacing="0" cellpadding="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><tr><th align="left"><b>Note:</b></th></tr><tr><td><p>
					 This sample builds a console application. You must launch it using the command prompt in order to view its output.
								
								
							</p><p>
			
				Invoke.exe accepts command line parameters indicating what you would like to invoke. Sample usage is displayed if it is run with no parameters. Use the following syntax to invoke a method on a type: 
			
        </p></td></tr></table></div><div class="code"><table width="100%" cellspacing="0" cellpadding="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><tr><th> </th><th></th></tr><tr><td colspan="2"><pre>Invoke.exe [Assembly] [Type] [Method] [Parameters...]  
</pre></td></tr></table></div></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To run the sample</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Navigate to the directory containing Invoke.exe and Tester.dll.
                </p></li><li><p>
                    Type <span class="input">Invoke.exe [Assembly] [Type] [Method] [Parameters...]</span> at the command line.
                </p></li></ol></div><h1 class="heading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0, event)" tabindex="0">Remarks</span></h1><div id="sectionSection0" class="section"><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    The msbuild tool builds two files, Invoke.exe and Tester.dll.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    In the following example, the <span class="code">ShowMessage</span> method on type <span class="code">SomeType</span> is called with three parameters, for example:
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span class="code">Invoke.exe Tester.dll Microsoft.Samples.SomeType ShowMessage "This is an example of a message." "Question:" 4</span></p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    For more information about reflection invoke, see the comments in the source code files.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    The following items briefly describe the technologies and classes used by this sample:  
                </p><ul xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p><b>Reflection </b></p><ul><li><p><span sdata="cer" target="T:System.Reflection.Assembly">Assembly</span>Used to load an assembly and to search for a type in that assembly.
                </p></li><li><p><span sdata="cer" target="T:System.Type">Type</span>  Used to obtain an array of <span sdata="cer" target="T:System.Reflection.MemberInfo">MemberInfo</span> instances, as well as to refer to a type when creating an instance if needed.
                </p></li><li><p><span sdata="cer" target="T:System.Reflection.MethodInfo">MethodInfo</span>  Used to discover information about a single method, including parameters and method name. The sample compares information from this type with the information provided on the command line. <span sdata="cer" target="T:System.Reflection.MethodInfo">MethodInfo</span> is also used to invoke a method.
                </p></li><li><p><span sdata="cer" target="T:System.Reflection.ParameterInfo">ParameterInfo</span>  Used primarily to find the type of method parameters, so that the sample can cast command line arguments appropriately.
                </p></li><li><p><span sdata="cer" target="T:System.Activator">Activator</span>  Used to create an instance of a type, if the sample finds that a call to an instance method is needed.
                </p></li></ul></li><li><p><b>System </b></p><ul><li><p><span sdata="cer" target="T:System.Array">Array</span>  Used to copy a portion of one array to another array.
                </p></li><li><p><span sdata="cer" target="T:System.Convert">Convert</span>  Used to attempt to cast the command line arguments, which are of type <span sdata="cer" target="T:System.String">String</span>, to the appropriate type for the parameters passed to the methods of a given type.
                </p></li></ul></li></ul></div><h1 class="heading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0">See Also</span></h1><div id="seeAlsoSection" class="section"><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Reference</h4><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Activator" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Activator</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Array" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Array</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.Assembly" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Assembly</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.Emit.AssemblyBuilderAccess" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">AssemblyBuilderAccess</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Convert" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Convert</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.MethodAttributes" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">MethodAttributes</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.MethodInfo" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">MethodInfo</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.ParameterInfo" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">ParameterInfo</span></div><div class="seeAlsoStyle"><span sdata="cer" target="N:System.Reflection" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">System.Reflection</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Type" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Type</span></div><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Other Resources</h4><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Reflection</span></div><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Emitting Dynamic Methods and Assemblies</span></div><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Dynamic Source Code Generation and Compilation</span></div></div></div></div></body></html>