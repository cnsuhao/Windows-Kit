<html><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" /><META NAME="save" CONTENT="history" /><title xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Reflection Emit Technology Sample</title><META NAME="Description" CONTENT="&#xD;&#xA;                    This sample demonstrates how to use reflection emit. Reflection emit is a run-time feature that allows code to create dynamic assemblies, modules, and types. You can dynamically create instances of these types to use, or you can ..."></META><META NAME="MS.LOCALE" CONTENT="en-us" /><style>
body
{font-family:Verdana;font-size:medium;}
div#mainSection, div#header
{font-size:70%;width: 100%;}
div#mainBody
{font-size:90%;}
div#mainSection div table
{font-size: 100%;text-align: left;}
span#nsrTitle
{color:#003399;font-size:90%;font-weight:600;}
div#header
{background-color:#D4DFFF;}
.heading
{font-size:120%;color:#003399;}
.subHeading
{font-size:100%;margin-bottom:4;}
li
{margin-top:-2;margin-bottom:3;}
p
{margin-top:10;margin-bottom:5;}
div.tableSection p
{margin-top:1;margin-bottom:4;}	
div#mainSection table th
{background-color:#EFEFF7;color:#000066;text-align:left;}
div#mainSection table td
{background-color:#F7F7FF;}
div#mainSection table
{margin-top:5px;margin-bottom: px;}
			</style></head><body><div id="header"><table width="100%" id="topTable"></table></div><div id="mainSection"><div id="mainBody"><br /><font color="DarkGray">[This readme is a partial copy of the sample's topic in the SDK documentation.]</font><br /><font color="DarkGray" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"></font><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"></p><div class="introduction"><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    This sample demonstrates how to use reflection emit. Reflection emit is a run-time feature that allows code to create dynamic assemblies, modules, and types. You can dynamically create instances of these types to use, or you can use reflection emit to generate an assembly and persist it to disk as an executable file or DLL. This sample consists of two executables. The first executable, EmitAssembly.exe, generates a dynamic type and tests it, or it generates a dynamic type and persists it to disk as a DLL. The second executable, TestEmittedAssembly.exe, simply tests the assembly dynamically emitted by the EmitAssembly.exe. The type emitted by EmitAssembly.exe is a simple class called "HelloWorld" whose constructor takes a single string parameter. The type also implements a GetGreeting() method which returns the string passed to the instance constructor.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    For information about using the samples, see the following topics:
                </p><ul xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p><span sdata="link">How to: View and Download Samples</span></p></li><li><p><span sdata="link">How to: Set Sample Settings</span></p></li></ul></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To build the sample using the command prompt</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Open a Command Prompt window and navigate to one of the language-specific subdirectories for the sample. 
                </p></li><li><p>
                    Type <span class="input">msbuild ReflectionEmitCS.sln</span> or <span class="input">msbuild ReflectionEmitVB.sln</span>, depending on your choice of programming language, at the command line.
                </p></li><li><p>
                    Build the testing assembly by compiling the EmitAssembly class. Depending on your programming language choice, type <span class="input">csc /target:library EmitAssembly.cs</span> or <span class="input">vbc /target:library TestEmittedAssembly.vb</span> at the command line. The resulting output file is EmitAssembly.dll.
                </p></li></ol></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To build the sample using Visual Studio</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Open Windows Explorer and navigate to one of the language-specific subdirectories for the sample.
                </p></li><li><p>
                    Double-click the icon for ReflectionEmitCS.sln or ReflectionEmitVB.sln, depending on your choice of programming language, to open the file in Visual Studio.
                </p></li><li><p>
                    In the <span class="ui">Build</span> menu, select <span class="ui">Build Solution</span>.
                </p></li><li><p>
                    Build the testing assembly by building the EmitAssembly class. Create a <span class="ui">Class Library</span> project using the EmitAssembly.cs or EmitAssembly.vb file and build the project. The resulting output file is EmitAssembly.dll.
                </p></li></ol></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To run the sample</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Open the Command Prompt window and navigate to the directory that contains the new executable.
                </p></li><li><p>
                    Type <span class="input">EmitAssembly.exe</span>, followed by the value you want to pass as a parameter, at the command line.
                </p></li></ol><div class="alert"><table width="100%" cellspacing="0" cellpadding="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><tr><th align="left"><b>Note:</b></th></tr><tr><td><p>
					 The sample builds a console application. You must launch and run it in a Command Prompt window to view its output.
								
								
							</p></td></tr></table></div></div><h1 class="heading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0, event)" tabindex="0">Remarks</span></h1><div id="sectionSection0" class="section"><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    For more information about reflection emit, see the comments in the source code files.
                </p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><tr><th align="left"><b>Note:</b></th></tr><tr><td><p>
					 The MsBuild Tool builds two executable files: EmitAssembly.exe and TestEmittedAssembly.exe. However, to build TestEmittedAssembly.exe, the compiler needs to be able to open the referenced assembly "EmittedAssembly.dll". After building EmitAssembly.exe, the MsBuild Tool executes EmitAssembly with the command line parameter "2" indicating that the sample should emit the dynamic assembly.
								
								
							</p></td></tr></table></div><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    The EmitAssembly executable accepts a command line parameter indicating which test you would like to execute. A value of 1 causes the sample to emit the dynamic type into its AppDomain, and test the static members in the sample. A value of 2 causes the sample to emit the dynamic type into an assembly and persist the assembly to disk in the form of a .DLL and a .MOD file. After doing this, you might want to run TestEmittedAssembly.exe or ILDasm.exe to test the emitted code.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    For example:
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span class="input">TestEmittedAssembly.exe</span></p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span class="input">ILDasm EmittedModule.mod</span></p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    A value of 3 causes the sample to emit the dynamic type into an assembly and emit a second dynamic type that tests the code of the first dynamic type.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    The sample uses the following technologies and classes:  
                </p><ul xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p><span sdata="cer" target="T:System.AppDomain">AppDomain</span>  The sample uses the <span sdata="cer" target="T:System.AppDomain">AppDomain</span> type to create a dynamic assembly in the sample's <span sdata="cer" target="T:System.AppDomain">AppDomain</span>. It does this by calling the <span sdata="cer" target="Overload:System.AppDomain.DefineDynamicAssembly">DefineDynamicAssembly</span> method.
                </p></li><li><p><span sdata="cer" target="T:System.Reflection.Emit.AssemblyBuilder">AssemblyBuilder</span>  Used to build a dynamic assembly. It can be used to create an assembly for immediate use, or a dynamic assembly can be persisted to a DLL or EXE file.
                </p></li><li><p><span sdata="cer" target="T:System.Reflection.AssemblyName">AssemblyName</span>  Used to define the unique identity of an assembly. The sample uses this type in the simplest possible way, by giving the dynamic assembly the text name "EmittedAssembly".
                </p></li><li><p><span sdata="cer" target="T:System.Reflection.Emit.ModuleBuilder">ModuleBuilder</span>  Used to build a dynamic module in the dynamic assembly.
                </p></li><li><p><span sdata="cer" target="T:System.Reflection.Emit.TypeBuilder">TypeBuilder</span>  Used to build a type dynamically. This type is derived from <span sdata="cer" target="T:System.Type">Type</span>. From it you can request instances of the <span sdata="cer" target="T:System.Reflection.Emit.FieldBuilder">FieldBuilder</span>, <span sdata="cer" target="T:System.Reflection.Emit.ConstructorBuilder">ConstructorBuilder</span>, and <span sdata="cer" target="T:System.Reflection.Emit.MethodBuilder">MethodBuilder</span> types. Using these types the sample generates a complete type.
                </p></li><li><p><span sdata="cer" target="T:System.Reflection.Emit.FieldBuilder">FieldBuilder</span>  Used to create a field in a dynamic type.
                </p></li><li><p><span sdata="cer" target="T:System.Reflection.Emit.ConstructorBuilder">ConstructorBuilder</span>  Used to define a constructor in a dynamic type.
                </p></li><li><p><span sdata="cer" target="T:System.Reflection.Emit.MethodBuilder">MethodBuilder</span>  Used to define a method in a dynamic type.
                </p></li><li><p><span sdata="cer" target="T:System.Reflection.Emit.ILGenerator">ILGenerator</span>  Both <span sdata="cer" target="T:System.Reflection.Emit.MethodBuilder">MethodBuilder</span> and <span sdata="cer" target="T:System.Reflection.Emit.ConstructorBuilder">ConstructorBuilder</span> implement the <span sdata="cer" target="Overload:System.Reflection.Emit.ConstructorBuilder.GetILGenerator">GetILGenerator</span> method. These methods return an instance of the <span sdata="cer" target="T:System.Reflection.Emit.ILGenerator">ILGenerator</span> type, which is used to generate Microsoft Intermediate Language (MSIL) code dynamically for a type.
                </p></li><li><p><span sdata="cer" target="T:System.Threading.Thread">Thread</span>  Used to get an instance of the <span sdata="cer" target="T:System.AppDomain">AppDomain</span> type for the current thread.
                </p></li></ul></div><h1 class="heading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0">See Also</span></h1><div id="seeAlsoSection" class="section"><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Reference</h4><div class="seeAlsoStyle"><span sdata="cer" target="T:System.AppDomain" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">AppDomain</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.Emit.AssemblyBuilder" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">AssemblyBuilder</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.Emit.AssemblyBuilderAccess" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">AssemblyBuilderAccess</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.AssemblyName" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">AssemblyName</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.Emit.ConstructorBuilder" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">ConstructorBuilder</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.Emit.FieldBuilder" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">FieldBuilder</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.Emit.ILGenerator" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">ILGenerator</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.MethodAttributes" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">MethodAttributes</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.Emit.MethodBuilder" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">MethodBuilder</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.MethodInfo" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">MethodInfo</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.Emit.ModuleBuilder" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">ModuleBuilder</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.ResolveEventHandler" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">ResolveEventHandler</span></div><div class="seeAlsoStyle"><span sdata="cer" target="N:System.IO" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">System.IO</span></div><div class="seeAlsoStyle"><span sdata="cer" target="N:System.Reflection" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">System.Reflection</span></div><div class="seeAlsoStyle"><span sdata="cer" target="N:System.Reflection.Emit" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">System.Reflection.Emit</span></div><div class="seeAlsoStyle"><span sdata="cer" target="N:System.Threading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">System.Threading</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Reflection.Emit.TypeBuilder" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">TypeBuilder</span></div><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Other Resources</h4><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Reflection</span></div><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Emitting Dynamic Methods and Assemblies</span></div><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Dynamic Source Code Generation and Compilation</span></div><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Handling and Raising Events</span></div><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Managed and Unmanaged Events</span></div></div></div></div></body></html>