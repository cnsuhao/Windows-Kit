<html><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" /><META NAME="save" CONTENT="history" /><title xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Platform Invoke Technology Sample</title><META NAME="Description" CONTENT="&#xD;&#xA;                    This sample demonstrates techniques for calling functions exported from an unmanaged library. It shows how to:&#xD;&#xA;                "></META><META NAME="MS.LOCALE" CONTENT="en-us" /><style>
body
{font-family:Verdana;font-size:medium;}
div#mainSection, div#header
{font-size:70%;width: 100%;}
div#mainBody
{font-size:90%;}
div#mainSection div table
{font-size: 100%;text-align: left;}
span#nsrTitle
{color:#003399;font-size:90%;font-weight:600;}
div#header
{background-color:#D4DFFF;}
.heading
{font-size:120%;color:#003399;}
.subHeading
{font-size:100%;margin-bottom:4;}
li
{margin-top:-2;margin-bottom:3;}
p
{margin-top:10;margin-bottom:5;}
div.tableSection p
{margin-top:1;margin-bottom:4;}	
div#mainSection table th
{background-color:#EFEFF7;color:#000066;text-align:left;}
div#mainSection table td
{background-color:#F7F7FF;}
div#mainSection table
{margin-top:5px;margin-bottom: px;}
			</style></head><body><div id="header"><table width="100%" id="topTable"></table></div><div id="mainSection"><div id="mainBody"><br /><font color="DarkGray">[This readme is a partial copy of the sample's topic in the SDK documentation.]</font><br /><font color="DarkGray" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"></font><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"></p><div class="introduction"><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    This sample demonstrates techniques for calling functions exported from an unmanaged library. It shows how to:
                </p><ul xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Declare different types
                </p></li><li><p>
                    Use available attributes to modify default behavior
                </p></li><li><p>
                    Use methods of the <span sdata="cer" target="T:System.Runtime.InteropServices.Marshal">Marshal</span> type
                </p></li><li><p>
                    Determine which aspects of garbage collection and threading can affect results.
                </p></li></ul><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    Some of the samples use functions exported from Windows libraries and some use functions exported from a custom library. Certain samples use libraries that are not available on all Windows platforms or use functions in ways that are not supported on all Windows platforms. However, this does not prevent you from understanding specific platform invoke rules that are used in a sample.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    These samples contain the following directory structure:
                </p><div class="caption"></div><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><tr><th><p>
                    Directory
                </p></th><th><p>
                    Contents
                </p></th></tr><tr><td><p>
                    WinAPIs
                </p></td><td><p>
                    Platform Invoke demonstrated using functions exported from Windows libraries
                </p></td></tr><tr><td><p>
                    WinAPIs\CS
                </p></td><td><p>
                    Sources written in C#
                </p></td></tr><tr><td><p>
                    WinAPIs\VB
                </p></td><td><p>
                    Sources written in Visual Basic
                </p></td></tr><tr><td><p>
                    Custom
                </p></td><td><p>
                    Platform Invoke demonstrated using functions exported from a custom type library.
                </p></td></tr><tr><td><p>
                    Custom\CS
                </p></td><td><p>
                    Sources written in C#
                </p></td></tr><tr><td><p>
                    Custom\LIB
                </p></td><td><p>
                    Custom type library source
                </p></td></tr><tr><td><p>
                    Custom\VB
                </p></td><td><p>
                    Sources written in VB
                </p></td></tr></table></div><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    For information about using the samples, see the following topics:
                </p><ul xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p><span sdata="link">How to: View and Download Samples</span></p></li><li><p><span sdata="link">How to: Set Sample Settings</span></p></li></ul></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To build the samples using the Command Prompt</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Open a command prompt window and navigate to one of the language-specific subdirectories.
                </p></li><li><p>
                    Type <span class="input">msbuild</span> [file name]<span class="input">.sln</span> at the command line.
                </p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><b>Note:</b></th></tr><tr><td><p>
					 The Custom platform invoke samples can only be built using Visual Studio. 
								
								
							</p></td></tr></table></div></li></ol></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To build the samples using Visual Studio</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Open Windows Explorer and navigate to one of the language-specific subdirectories.
                </p></li><li><p>
                    Double-click the icon for [file name].sln to open the file in Visual Studio.
                </p></li><li><p>
                    In the <span class="ui">Build</span> menu, select <span class="ui">Build Solution</span>.
                </p></li></ol></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To run the samples</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Navigate to one of the language-specific directories, under either the WinAPIs or Custom directory, containing built executables.
                </p></li><li><p>
                    Type the name of the executable file at the command line.
                </p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><b>Note:</b></th></tr><tr><td><p>
					 This sample builds console applications. You must launch them separately, using the command prompt, in order to view their output.
								
								
							</p></td></tr></table></div></li></ol></div><h1 class="heading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span onclick="ExpandCollapse(requirementsTitleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(requirementsTitleToggle, event)" tabindex="0">Requirements</span></h1><div id="requirementsTitleSection" class="section"><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    These samples require Windows headers which are available to your project if you build using Microsoft Visual Studio 2005, the <span class="ui">Visual Studio 2005 Command Prompt</span>, or if you have the Platform SDK installed and specified in an include path.
                </p><h3 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Remarks</h3><div class="subsection"><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    The following tables summarize the topics demonstrated by these samples, and list the locations of source files for the sample or samples pertaining to that topic.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    How to Use Platform Invoke Attributes
                </p><div class="caption"></div><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><tr><th><p>
                    Attribute
                </p></th><th><p>
                    Description
                </p></th><th><p>
                    Sample
                </p></th></tr><tr><td><p>
                    EntryPoint
                </p></td><td><p>
                    Renames a function for use in managed code.
                </p></td><td><p>
                    WinAPIs\CS\MsgBox.cs WinAPIs\VB\MsgBox.vb
                </p></td></tr><tr><td><p>
                    CharSet
                </p></td><td><p>
                    Chooses how strings are marshaled; also affects the function name search criteria.
                </p></td><td><p>
                    WinAPIs\CS\MsgBox.cs WinAPIs\VB\MsgBox.vb
                </p></td></tr><tr><td><p>
                    ExactSpelling
                </p></td><td><p>
                    Indicates whether the name of the entry point in the unmanaged DLL should be modified to correspond to the CharSet value.
                </p></td><td><p>
                    WinAPIs\CS\MsgBox.cs WinAPIs\VB\MsgBox.vb
                </p></td></tr><tr><td><p>
                    CallingConvention
                </p></td><td><p>
                    Calls functions with varargs.
                </p></td><td><p>
                    WinAPIs\CS\Printf.cs WinAPIs\VB\Printf.vb
                </p></td></tr><tr><td><p>
                    PreserveSig
                </p></td><td><p>
                    Modifies functions that return HRESULTs.
                </p></td><td><p>
                    WinAPIs\CS\CreateObject.cs WinAPIs\VB\CreateObject.vb
                </p></td></tr><tr><td><p>
                    SetLastError
                </p></td><td><p>
                    Guarantees that the error code is saved after a function call.
                </p></td><td><p>
                    WinAPIs\CS\Errors.cs WinAPIs\VB\Errors.vb
                </p></td></tr></table></div><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    How to Marshal Structures and Unions
                </p><div class="caption"></div><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><tr><th><p>
                    Type
                </p></th><th><p>
                    Description
                </p></th><th><p>
                    Sample
                </p></th></tr><tr><td><p>
                    structure ByVal
                </p></td><td><p>
                    Passes a structure as an In parameter.
                </p></td><td><p>
                    Custom\CS\Structs.cs Custom\VB\Structs.vb
                </p></td></tr><tr><td><p>
                    structure ByRef
                </p></td><td><p>
                    Passes a structure as an In/Out parameter.
                </p></td><td><p>
                    WinAPIs\CS\OSInfo.cs WinAPIs\VB\OSInfo.vb
                </p></td></tr><tr><td><p>
                    class ByVal
                </p></td><td><p>
                    Passes a class with only integer members as an In/Out parameter.
                </p></td><td><p>
                    WinAPIs\CS\SysTime.cs WinAPIs\VB\SysTime.vb
                </p></td></tr><tr><td><p>
                    structure with nested structures (flattened)
                </p></td><td><p>
                    Produces a class that represents a structure with nested structures on unmanaged side. Structure is flattened in one big structure on managed side.
                </p></td><td><p>
                    WinAPIs\CS\FindFile.cs WinAPIs\VB\FindFile.vb
                </p></td></tr><tr><td><p>
                    structure with nested structures (not flattened)
                </p></td><td><p>
                    Passes a structure with an embedded structure.
                </p></td><td><p>
                    Custom\CS\Structs.cs Custom\VB\Structs.vb
                </p></td></tr><tr><td><p>
                    structure that contains pointer to another structure
                </p></td><td><p>
                    Passes a structure that contains a pointer to another structure as a member.
                </p></td><td><p>
                    Custom\CS\Structs.cs Custom\VB\Structs.vb
                </p></td></tr><tr><td><p>
                    array of structures that contain only integers ByVal
                </p></td><td><p>
                    Passes an array of structures that contain only integers as an In/Out parameter.
                </p></td><td><p>
                    Custom\CS\Arrays.cs Custom\VB\Arrays.vb
                </p></td></tr><tr><td><p>
                    array of structures that contain integers and strings ByRef
                </p></td><td><p>
                    Passes an array of structures that contain integers and strings as the Out parameter. Callee allocates memory for the array.
                </p></td><td><p>
                    Custom\CS\OutArrayOfStructs.cs Custom\VB\OutArrayOfStructs.vb
                </p></td></tr><tr><td><p>
                    unions with value types
                </p></td><td><p>
                    Passes a union with value types (integer and double).
                </p></td><td><p>
                    Custom\CS\Unions.cs Custom\VB\Unions.vb
                </p></td></tr><tr><td><p>
                    unions with mixed types
                </p></td><td><p>
                    Passes a union with mixed types (integer and String).
                </p></td><td><p>
                    Custom\CS\Unions.cs Custom\VB\Unions.vb
                </p></td></tr></table></div><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    How to Marshal Arrays
                </p><div class="caption"></div><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><tr><th><p>
                    Array
                </p></th><th><p>
                    Description
                </p></th><th><p>
                    Sample
                </p></th></tr><tr><td><p>
                    array of integers ByVal
                </p></td><td><p>
                    Passes an array of integers as an In/Out parameter.
                </p></td><td><p>
                    Custom\CS\Arrays.cs Custom\VB\Arrays.vb
                </p></td></tr><tr><td><p>
                    array of integers ByRef
                </p></td><td><p>
                    Passes an array of integers as an In/Out parameter. Array can be resized.
                </p></td><td><p>
                    Custom\CS\Arrays.cs Custom\VB\Arrays.vb
                </p></td></tr><tr><td><p>
                    2D array of integers ByVal
                </p></td><td><p>
                    Passing a matrix of integers as an In/Out parameter.
                </p></td><td><p>
                    Custom\CS\Arrays.cs Custom\VB\Arrays.vb
                </p></td></tr></table></div><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    Miscellaneous
                </p><div class="caption"></div><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><tr><th><p>
                    Type of Item
                </p></th><th><p>
                    Description
                </p></th><th><p>
                    Sample
                </p></th></tr><tr><td><p>
                    HandleRef
                </p></td><td><p>
                    Presents a case when HandleRef needs to be used to prevent garbage collection.
                </p></td><td><p>
                    WinAPIs\CS\HandleRef.cs WinAPIs\VB\HandleRef.vb
                </p></td></tr><tr><td><p>
                    function pointers
                </p></td><td><p>
                    Passes a delegate to an unmanaged function that expects a function pointer.
                </p></td><td><p>
                    Custom\CS\Callback.cs Custom\VB\Callback.vb
                </p></td></tr><tr><td><p>
                    void*
                </p></td><td><p>
                    Calls a function that has void* as a parameter.
                </p></td><td><p>
                    Custom\CS\Void.cs Custom\VB\Void.vb
                </p></td></tr><tr><td><p>
                    LPARAM
                </p></td><td><p>
                    Uses GCHandle to pass a managed object to unmanaged function that expects LPARAM.
                </p></td><td><p>
                    WinAPIs\CS\GCHandle.cs WinAPIs\VB\GCHandle.vb
                </p></td></tr><tr><td><p>
                    Single-Threaded Apartment (STA)/ Multi-Threaded Apartment (MTA)
                </p></td><td><p>
                    Changes the default apartment settings when an unmanaged function calls CoInitialize.
                </p></td><td><p>
                    WinAPIs\CS\ActiveDir.cs WinAPIs\VB\ActiveDir.vb
                </p></td></tr></table></div><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    Review comments in the source code files for more information on platform invoke.
                </p></div></div><h1 class="heading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0">See Also</span></h1><div id="seeAlsoSection" class="section"><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Concepts</h4><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Consuming Unmanaged DLL Functions</span></div><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Platform Invoke Examples</span></div><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Reference</h4><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Runtime.InteropServices.CharSet" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">CharSet</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Runtime.InteropServices.DllImportAttribute" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">DllImportAttribute</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Runtime.InteropServices.LayoutKind" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">LayoutKind</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Runtime.InteropServices.Marshal" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Marshal</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Runtime.InteropServices.MarshalAsAttribute" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">MarshalAsAttribute</span></div><div class="seeAlsoStyle"><span sdata="cer" target="T:System.Runtime.InteropServices.StructLayoutAttribute" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">StructLayoutAttribute</span></div><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Other Resources</h4><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Default Marshaling Behavior</span></div><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Marshaling Data with Platform Invoke</span></div></div></div></div></body></html>