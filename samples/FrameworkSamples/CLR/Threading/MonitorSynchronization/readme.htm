<html><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" /><META NAME="save" CONTENT="history" /><title xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Monitor Synchronization Technology Sample</title><META NAME="Description" CONTENT="&#xD;&#xA;                    This sample demonstrates how to use the Monitor class for thread synchronization. The Monitor type's static functions are used to enforce mutually exclusive access to a protected block of code. &#xD;&#xA;                "></META><META NAME="MS.LOCALE" CONTENT="en-us" /><style>
body
{font-family:Verdana;font-size:medium;}
div#mainSection, div#header
{font-size:70%;width: 100%;}
div#mainBody
{font-size:90%;}
div#mainSection div table
{font-size: 100%;text-align: left;}
span#nsrTitle
{color:#003399;font-size:90%;font-weight:600;}
div#header
{background-color:#D4DFFF;}
.heading
{font-size:120%;color:#003399;}
.subHeading
{font-size:100%;margin-bottom:4;}
li
{margin-top:-2;margin-bottom:3;}
p
{margin-top:10;margin-bottom:5;}
div.tableSection p
{margin-top:1;margin-bottom:4;}	
div#mainSection table th
{background-color:#EFEFF7;color:#000066;text-align:left;}
div#mainSection table td
{background-color:#F7F7FF;}
div#mainSection table
{margin-top:5px;margin-bottom: px;}
			</style></head><body><div id="header"><table width="100%" id="topTable"></table></div><div id="mainSection"><div id="mainBody"><br /><font color="DarkGray">[This readme is a partial copy of the sample's topic in the SDK documentation.]</font><br /><font color="DarkGray" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"></font><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"></p><div class="introduction"><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    This sample demonstrates how to use the Monitor class for thread synchronization. The Monitor type's static functions are used to enforce mutually exclusive access to a protected block of code. 
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    Review comments in the source code and build.proj files for more information on thread synchronization and the Monitor class.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    For more information about using the samples, see the following topics:
                </p><ul xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p><span sdata="link">How to: View and Download Samples</span></p></li><li><p><span sdata="link">How to: Set Sample Settings</span></p></li></ul></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To build the sample using the command prompt</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Open a Command Prompt window and navigate to one of the language-specific subdirectories for the sample. 
                </p></li><li><p>
                    Type <span class="input">msbuild MonitorSynchronizationCS.sln</span> or <span class="input">msbuild MonitorSynchronizationVB.sln</span>, depending on your choice of programming language, at the command line. 
                </p></li></ol></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To build the sample using Visual Studio</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Open Windows Explorer and navigate to one of the language-specific subdirectories for the sample.
                </p></li><li><p>
                    Double-click the icon for <b>MonitorSynchronizationCS.sln</b> or <b>MonitorSynchronizationVB.sln</b>, depending on your choice of programming language, to open the file in Visual Studio.
                </p></li><li><p>
                    On the <span class="ui">Build</span> menu, click <span class="ui">Build Solution</span>.
                </p></li></ol></div><h3 class="procedureSubHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">To run the sample</h3><div class="subSection"><ol xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Navigate to the directory that contains the new executable, using the command prompt.
                </p></li><li><p>
                    Type <span class="input">Monitor.exe</span> from the command line.
                </p></li></ol><div class="alert"><table width="100%" cellspacing="0" cellpadding="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><tr><th align="left"><b>Note:</b></th></tr><tr><td><p>
					This sample builds a console application. You must launch it using the command prompt in order to view its output. When running the sample, notice that the "Start Writing" and "Stop Writing" output for each writer occurs successively without overlap from threads with different IDs. This is because the threads hold exclusive access to the resource.
								
								
							</p></td></tr></table></div></div><h1 class="heading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0, event)" tabindex="0">Remarks</span></h1><div id="sectionSection0" class="section"><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    The following bullets briefly describe the classes and technologies used by this sample.  
                </p><ul xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Thread Synchronization
                </p><ul><li><p><span sdata="cer" target="T:System.Threading.Monitor">Monitor</span> Provides static functions for entering and exiting a protected block of code. You cannot instantiate an instance of the <span sdata="cer" target="T:System.Threading.Monitor">Monitor</span> type. Instead, you pass to its static methods a reference to any object-derived type that you wish to use as a single node of synchronization. 
                </p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><b>Note:</b></th></tr><tr><td><p>
					 Both Visual Basic and C# implement special keywords to take advantage of the 
								
								<span sdata="cer" target="T:System.Threading.Monitor">Monitor</span> type's static methods. C# uses the <span sdata="langKeyword" value="lock"><span class="keyword">lock</span></span> keyword, and Visual Basic uses the <span sdata="langKeyword" value="SyncLock"><span class="keyword">SyncLock</span></span> keyword.
							</p></td></tr></table></div></li><li><p><span sdata="cer" target="T:System.Threading.AutoResetEvent">AutoResetEvent</span> The sample's main thread waits on an <span sdata="cer" target="T:System.Threading.AutoResetEvent">AutoResetEvent</span> object until it is set, which indicates that the last of the asynchronous functions are finished doing their work.
                </p></li><li><p><span sdata="cer" target="T:System.Threading.Interlocked">Interlocked</span> The sample uses the static <span sdata="cer" target="Overload:System.Threading.Interlocked.Decrement">Decrement</span> method to asynchronously access a counter variable to indicate when the <span sdata="cer" target="T:System.Threading.AutoResetEvent">AutoResetEvent</span> should be set.
                </p></li></ul></li><li><p>
                    Threading
                </p><ul><li><p><span sdata="cer" target="T:System.Threading.ThreadPool">ThreadPool</span> When writing managed code, it is suggested that whenever possible, developers use the <span sdata="cer" target="Overload:System.Threading.ThreadPool.QueueUserWorkItem">QueueUserWorkItem</span> method to implement asynchronous method calls. The sample uses this approach to execute code that contends for a logical resource.
                </p></li></ul></li><li><p>
                    Delegates
                </p><ul><li><p><span sdata="cer" target="T:System.Threading.WaitCallback">WaitCallback</span>  Used to create a type-safe callback method for the <span sdata="cer" target="T:System.Threading.ThreadPool">ThreadPool</span> to use.
                </p></li></ul></li></ul></div><h1 class="heading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0">See Also</span></h1><div id="seeAlsoSection" class="section"><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Concepts</h4><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">The Managed Thread Pool</span></div><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Reference</h4><div class="seeAlsoStyle">AutoResetEvent class</div><div class="seeAlsoStyle">Delegate class</div><div class="seeAlsoStyle">Interlocked class</div><div class="seeAlsoStyle">Monitor class</div><div class="seeAlsoStyle">System.Threading namespace</div><div class="seeAlsoStyle">Thread class</div><div class="seeAlsoStyle">ThreadPool class</div><div class="seeAlsoStyle">ThreadStart delegate</div><div class="seeAlsoStyle">WaitCallback delegate</div><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Other Resources</h4><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Managed Threading</span></div><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Threading Objects and Features</span></div></div></div></div></body></html>