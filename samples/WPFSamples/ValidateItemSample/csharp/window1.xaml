<Window x:Class="ValidateItemSample.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:src="clr-namespace:ValidateItemSample"
    Title="Validating an Object" Width="400" Height="500" ResizeMode="NoResize">
  
  <StackPanel Name="stackPanel1"  Margin="10" 
              Loaded="stackPanel1_Loaded"
              Validation.Error="ItemError">

    <StackPanel.Resources>
      <Style TargetType="HeaderedContentControl">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="HeaderedContentControl">
              <DockPanel LastChildFill="False">
                <ContentPresenter ContentSource="Header" DockPanel.Dock="Left" Focusable="False" VerticalAlignment="Center"/>
                <ContentPresenter ContentSource="Content" Margin="5,0,0,0" DockPanel.Dock="Right" VerticalAlignment="Center"/>
              </DockPanel>

            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style TargetType="Button">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="10,15,15,15"/>
      </Style>
    </StackPanel.Resources>

    <StackPanel.BindingGroup>
      <BindingGroup NotifyOnValidationError="True">
        <BindingGroup.ValidationRules>
          <src:ValidateDateAndPrice ValidationStep="ConvertedProposedValue" />
        </BindingGroup.ValidationRules>
      </BindingGroup>
    </StackPanel.BindingGroup>

    <TextBlock FontSize="12" TextWrapping="Wrap" Margin="5">
      This sample demonstrates how to validate an object by checking 
      multiple properties in a ValidationRule.  When a ValidationRule 
      is added to a BindingGroup, the rule can get the properties of
      the source item in the Validate method.
      <LineBreak/><LineBreak/>
      This sample checks that if an item costs more than 100 dollars, 
      the item is available for at least 7 days.
    </TextBlock>
    
    <TextBlock FontSize="14" FontWeight="Bold"
               Text="Enter an item for sale"/>
    
    <HeaderedContentControl Header="Description">
      <TextBox Width="150" Text="{Binding Path=Description, Mode=TwoWay}"/>
    </HeaderedContentControl>
    <HeaderedContentControl Header="Price">
      <TextBox Name="priceField"  Width="150">
        <TextBox.Text>
          <Binding Path="Price" Mode="TwoWay" >
            <Binding.ValidationRules>
              <src:PriceIsAPositiveNumber/>
            </Binding.ValidationRules>
          </Binding>
        </TextBox.Text>
      </TextBox>
    </HeaderedContentControl>
    <HeaderedContentControl Header="Date Offer Ends">
      <TextBox Name="dateField" Width="150" >
        <TextBox.Text>
          <Binding Path="OfferExpires" StringFormat="d" >
            <Binding.ValidationRules>
              <src:FutureDateRule/>
            </Binding.ValidationRules>
          </Binding>
        </TextBox.Text>
      </TextBox>
    </HeaderedContentControl>
    <StackPanel Orientation="Horizontal">
      <Button IsDefault="True" Click="Submit_Click">_Submit</Button>
      <Button IsCancel="True" Click="Cancel_Click">_Cancel</Button>
    </StackPanel>
    <HeaderedContentControl Header="Description">
      <TextBlock Width="150" Text="{Binding Path=Description}"/>
    </HeaderedContentControl>
    <HeaderedContentControl Header="Price">
      <TextBlock Width="150" Text="{Binding Path=Price, StringFormat=c}"/>
    </HeaderedContentControl>
    <HeaderedContentControl Header="Date Offer Ends">
      <TextBlock Width="150" Text="{Binding Path=OfferExpires, StringFormat=d}"/>
    </HeaderedContentControl>
  </StackPanel>
</Window>
