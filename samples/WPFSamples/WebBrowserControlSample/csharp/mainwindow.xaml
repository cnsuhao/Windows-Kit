<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="WebBrowserControlSample.MainWindow"
    Title="WebBrowser Control Sample"
    MinHeight="200" MinWidth="200"
    Height="600" Width="800"
    WindowStartupLocation="CenterScreen" Background="LightSteelBlue">
    <DockPanel>
        
    <StackPanel DockPanel.Dock="Top" Background="LightSteelBlue">

        
        <Border Background="Black">
          <TextBlock Margin="10,0,0,0" Text="Web Navigation Demo" FontSize="16" Foreground="White"></TextBlock>
        </Border>

        <!-- Standard Web Navigation Buttons -->
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="5">
            <Button x:Name="backButton" Content="Back" Click="backButton_Click" />
            <Button x:Name="forwardButton" Content="Forward" Click="forwardButton_Click" Margin="5,0,0,0"  />
            <Button x:Name="refreshButton" Content="Refresh" Click="refreshButton_Click" Margin="5,0,0,0" />
            <TextBlock VerticalAlignment="Center" Margin="10,0,0,0">Address:</TextBlock>
            <TextBox x:Name="addressTextBox" Text="http://msdn.microsoft.com" Width="300" />
            <Button x:Name="goNavigateButton" Content="Go (.Navigate)" Click="goNavigateButton_Click" IsDefault="True" />
            <Button x:Name="goSourceButton" Content="Go (.Source)" Click="goSourceButton_Click" />
        </StackPanel>

        <!-- This section of controls demonstrates bridging WPF and HTML code. -->
        <Border Background="Black">
            <TextBlock Margin="10,0,0,0" Text="Bridging WPF and HTML Demo" FontSize="16" Foreground="White" />
        </Border>

        <!-- Buttons for loading an HTML doc using NavigateToString and NavigateToStream respectively. -->
        <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
            <Button x:Name="goNavigateToStringButton" Content="Load HTML Doc (.NavigateToString)" Click="goNavigateToStringButton_Click" Margin="5,0,0,0"  />
            <Button x:Name="goNavigateToStreamButton" Content="Load HTML Doc (.NavigateToStream)" Click="goNavigateToStreamButton_Click" Margin="5,0,0,0" />
        </StackPanel>
        
        <!-- Button for Loading an HTML document with Script and a button for accessing that script. -->
        <StackPanel Orientation="Horizontal" Margin="5">
            <Button x:Name="loadHtmlDocWithScriptButton" Content="Load HTML Document with Script" Click="loadHtmlDocWithScriptButton_Click"/>
            <Button x:Name="callScriptFunctionNoParamButton" Margin="17,0,0,0" Content="Call Script Function (No Parameters)" Click="callScriptFunctionNoParamButton_Click" />
        </StackPanel>

        <!-- Use the TextBox to pass a string as a parameter to the JavaScript function. -->
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="5">
            <TextBlock DockPanel.Dock="Left" Margin="5,0,0,0" FontWeight="Bold" VerticalAlignment="Center">Message to add to HTML:</TextBlock>
            <TextBox x:Name="messageTextBox" Width="400"  Margin="5,0,0,0" Text="Message from WPF" />
            <Button x:Name="callScriptFunctionParamButton" Content="Call Script Function (With Parameters)" Click="callScriptFunctionParamButton_Click" />
        </StackPanel>

        <!-- This section of controls demonstrates bridging WPF and Microsoft Word. -->
        <Border Background="Black">
            <TextBlock Margin="10,0,0,0" Text="Bridging WPF and Microsoft Word Demo" FontSize="16" Foreground="White" />
        </Border>
        
        <!-- Shows how to load other types of documents like a Microsoft Word document into the browser and then
             access the document. -->
        <StackPanel Orientation="Horizontal" Margin="5">
            <Button x:Name="loadWordDoc" Margin="5,0,0,0" Content="Load Word Doc" Click="goNavigateToWordDoc_Click" />
            <Button x:Name="saveWordDoc" Margin="5,0,0,0" Content="Save Word Doc" Click="saveWordDoc_Click" />
        </StackPanel>

        <!-- Status Bar -->
        <StatusBar Background="Orange">
            <StatusBarItem x:Name="informationStatusBarItem" Content="Ready" />
        </StatusBar>


        </StackPanel>

        <!-- Web Browser Control -->
        <WebBrowser x:Name="webBrowser" DockPanel.Dock="Bottom" Navigating="webBrowser_Navigating" Navigated="webBrowser_Navigated" LoadCompleted="webBrowser_LoadCompleted" />


    </DockPanel>
</Window>
