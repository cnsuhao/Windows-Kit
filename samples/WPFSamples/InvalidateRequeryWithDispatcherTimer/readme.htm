<html><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" /><META NAME="save" CONTENT="history" /><title xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Disable Command Source via Dispatcher Timer Sample</title><META NAME="Description" CONTENT="&#xD;&#xA;                    This sample shows how to enable and disable a command source via a T:System.Windows.Threading.DispatcherTimer. &#xD;&#xA;                "></META><META NAME="MS.LOCALE" CONTENT="en-us" /><style>
body
{font-family:Verdana;font-size:medium;}
div#mainSection, div#header
{font-size:70%;width: 100%;}
div#mainBody
{font-size:90%;}
div#mainSection div table
{font-size: 100%;text-align: left;}
span#nsrTitle
{color:#003399;font-size:90%;font-weight:600;}
div#header
{background-color:#D4DFFF;}
.heading
{font-size:120%;color:#003399;}
.subHeading
{font-size:100%;margin-bottom:4;}
li
{margin-top:-2;margin-bottom:3;}
p
{margin-top:10;margin-bottom:5;}
div.tableSection p
{margin-top:1;margin-bottom:4;}	
div#mainSection table th
{background-color:#EFEFF7;color:#000066;text-align:left;}
div#mainSection table td
{background-color:#F7F7FF;}
div#mainSection table
{margin-top:5px;margin-bottom: px;}
			</style></head><body><div id="header"><table width="100%" id="topTable"></table></div><div id="mainSection"><div id="mainBody"><br /><font color="DarkGray">[This readme is a partial copy of the sample's topic in the SDK documentation.]</font><br /><font color="DarkGray" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"></font><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"></p><div class="introduction"><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    This sample shows how to enable and disable a command source via a <span sdata="cer" target="T:System.Windows.Threading.DispatcherTimer">DispatcherTimer</span>. 
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    Command sources, such as the <span sdata="cer" target="T:System.Windows.Controls.MenuItem">MenuItem</span> class and the <span sdata="cer" target="T:System.Windows.Controls.Button">Button</span> class, listen to the <span sdata="cer" target="E:System.Windows.Input.RoutedCommand.CanExecuteChanged">CanExecuteChanged</span> event on the <span sdata="cer" target="T:System.Windows.Input.RoutedCommand">RoutedCommand</span> they are attached to in order to determine when they need to query the command to see if the command can execute on the current command target.  Command sources will typically disable themselves if the command cannot execute and enable themselves if the command can execute, such as when a <span sdata="cer" target="T:System.Windows.Controls.MenuItem">MenuItem</span> gray's itself out when the command cannot execute.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    The <span sdata="cer" target="T:System.Windows.Input.CommandManager">CommandManager</span> notifies the <span sdata="cer" target="T:System.Windows.Input.RoutedCommand">RoutedCommand</span> via the <span sdata="cer" target="E:System.Windows.Input.CommandManager.RequerySuggested">RequerySuggested</span> event that conditions have changed with the command target.  The <span sdata="cer" target="T:System.Windows.Input.RoutedCommand">RoutedCommand</span> raises the <span sdata="cer" target="E:System.Windows.Input.RoutedCommand.CanExecuteChanged">CanExecuteChanged</span> event which the command source listens to.  Normally, this notification mechanism is adequate, but there are some situations where the <span sdata="cer" target="T:System.Windows.Input.CommandManager">CommandManager</span> is unaware that the conditions have changed on the command target and thus the <span sdata="cer" target="E:System.Windows.Input.CommandManager.RequerySuggested">RequerySuggested</span> event is never raised and the command source never queries the <span sdata="cer" target="T:System.Windows.Input.RoutedCommand">RoutedCommand</span>.  In these situations, the <span sdata="cer" target="T:System.Windows.Input.CommandManager">CommandManager</span> can be forced to raise the <span sdata="cer" target="E:System.Windows.Input.CommandManager.RequerySuggested">RequerySuggested</span> event by calling <span sdata="cer" target="M:System.Windows.Input.CommandManager.InvalidateRequerySuggested">InvalidateRequerySuggested</span>.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    This sample creates a <span sdata="cer" target="T:System.Windows.Input.RoutedCommand">RoutedCommand</span> that can be executed only when the seconds in the current time are greater than a target value.  A <span sdata="cer" target="T:System.Windows.Threading.DispatcherTimer">DispatcherTimer</span> is created that calls <span sdata="cer" target="M:System.Windows.Input.CommandManager.InvalidateRequerySuggested">InvalidateRequerySuggested</span> every second.  This insures that the command source will receive the <span sdata="cer" target="E:System.Windows.Input.RoutedCommand.CanExecuteChanged">CanExecuteChanged</span> event so that it can call the <span sdata="cer" target="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)">CanExecute</span> method on the command.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    For another variation of this sample see the <span sdata="link">Disable Command Source via System Timer Sample</span> sample.  And for more information on commanding see the <span sdata="link">Commanding Overview</span>.
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    This sample demonstrates a specific feature of the Windows Presentation Foundation and, consequently, does not follow application development best practices. For comprehensive coverage of Windows Presentation Foundation (WPF) and Microsoft .NET Framework application development best practices, refer to the following as appropriate:
                </p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    Accessibility - <span sdata="link">Accessibility Best Practices</span></p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    Security - <span sdata="link">Windows Presentation Foundation Security</span></p><p xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
                    Localization - <span sdata="link">WPF Globalization and Localization Overview</span></p></div><h1 class="heading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0, event)" tabindex="0">Building the Sample</span></h1><div id="sectionSection0" class="section"><ul xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    Install the Windows Software Development Kit (SDK) and open its build environment command window. On the Start menu, point to All Programs, Microsoft Windows SDK, and then click CMD Shell.
                </p></li><li><p>
                    Download the sample, usually from the software development kit (SDK) documentation, to your hard disk drive.
                </p></li><li><p>
                    To build the sample from the build environment command window, go to the source directory of the sample. At the command prompt, type MSBUILD.
                </p></li><li><p>
                    To build the sample in Microsoft Visual Studio, load the sample solution or project file and then press CTRL+SHIFT+B.
                </p></li></ul></div><h1 class="heading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span onclick="ExpandCollapse(sectionToggle1)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle1, event)" tabindex="0">Running the Sample</span></h1><div id="sectionSection1" class="section"><ul xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><li><p>
                    To run the compiled sample from the build environment command window, execute the .exe file in the Bin\Debug or Bin\Release folder contained under the sample source code folder.
                </p></li><li><p>
                    To run the compiled sample with debugging in Visual Studio, press F5.
                </p></li></ul></div><h1 class="heading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0">See Also</span></h1><div id="seeAlsoSection" class="section"><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Tasks</h4><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Disable Command Source via System Timer Sample</span></div><h4 class="subHeading" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Concepts</h4><div class="seeAlsoStyle"><span sdata="link" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt">Commanding Overview</span></div></div></div></div></body></html>