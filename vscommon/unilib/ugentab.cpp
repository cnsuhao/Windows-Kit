//----------------------------------------------------------------------------
// Microsoft Confidential
// Copyright (C) 1995-2000 Microsoft Corporation.  All Rights Reserved.
//
//----------------------------------------------------------------------------
#include "pch.h"
#include "utable.h"

/* Generated by
objd\ux -compress:10 !g 
*/

// use data tables, otherwise use logic
// this turns out to be a little smaller
#define USE_DATA

static const unsigned char Gen_PAGE_00[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 
	/* 1 */ 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 
	/* 2 */ 0x10, 0x0f, 0x0f, 0x0f, 0x17, 0x0f, 0x0f, 0x0f, 0x09, 0x0a, 0x0f, 0x16, 0x0f, 0x0d, 0x0f, 0x0f, 
	/* 3 */ 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x0f, 0x0f, 0x16, 0x16, 0x16, 0x0f, 
	/* 4 */ 0x0f, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
	/* 5 */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x09, 0x0f, 0x0a, 0x18, 0x0e, 
	/* 6 */ 0x18, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
	/* 7 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x09, 0x16, 0x0a, 0x16, 0x1a, 
	/* 8 */ 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 
	/* 9 */ 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 
	/* A */ 0x10, 0x0f, 0x17, 0x17, 0x17, 0x17, 0x19, 0x19, 0x18, 0x19, 0x02, 0x0b, 0x16, 0x0d, 0x19, 0x18, 
	/* B */ 0x19, 0x16, 0x08, 0x08, 0x18, 0x02, 0x19, 0x0f, 0x18, 0x08, 0x02, 0x0c, 0x08, 0x08, 0x08, 0x0f, 
	/* C */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
	/* D */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x16, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 
	/* E */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
	/* F */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x16, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02

/*	Compressed data:
      90, // length (30 nodes)
      32, 0x1a, 
      -1, 0x10, 
       3, 0x0f, 
      -1, 0x17, 
       3, 0x0f, 
      -6, 0x09, 0x0a, 0x0f, 0x16, 0x0f, 0x0d, 
       2, 0x0f, 
      10, 0x06, 
       2, 0x0f, 
       3, 0x16, 
       2, 0x0f, 
      26, 0x01, 
      -6, 0x09, 0x0f, 0x0a, 0x18, 0x0e, 0x18, 
      26, 0x02, 
      -4, 0x09, 0x16, 0x0a, 0x16, 
      33, 0x1a, 
      -2, 0x10, 0x0f, 
       4, 0x17, 
       2, 0x19, 
     -10, 0x18, 0x19, 0x02, 0x0b, 0x16, 0x0d, 0x19, 0x18, 0x19, 0x16, 
       2, 0x08, 
      -8, 0x18, 0x02, 0x19, 0x0f, 0x18, 0x08, 0x02, 0x0c, 
       3, 0x08, 
      -1, 0x0f, 
      23, 0x01, 
      -1, 0x16, 
       7, 0x01, 
      24, 0x02, 
      -1, 0x16, 
       8, 0x02
*/
};

#ifdef USE_DATA
static const unsigned char Gen_PAGE_01[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 1 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 2 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 3 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
	/* 4 */ 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 5 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 6 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 7 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x02, 
	/* 8 */ 0x02, 0x01, 0x01, 0x02, 0x01, 0x02, 0x01, 0x01, 0x02, 0x01, 0x01, 0x01, 0x02, 0x02, 0x01, 0x01, 
	/* 9 */ 0x01, 0x01, 0x02, 0x01, 0x01, 0x02, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0x02, 0x01, 
	/* A */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x01, 0x02, 0x01, 0x02, 0x02, 0x01, 0x02, 0x01, 0x01, 
	/* B */ 0x02, 0x01, 0x01, 0x01, 0x02, 0x01, 0x02, 0x01, 0x01, 0x02, 0x02, 0x05, 0x01, 0x02, 0x02, 0x02, 
	/* C */ 0x05, 0x05, 0x05, 0x05, 0x01, 0x03, 0x02, 0x01, 0x03, 0x02, 0x01, 0x03, 0x02, 0x01, 0x02, 0x01, 
	/* D */ 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x02, 0x01, 0x02, 
	/* E */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* F */ 0x02, 0x01, 0x03, 0x02, 0x01, 0x02, 0x01, 0x01, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02
/*	Compressed data:
     263, // length (42 nodes)
     -55, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
       2, 0x02, 
     -15, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
       2, 0x02, 
     -46, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
       2, 0x01, 
      -4, 0x02, 0x01, 0x02, 0x01, 
       3, 0x02, 
       2, 0x01, 
      -3, 0x02, 0x01, 0x02, 
       2, 0x01, 
      -1, 0x02, 
       3, 0x01, 
       2, 0x02, 
       4, 0x01, 
      -1, 0x02, 
       2, 0x01, 
      -1, 0x02, 
       3, 0x01, 
       3, 0x02, 
       2, 0x01, 
      -1, 0x02, 
       2, 0x01, 
      -5, 0x02, 0x01, 0x02, 0x01, 0x02, 
       2, 0x01, 
      -6, 0x02, 0x01, 0x02, 0x02, 0x01, 0x02, 
       2, 0x01, 
      -1, 0x02, 
       3, 0x01, 
      -3, 0x02, 0x01, 0x02, 
       2, 0x01, 
       2, 0x02, 
      -2, 0x05, 0x01, 
       3, 0x02, 
       4, 0x05, 
     -24, 0x01, 0x03, 0x02, 0x01, 0x03, 0x02, 0x01, 0x03, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
       2, 0x02, 
     -17, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
       2, 0x02, 
      -5, 0x01, 0x03, 0x02, 0x01, 0x02, 
       3, 0x01, 
      -7, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
*/
};
#endif

#ifdef USE_DATA
static const unsigned char Gen_PAGE_02[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
//	/* 1 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
//	/* 2 */ 0xff, 0xff, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
//	/* 3 */ 0x01, 0x02, 0x01, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 4 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 5 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
//	/* 6 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
//	/* 7 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
//	/* 8 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
//	/* 9 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
//	/* A */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xff, 0xff, 
//	/* B */ 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x18, 0x18, 0x04, 0x04, 0x04, 0x04, 0x04, 
//	/* C */ 0x04, 0x04, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 
//	/* D */ 0x04, 0x04, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 
//	/* E */ 0x04, 0x04, 0x04, 0x04, 0x04, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x04, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      80, // length (16 nodes)
     -32, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
       2, 0xff, 
     -18, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
      28, 0xff, 
      94, 0x02, 
       2, 0xff, 
       9, 0x04, 
       2, 0x18, 
       7, 0x04, 
      14, 0x18, 
       2, 0x04, 
      14, 0x18, 
       5, 0x04, 
       9, 0x18, 
       1, 0x04, 
      17, 0xff
};
#endif

static const unsigned char Gen_PAGE_03[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
	/* 1 */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
	/* 2 */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
	/* 3 */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
	/* 4 */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0xff, 
	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 6 */ 0x13, 0x13, 0x13, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 7 */ 0xff, 0xff, 0xff, 0xff, 0x18, 0x18, 0xff, 0xff, 0xff, 0xff, 0x04, 0xff, 0xff, 0xff, 0x0f, 0xff, 
	/* 8 */ 0xff, 0xff, 0xff, 0xff, 0x18, 0x18, 0x01, 0x0f, 0x01, 0x01, 0x01, 0xff, 0x01, 0xff, 0x01, 0x01, 
	/* 9 */ 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
	/* A */ 0x01, 0x01, 0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 
	/* B */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
	/* C */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xff, 
	/* D */ 0x02, 0x02, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0xff, 0xff, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* E */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* F */ 0x02, 0x02, 0x02, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

/*	Compressed data:
      79, // length (28 nodes)
      79, 0x13, 
      17, 0xff, 
       3, 0x13, 
      17, 0xff, 
       2, 0x18, 
       4, 0xff, 
      -1, 0x04, 
       3, 0xff, 
      -1, 0x0f, 
       5, 0xff, 
       2, 0x18, 
      -2, 0x01, 0x0f, 
       3, 0x01, 
      -3, 0xff, 0x01, 0xff, 
       2, 0x01, 
      -1, 0x02, 
      17, 0x01, 
      -1, 0xff, 
       9, 0x01, 
      35, 0x02, 
      -1, 0xff, 
       2, 0x02, 
       3, 0x01, 
       3, 0x02, 
       2, 0xff, 
     -21, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
       5, 0x02, 
      12, 0xff
*/
};

#ifndef USE_DATA
static const unsigned char Gen_PAGE_0482[] = {
    /* 8 */             0x19, 0x13, 0x13, 0x13, 0x13, 0xff, 0x15, 0x15, 0xff, 0xff };
static const unsigned char Gen_PAGE_04C0[] = {
  	/* C */ 0x05, 0x01, 0x02, 0x01, 0x02, 0xff, 0xff, 0x01, 0x02, 0xff, 0xff, 0x01, 0x02, 0xff, 0xff, 0xff };
#else
static const unsigned char Gen_PAGE_04[] = {
//	Uncompressed data:
//	/* 0 */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
//	/* 1 */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
//	/* 2 */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
//	/* 3 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
//	/* 4 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
//	/* 5 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
//	/* 6 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
//	/* 7 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02,
//	/* 8 */ 0x01, 0x02, 0x19, 0x13, 0x13, 0x13, 0x13, 0xff, 0x15, 0x15, 0xff, 0xff, 0x01, 0x02, 0x01, 0x02,
//	/* 9 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
//	/* A */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
//	/* B */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
//	/* C */ 0x01, 0x01, 0x02, 0x01, 0x02, 0xff, 0xff, 0x01, 0x02, 0xff, 0xff, 0x01, 0x02, 0xff, 0xff, 0xff, 
//	/* D */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
//	/* E */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
//	/* F */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0xff, 0xff, 0x01, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
     160, // length (6 nodes)
      48, 0x01, 
      48, 0x02, 
     -35, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
          0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
          0x01, 0x02, 0x19, 
       4, 0x13, 
    -115, 0xff, 0x15, 0x15, 0xff, 0xff,
          0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
          0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
          0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
          0x01, 0x02, 0x01, 0x02, 0x01, 0x01, 0x02, 0x01, 0x02, 
          0xff, 0xff, 0x01, 0x02, 0xff, 0xff, 0x01, 0x02, 0xff, 0xff, 0xff,
	  0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	  0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	  0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0xff, 0xff, 0x01, 0x02, 
       6, 0xff
};
#endif

static const unsigned char Gen_PAGE_05[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 1 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 2 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 3 */ 0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
//	/* 4 */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
//	/* 5 */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xff, 0x04, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 
//	/* 6 */ 0xff, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
//	/* 7 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
//	/* 8 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xff, 0x0f, 0x0d, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 9 */ 0xff, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
//	/* A */ 0x13, 0x13, 0xff, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
//	/* B */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0xff, 0x13, 0x13, 0x13, 0x0f, 0x13, 
//	/* C */ 0x0f, 0x13, 0x13, 0x0f, 0x13, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* E */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0x05, 0x05, 0x05, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
//    51, // length (23 nodes)
      50, // length (18 nodes)
      49, 0xff, 
      38, 0x01, 
//tweak:
      -3, 0xff, 0xff, 0x04,
//     2, 0xff, 
//    -1, 0x04, 
       6, 0x0f, 
       1, 0xff, 
      39, 0x02, 
      -3, 0xff, 0x0f, 0x0d, 
       6, 0xff, 
      17, 0x13, 
      -1, 0xff, 
      23, 0x13, 
//tweak:
     -11, 0xff, 0x13, 0x13, 0x13, 0x0f, 0x13, 0x0f, 0x13, 0x13, 0x0f, 0x13, 
//    -1, 0xff, 
//     3, 0x13, 
//    -3, 0x0f, 0x13, 0x0f, 
//     2, 0x13, 
//    -2, 0x0f, 0x13, 
      11, 0xff, 
      27, 0x05, 
       5, 0xff, 
       3, 0x05, 
       2, 0x0f, 
      11, 0xff
};

static const unsigned char Gen_PAGE_06[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 
	/* 1 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0x0f, 
	/* 2 */ 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 4 */ 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x13, 0x13, 0x13, 0x13, 0x13, 
	/* 5 */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 6 */ 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 
	/* 7 */ 0x13, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* C */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* D */ 0x05, 0x05, 0x05, 0x05, 0x0f, 0x05, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x15, 0x15, 0x13, 
	/* E */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x04, 0x04, 0x13, 0x13, 0x19, 0x13, 0x13, 0x13, 0x13, 0xff, 0xff, 
	/* F */ 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x05, 0x05, 0x05, 0x19, 0x19, 0xff
/*	Compressed data:
      62, // length (30 nodes)
      12, 0xff, 
      -1, 0x0f, 
      14, 0xff, 
      -1, 0x0f, 
       3, 0xff, 
      -2, 0x0f, 0xff, 
      26, 0x05, 
       5, 0xff, 
      -1, 0x04, 
      10, 0x05, 
      11, 0x13, 
      10, 0xff, 
      10, 0x06, 
       4, 0x0f, 
       2, 0xff, 
      -1, 0x13, 
      99, 0x05, 
      -2, 0x0f, 0x05, 
       7, 0x13, 
       2, 0x15, 
       6, 0x13, 
       2, 0x04, 
       2, 0x13, 
      -1, 0x19, 
       4, 0x13, 
       2, 0xff, 
      10, 0x06, 
       3, 0x05, 
       2, 0x19, 
      -1, 0xff, 
*/
};

static const unsigned char Gen_PAGE_07[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0x1b, 
//	/* 1 */ 0x05, 0x13, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 
//	/* 3 */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
//	/* 4 */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 6 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 7 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
//	/* B */ 0x13, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      21, // length (9 nodes)
      14, 0x0f, 
      -4, 0xff, 0x1b, 0x05, 0x13, 
      27, 0x05, 
       3, 0xff, 
      27, 0x13, 
      53, 0xff, 
      38, 0x05, 
      11, 0x13, 
      79, 0xff
};

static const unsigned char Gen_PAGE_09[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0xff, 0x13, 0x13, 0x14, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x13, 0x05, 0x14, 0x14, 
	/* 4 */ 0x14, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x14, 0x14, 0x14, 0x14, 0x13, 0xff, 0xff, 
	/* 5 */ 0x05, 0x13, 0x13, 0x13, 0x13, 0xff, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 6 */ 0x05, 0x05, 0x13, 0x13, 0x0f, 0x0f, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
	/* 7 */ 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 8 */ 0xff, 0x13, 0x14, 0x14, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x05, 
	/* 9 */ 0x05, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* B */ 0x05, 0xff, 0x05, 0xff, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x13, 0xff, 0x14, 0x14, 
	/* C */ 0x14, 0x13, 0x13, 0x13, 0x13, 0xff, 0xff, 0x14, 0x14, 0xff, 0xff, 0x14, 0x14, 0x13, 0xff, 0xff, 
	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x14, 0xff, 0xff, 0xff, 0xff, 0x05, 0x05, 0xff, 0x05, 
	/* E */ 0x05, 0x05, 0x13, 0x13, 0xff, 0xff, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
	/* F */ 0x05, 0x05, 0x17, 0x17, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff

/*	Compressed data:
     116, // length (56 nodes)
      -1, 0xff, 
       2, 0x13, 
      -2, 0x14, 0xff, 
      53, 0x05, 
       2, 0xff, 
      -2, 0x13, 0x05, 
       3, 0x14, 
       8, 0x13, 
       4, 0x14, 
      -1, 0x13, 
       2, 0xff, 
      -1, 0x05, 
       4, 0x13, 
       3, 0xff, 
      10, 0x05, 
       2, 0x13, 
       2, 0x0f, 
      10, 0x06, 
      -1, 0x0f, 
      16, 0xff, 
      -1, 0x13, 
       2, 0x14, 
      -1, 0xff, 
       8, 0x05, 
       2, 0xff, 
       2, 0x05, 
       2, 0xff, 
      22, 0x05, 
      -1, 0xff, 
       7, 0x05, 
      -2, 0xff, 0x05, 
       3, 0xff, 
       4, 0x05, 
       2, 0xff, 
      -2, 0x13, 0xff, 
       3, 0x14, 
       4, 0x13, 
       2, 0xff, 
       2, 0x14, 
       2, 0xff, 
       2, 0x14, 
      -1, 0x13, 
       9, 0xff, 
      -1, 0x14, 
       4, 0xff, 
       2, 0x05, 
      -1, 0xff, 
       3, 0x05, 
       2, 0x13, 
       2, 0xff, 
      10, 0x06, 
       2, 0x05, 
       2, 0x17, 
       6, 0x08, 
      -1, 0x19, 
       5, 0xff
*/
};

static const unsigned char Gen_PAGE_0A[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0xff, 0xff, 0x13, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0x05, 
	/* 1 */ 0x05, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 3 */ 0x05, 0xff, 0x05, 0x05, 0xff, 0x05, 0x05, 0xff, 0x05, 0x05, 0xff, 0xff, 0x13, 0xff, 0x14, 0x14, 
	/* 4 */ 0x14, 0x13, 0x13, 0xff, 0xff, 0xff, 0xff, 0x13, 0x13, 0xff, 0xff, 0x13, 0x13, 0x13, 0xff, 0xff, 
	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0xff, 
	/* 6 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
	/* 7 */ 0x13, 0x13, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 8 */ 0xff, 0x13, 0x13, 0x14, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0xff, 0x05, 
	/* 9 */ 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* B */ 0x05, 0xff, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x13, 0x05, 0x14, 0x14, 
	/* C */ 0x14, 0x13, 0x13, 0x13, 0x13, 0x13, 0xff, 0x13, 0x13, 0x14, 0xff, 0x14, 0x14, 0x13, 0xff, 0xff, 
	/* D */ 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* E */ 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

/*	Compressed data:
     129, // length (61 nodes)
       2, 0xff, 
      -1, 0x13, 
       2, 0xff, 
       6, 0x05, 
       4, 0xff, 
       2, 0x05, 
       2, 0xff, 
      22, 0x05, 
      -1, 0xff, 
       7, 0x05, 
      -1, 0xff, 
       2, 0x05, 
      -1, 0xff, 
       2, 0x05, 
      -1, 0xff, 
       2, 0x05, 
       2, 0xff, 
      -2, 0x13, 0xff, 
       3, 0x14, 
       2, 0x13, 
       4, 0xff, 
       2, 0x13, 
       2, 0xff, 
       3, 0x13, 
      11, 0xff, 
       4, 0x05, 
      -2, 0xff, 0x05, 
       7, 0xff, 
      10, 0x06, 
       2, 0x13, 
       3, 0x05, 
      12, 0xff, 
       2, 0x13, 
      -2, 0x14, 0xff, 
       7, 0x05, 
      -3, 0xff, 0x05, 0xff, 
       3, 0x05, 
      -1, 0xff, 
      22, 0x05, 
      -1, 0xff, 
       7, 0x05, 
      -1, 0xff, 
       2, 0x05, 
      -1, 0xff, 
       5, 0x05, 
       2, 0xff, 
      -2, 0x13, 0x05, 
       3, 0x14, 
       5, 0x13, 
      -1, 0xff, 
       2, 0x13, 
      -2, 0x14, 0xff, 
       2, 0x14, 
      -1, 0x13, 
       2, 0xff, 
      -1, 0x05, 
      15, 0xff, 
      -1, 0x05, 
       5, 0xff, 
      10, 0x06, 
      16, 0xff
*/
};

static const unsigned char Gen_PAGE_0B[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0xff, 0x13, 0x14, 0x14, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x05, 
	/* 1 */ 0x05, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 3 */ 0x05, 0xff, 0x05, 0x05, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x13, 0x05, 0x14, 0x13, 
	/* 4 */ 0x14, 0x13, 0x13, 0x13, 0xff, 0xff, 0xff, 0x14, 0x14, 0xff, 0xff, 0x14, 0x14, 0x13, 0xff, 0xff, 
	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x13, 0x14, 0xff, 0xff, 0xff, 0xff, 0x05, 0x05, 0xff, 0x05, 
	/* 6 */ 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
	/* 7 */ 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 8 */ 0xff, 0xff, 0x13, 0x14, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0x05, 0x05, 
	/* 9 */ 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0x05, 0x05, 0xff, 0x05, 0xff, 0x05, 0x05, 
	/* A */ 0xff, 0xff, 0xff, 0x05, 0x05, 0xff, 0xff, 0xff, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0x05, 0x05, 
	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0x14, 0x14, 
	/* C */ 0x13, 0x14, 0x14, 0xff, 0xff, 0xff, 0x14, 0x14, 0x14, 0xff, 0x14, 0x14, 0x14, 0x13, 0xff, 0xff, 
	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x14, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
	/* F */ 0x08, 0x08, 0x08, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

/*	Compressed data:
     140, // length (65 nodes)
      -2, 0xff, 0x13, 
       2, 0x14, 
      -1, 0xff, 
       8, 0x05, 
       2, 0xff, 
       2, 0x05, 
       2, 0xff, 
      22, 0x05, 
      -1, 0xff, 
       7, 0x05, 
      -1, 0xff, 
       2, 0x05, 
       2, 0xff, 
       4, 0x05, 
       2, 0xff, 
      -5, 0x13, 0x05, 0x14, 0x13, 0x14, 
       3, 0x13, 
       3, 0xff, 
       2, 0x14, 
       2, 0xff, 
       2, 0x14, 
      -1, 0x13, 
       8, 0xff, 
      -2, 0x13, 0x14, 
       4, 0xff, 
       2, 0x05, 
      -1, 0xff, 
       3, 0x05, 
       4, 0xff, 
      10, 0x06, 
      -1, 0x19, 
      17, 0xff, 
      -3, 0x13, 0x14, 0xff, 
       6, 0x05, 
       3, 0xff, 
       3, 0x05, 
      -1, 0xff, 
       4, 0x05, 
       3, 0xff, 
       2, 0x05, 
      -3, 0xff, 0x05, 0xff, 
       2, 0x05, 
       3, 0xff, 
       2, 0x05, 
       3, 0xff, 
       3, 0x05, 
       3, 0xff, 
       8, 0x05, 
      -1, 0xff, 
       3, 0x05, 
       4, 0xff, 
       2, 0x14, 
      -1, 0x13, 
       2, 0x14, 
       3, 0xff, 
       3, 0x14, 
      -1, 0xff, 
       3, 0x14, 
      -1, 0x13, 
       9, 0xff, 
      -1, 0x14, 
      15, 0xff, 
       9, 0x06, 
       3, 0x08, 
      13, 0xff
*/
};

static const unsigned char Gen_PAGE_0C[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0xff, 0x14, 0x14, 0x14, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 
	/* 1 */ 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0x13, 0x13, 
	/* 4 */ 0x13, 0x14, 0x14, 0x14, 0x14, 0xff, 0x13, 0x13, 0x13, 0xff, 0x13, 0x13, 0x13, 0x13, 0xff, 0xff, 
	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0x13, 0x13, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 6 */ 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
	/* 7 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 8 */ 0xff, 0xff, 0x14, 0x14, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 
	/* 9 */ 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* B */ 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0x14, 0x13, 
	/* C */ 0x14, 0x14, 0x14, 0x14, 0x14, 0xff, 0x13, 0x14, 0x14, 0xff, 0x14, 0x14, 0x13, 0x13, 0xff, 0xff, 
	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0x14, 0x14, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 0xff, 
	/* E */ 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

/*	Compressed data:
     109, // length (53 nodes)
      -1, 0xff, 
       3, 0x14, 
      -1, 0xff, 
       8, 0x05, 
      -1, 0xff, 
       3, 0x05, 
      -1, 0xff, 
      23, 0x05, 
      -1, 0xff, 
      10, 0x05, 
      -1, 0xff, 
       5, 0x05, 
       4, 0xff, 
       3, 0x13, 
       4, 0x14, 
      -1, 0xff, 
       3, 0x13, 
      -1, 0xff, 
       4, 0x13, 
       7, 0xff, 
       2, 0x13, 
       9, 0xff, 
       2, 0x05, 
       4, 0xff, 
      10, 0x06, 
      18, 0xff, 
       2, 0x14, 
      -1, 0xff, 
       8, 0x05, 
      -1, 0xff, 
       3, 0x05, 
      -1, 0xff, 
      23, 0x05, 
      -1, 0xff, 
      10, 0x05, 
      -1, 0xff, 
       5, 0x05, 
       4, 0xff, 
      -2, 0x14, 0x13, 
       5, 0x14, 
      -2, 0xff, 0x13, 
       2, 0x14, 
      -1, 0xff, 
       2, 0x14, 
       2, 0x13, 
       7, 0xff, 
       2, 0x14, 
       7, 0xff, 
      -2, 0x05, 0xff, 
       2, 0x05, 
       4, 0xff, 
      10, 0x06, 
      16, 0xff
*/
};

static const unsigned char Gen_PAGE_0D[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0xff, 0xff, 0x14, 0x14, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 
	/* 1 */ 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0x14, 0x14, 
	/* 4 */ 0x14, 0x13, 0x13, 0x13, 0xff, 0xff, 0x14, 0x14, 0x14, 0xff, 0x14, 0x14, 0x14, 0x13, 0xff, 0xff, 
	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x14, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 6 */ 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
	/* 7 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 8 */ 0xff, 0xff, 0x14, 0x14, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* B */ 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0xff, 0xff, 
	/* C */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0x13, 0xff, 0xff, 0xff, 0xff, 0x14, 
	/* D */ 0x14, 0x14, 0x13, 0x13, 0x13, 0xff, 0x13, 0xff, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 
	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* F */ 0xff, 0xff, 0x14, 0x14, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

/*	Compressed data:
      95, // length (46 nodes)
       2, 0xff, 
       2, 0x14, 
      -1, 0xff, 
       8, 0x05, 
      -1, 0xff, 
       3, 0x05, 
      -1, 0xff, 
      23, 0x05, 
      -1, 0xff, 
      16, 0x05, 
       4, 0xff, 
       3, 0x14, 
       3, 0x13, 
       2, 0xff, 
       3, 0x14, 
      -1, 0xff, 
       3, 0x14, 
      -1, 0x13, 
       9, 0xff, 
      -1, 0x14, 
       8, 0xff, 
       2, 0x05, 
       4, 0xff, 
      10, 0x06, 
      18, 0xff, 
       2, 0x14, 
      -1, 0xff, 
      18, 0x05, 
       3, 0xff, 
      24, 0x05, 
      -1, 0xff, 
       9, 0x05, 
      -2, 0xff, 0x05, 
       2, 0xff, 
       7, 0x05, 
       3, 0xff, 
      -1, 0x13, 
       4, 0xff, 
       3, 0x14, 
       3, 0x13, 
      -3, 0xff, 0x13, 0xff, 
       8, 0x14, 
      18, 0xff, 
       2, 0x14, 
      -1, 0x0f, 
      11, 0xff
*/
};

static const unsigned char Gen_PAGE_0E[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 3 */ 0x05, 0x13, 0x05, 0x05, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0xff, 0xff, 0xff, 0xff, 0x17, 
	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x04, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0f, 
	/* 5 */ 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	/* 6 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 7 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 8 */ 0xff, 0x05, 0x05, 0xff, 0x05, 0xff, 0xff, 0x05, 0x05, 0xff, 0x05, 0xff, 0xff, 0x05, 0xff, 0xff, 
	/* 9 */ 0xff, 0xff, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* A */ 0xff, 0x05, 0x05, 0x05, 0xff, 0x05, 0xff, 0x05, 0xff, 0xff, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 
	/* B */ 0x05, 0x13, 0x05, 0x05, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0xff, 0x13, 0x13, 0x05, 0xff, 0xff, 
	/* C */ 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x04, 0xff, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0xff, 0xff, 
	/* D */ 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0xff, 0xff, 0x05, 0x05, //0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

/*	Compressed data:
     101, // length (47 nodes)
      -1, 0xff, 
      48, 0x05, 
      -1, 0x13, 
       2, 0x05, 
       7, 0x13, 
       4, 0xff, 
      -1, 0x17, 
       6, 0x05, 
      -1, 0x04, 
       8, 0x13, 
      -1, 0x0f, 
      10, 0x06, 
       2, 0x0f, 
      37, 0xff, 
       2, 0x05, 
      -2, 0xff, 0x05, 
       2, 0xff, 
       2, 0x05, 
      -2, 0xff, 0x05, 
       2, 0xff, 
      -1, 0x05, 
       6, 0xff, 
       4, 0x05, 
      -1, 0xff, 
       7, 0x05, 
      -1, 0xff, 
       3, 0x05, 
      -4, 0xff, 0x05, 0xff, 0x05, 
       2, 0xff, 
       2, 0x05, 
      -1, 0xff, 
       4, 0x05, 
      -1, 0x13, 
       2, 0x05, 
       6, 0x13, 
      -1, 0xff, 
       2, 0x13, 
      -1, 0x05, 
       2, 0xff, 
       5, 0x05, 
      -3, 0xff, 0x04, 0xff, 
       6, 0x13, 
       2, 0xff, 
      10, 0x06, 
       2, 0xff, 
       2, 0x05, 
      34, 0xff
*/
};

static const unsigned char Gen_PAGE_0F[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0x05, 0x19, 0x19, 0x19, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 
	/* 1 */ 0x0f, 0x0f, 0x0f, 0x19, 0x19, 0x19, 0x19, 0x19, 0x13, 0x13, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
	/* 2 */ 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
	/* 3 */ 0x08, 0x08, 0x08, 0x08, 0x19, 0x13, 0x19, 0x13, 0x19, 0x13, 0x09, 0x0a, 0x09, 0x0a, 0x14, 0x14, 
	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 7 */ 0xff, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x14, 
	/* 8 */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x0f, 0x13, 0x13, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 
	/* 9 */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0xff, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
	/* A */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
	/* B */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0xff, 0x19, 0x19, 
	/* C */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x13, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0x19, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

/*	Compressed data:
      71, // length (31 nodes)
      -1, 0x05, 
       3, 0x19, 
      15, 0x0f, 
       5, 0x19, 
       2, 0x13, 
       6, 0x19, 
      10, 0x06, 
      10, 0x08, 
     -10, 0x19, 0x13, 0x19, 0x13, 0x19, 0x13, 0x09, 0x0a, 0x09, 0x0a, 
       2, 0x14, 
       8, 0x05, 
      -1, 0xff, 
      34, 0x05, 
       6, 0xff, 
      14, 0x13, 
      -1, 0x14, 
       5, 0x13, 
      -1, 0x0f, 
       2, 0x13, 
       4, 0x05, 
       4, 0xff, 
       8, 0x13, 
      -1, 0xff, 
      36, 0x13, 
      -1, 0xff, 
       8, 0x19, 
      -1, 0x13, 
       6, 0x19, 
       2, 0xff, 
      -1, 0x19, 
      48, 0xff
*/
};

static const unsigned char Gen_PAGE_10[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0xff, 0x14, 0x13, 0x13, 0x13, 
//	/* 3 */ 0x13, 0x14, 0x13, 0xff, 0xff, 0xff, 0x13, 0x13, 0x14, 0x13, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 4 */ 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x14, 0x14, 0x13, 0x13, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 6 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 7 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 8 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 9 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* A */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
//	/* B */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
//	/* C */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* E */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* F */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
//    51, // length (24 nodes)
      51, // length (17 nodes)
      34, 0x05, 
       1, 0xff, 
       5, 0x05, 
//tweak:
     -18, 0xff, 0x05, 0x05, 0xff, 0x14, 0x13, 0x13, 0x13, 0x13, 0x14, 0x13, 0xff, 0xff, 0xff, 0x13, 0x13, 
          0x14, 0x13,
//    -1, 0xff, 
//     2, 0x05, 
//    -2, 0xff, 0x14, 
//     4, 0x13, 
//    -2, 0x14, 0x13, 
//     3, 0xff, 
//     2, 0x13, 
//    -2, 0x14, 0x13, 
       6, 0xff, 
      10, 0x06, 
       6, 0x0f, 
       6, 0x05, 
       2, 0x14, 
       2, 0x13, 
      70, 0xff, 
      38, 0x01, 
      10, 0xff, 
      39, 0x05, 
       4, 0xff, 
       1, 0x0f, 
       4, 0xff
};

#if 0
static const unsigned char Gen_PAGE_11[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* C */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* D */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* E */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* F */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      12, // length (6 nodes)
      90, 0x05, 
       5, 0xff, 
      68, 0x05, 
       5, 0xff, 
      82, 0x05, 
       6, 0xff
};
#endif

#if 0
//#ifdef USE_DATA
static const unsigned char Gen_PAGE_12[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 
	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 
	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 
	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 
	/* B */ 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 
	/* C */ 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 
	/* D */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* E */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 
	/* F */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05
/*	Compressed data:
      68, // length (29 nodes)
       7, 0x05, 
      -1, 0xff, 
      63, 0x05, 
      -3, 0xff, 0x05, 0xff, 
       4, 0x05, 
       2, 0xff, 
       7, 0x05, 
      -3, 0xff, 0x05, 0xff, 
       4, 0x05, 
       2, 0xff, 
      39, 0x05, 
      -3, 0xff, 0x05, 0xff, 
       4, 0x05, 
       2, 0xff, 
      31, 0x05, 
      -3, 0xff, 0x05, 0xff, 
       4, 0x05, 
       2, 0xff, 
       7, 0x05, 
      -3, 0xff, 0x05, 0xff, 
       4, 0x05, 
       2, 0xff, 
       7, 0x05, 
      -1, 0xff, 
       7, 0x05, 
      -1, 0xff, 
      23, 0x05, 
      -1, 0xff, 
      16, 0x05
*/
};
#endif

#ifdef USE_DATA
static const unsigned char Gen_PAGE_13[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 
//	/* 1 */ 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 6 */ 0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
//	/* 7 */ 0x06, 0x06, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0xff, 0xff, 0xff, 
//	/* 8 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 9 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* C */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* D */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* E */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* F */ 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      34, // length (16 nodes)
      15, 0x05, 
      -3, 0xff, 0x05, 0xff, 
       4, 0x05, 
       2, 0xff, 
       7, 0x05, 
       1, 0xff, 
      39, 0x05, 
       1, 0xff, 
      19, 0x05, 
       6, 0xff, 
       8, 0x0f, 
       9, 0x06, 
      11, 0x08, 
      35, 0xff, 
      85, 0x05, 
      11, 0xff
};
#endif

#if 0
static const unsigned char Gen_PAGE_14[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* C */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* D */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* E */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* F */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05
//	Compressed data:
       8, // length (4 nodes)
      -1, 0xff, 
     127, 0x05, 
     127, 0x05, 
       1, 0x05
};
#endif

static const unsigned char Gen_PAGE_16[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x0f, 0x0f, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 8 */ 0x10, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x09, 0x0a, 0xff, 0xff, 0xff, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* C */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* D */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* E */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x0f, 0x0f, 0x0f, 0x08, 0x08, 
//	/* F */ 0x08, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      26, // length (13 nodes)
     109, 0x05, 
       2, 0x0f, 
       8, 0x05, 
       9, 0xff, 
       1, 0x10, 
      26, 0x05, 
       1, 0x09, 
       1, 0x0a, 
       3, 0xff, 
      75, 0x05, 
       3, 0x0f, 
       3, 0x08, 
      15, 0xff
};

static const unsigned char Gen_PAGE_17[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 1 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 2 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 3 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 4 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 6 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 7 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0x05, 0x05, 0x14, 0x14, 0x14, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x14, 0x14, 
//	/* C */ 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x13, 0x14, 0x14, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
//	/* D */ 0x13, 0x13, 0x13, 0x13, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x17, 0x0f, 0xff, 0xff, 0xff, 
//	/* E */ 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
//    29, // length (14 nodes)
      29, // length (13 nodes)
     127, 0xff, 
       1, 0xff, 
      52, 0x05, 
       3, 0x14, 
       7, 0x13, 
       8, 0x14, 
//tweak:
      -3, 0x13, 0x14, 0x14, 
//    -1, 0x13, 
//     2, 0x14, 
      11, 0x13, 
       7, 0x0f, 
      -2, 0x17, 0x0f, 
       3, 0xff, 
      10, 0x06, 
      22, 0xff
};

#ifdef USE_DATA
static const unsigned char Gen_PAGE_18[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0d, 0x0f, 0x0f, 0x0f, 0x0f, 0x1b, 0x1b, 0x1b, 0x1b, 0xff, 
//	/* 1 */ 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 4 */ 0x05, 0x05, 0x05, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x13, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* B */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      28, // length (14 nodes)
       6, 0x0f, 
       1, 0x0d, 
       4, 0x0f, 
       4, 0x1b, 
       1, 0xff, 
      10, 0x06, 
       6, 0xff, 
      35, 0x05, 
       1, 0x04, 
      52, 0x05, 
       8, 0xff, 
      41, 0x05, 
       1, 0x13, 
      86, 0xff
};
#endif

#if 0
static const unsigned char Gen_PAGE_1E[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 1 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 2 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 3 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 4 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 5 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 6 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 7 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 8 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* 9 */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xff, 0xff, 0xff, 0xff, 
	/* A */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* B */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* C */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* D */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* E */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
	/* F */ 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

/*	Compressed data:
     248, // length (6 nodes)
    -127, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
     -22, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 
       7, 0x02, 
       4, 0xff, 
     -90, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 
       6, 0xff
*/
};
#endif

static const unsigned char Gen_PAGE_1F[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
	/* 1 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xff, 0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xff, 
	/* 2 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
	/* 3 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
	/* 4 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xff, 0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xff, 
	/* 5 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xff, 0x01, 0xff, 0x01, 0xff, 0x01, 0xff, 0x01, 
	/* 6 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
	/* 7 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xff, 0xff, 
	/* 8 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 
	/* 9 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 
	/* A */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 
	/* B */ 0x02, 0x02, 0x02, 0x02, 0x02, 0xff, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x03, 0x18, 0x02, 0x18, 
	/* C */ 0x18, 0x18, 0x02, 0x02, 0x02, 0xff, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x03, 0x18, 0x18, 0x18, 
	/* D */ 0x02, 0x02, 0x02, 0x02, 0xff, 0xff, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0xff, 0x18, 0x18, 0x18, 
	/* E */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x18, 0x18, 0x18, 
	/* F */ 0xff, 0xff, 0x02, 0x02, 0x02, 0xff, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x03, 0x18, 0x18, 0xff

/*	Compressed data:
     119, // length (55 nodes)
       8, 0x02, 
       8, 0x01, 
       6, 0x02, 
       2, 0xff, 
       6, 0x01, 
       2, 0xff, 
       8, 0x02, 
       8, 0x01, 
       8, 0x02, 
       8, 0x01, 
       6, 0x02, 
       2, 0xff, 
       6, 0x01, 
       2, 0xff, 
       8, 0x02, 
      -8, 0xff, 0x01, 0xff, 0x01, 0xff, 0x01, 0xff, 0x01, 
       8, 0x02, 
       8, 0x01, 
      14, 0x02, 
       2, 0xff, 
       8, 0x02, 
       8, 0x03, 
       8, 0x02, 
       8, 0x03, 
       8, 0x02, 
       8, 0x03, 
       5, 0x02, 
      -1, 0xff, 
       2, 0x02, 
       4, 0x01, 
      -3, 0x03, 0x18, 0x02, 
       3, 0x18, 
       3, 0x02, 
      -1, 0xff, 
       2, 0x02, 
       4, 0x01, 
      -1, 0x03, 
       3, 0x18, 
       4, 0x02, 
       2, 0xff, 
       2, 0x02, 
       4, 0x01, 
      -1, 0xff, 
       3, 0x18, 
       8, 0x02, 
       5, 0x01, 
       3, 0x18, 
       2, 0xff, 
       3, 0x02, 
      -1, 0xff, 
       2, 0x02, 
       4, 0x01, 
      -1, 0x03, 
       2, 0x18, 
      -1, 0xff, 
*/
};

static const unsigned char Gen_PAGE_20[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1b, 0x1b, 0x1b, 0x1b, 
	/* 1 */ 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0f, 0x0f, 0x0b, 0x0c, 0x09, 0x0b, 0x0b, 0x0c, 0x09, 0x0b, 
	/* 2 */ 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x11, 0x12, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x10, 
	/* 3 */ 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0b, 0x0c, 0x0f, 0x0f, 0x0f, 0x0f, 0x0e, 
	/* 4 */ 0x0e, 0x0f, 0x0f, 0x0f, 0x16, 0x09, 0x0a, 0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 
	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* 6 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 
	/* 7 */ 0x08, 0xff, 0xff, 0xff, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x16, 0x16, 0x16, 0x09, 0x0a, 0x02, 
	/* 8 */ 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x16, 0x16, 0x16, 0x09, 0x0a, 0xff, 
	/* 9 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* A */ 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 
	/* B */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	/* D */ 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x15, 0x15, 0x15, 
	/* E */ 0x15, 0x13, 0x15, 0x15, //0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

/*	Compressed data:
      84, // length (36 nodes)
      12, 0x10, 
       4, 0x1b, 
       6, 0x0d, 
       2, 0x0f, 
      -3, 0x0b, 0x0c, 0x09, 
       2, 0x0b, 
      -3, 0x0c, 0x09, 0x0b, 
       8, 0x0f, 
      -2, 0x11, 0x12, 
       5, 0x1b, 
      -1, 0x10, 
       9, 0x0f, 
      -2, 0x0b, 0x0c, 
       4, 0x0f, 
       2, 0x0e, 
       3, 0x0f, 
      -4, 0x16, 0x09, 0x0a, 0xff, 
       6, 0x0f, 
      28, 0xff, 
       6, 0x1b, 
      -1, 0x08, 
       3, 0xff, 
       6, 0x08, 
       3, 0x16, 
      -3, 0x09, 0x0a, 0x02, 
      10, 0x08, 
       3, 0x16, 
      -2, 0x09, 0x0a, 
      17, 0xff, 
      16, 0x17, 
      32, 0xff, 
      13, 0x13, 
       4, 0x15, 
      -1, 0x13, 
       2, 0x15, 
      28, 0xff
*/
};

static const unsigned char Gen_PAGE_21[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0x19, 0x19, 0x01, 0x19, 0x19, 0x19, 0x19, 0x01, 0x19, 0x19, 0x02, 0x01, 0x01, 0x01, 0x02, 0x02, 
	/* 1 */ 0x01, 0x01, 0x01, 0x02, 0x19, 0x01, 0x19, 0x19, 0x19, 0x01, 0x01, 0x01, 0x01, 0x01, 0x19, 0x19, 
	/* 2 */ 0x19, 0x19, 0x19, 0x19, 0x01, 0x19, 0x01, 0x19, 0x01, 0x19, 0x01, 0x01, 0x01, 0x01, 0x19, 0x02, 
	/* 3 */ 0x01, 0x01, 0x19, 0x01, 0x02, 0x05, 0x05, 0x05, 0x05, 0x02, 0x19, //0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 4 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 5 */ 0xff, 0xff, 0xff, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
//	/* 6 */ 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
//	/* 7 */ 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
//	/* 8 */ 0x07, 0x07, 0x07, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 9 */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x19, 0x19, 0x19, 0x19, 0x19, 0x16, 0x16, 0x19, 0x19, 0x19, 0x19, 
//	/* A */ 0x16, 0x19, 0x19, 0x16, 0x19, 0x19, 0x16, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x16, 0x19, 
//	/* B */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* C */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x16, 0x16, 
//	/* D */ 0x19, 0x19, 0x16, 0x19, 0x16, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* E */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* F */ 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

#if 0
static const unsigned char Gen_PAGE_22[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* 1 */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* 2 */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* 3 */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* 4 */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* 5 */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* 6 */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* 7 */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* 8 */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* 9 */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* A */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* B */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* C */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* D */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* E */ 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 
//	/* F */ 0x16, 0x16, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
       6, // length (3 nodes)
     127, 0x16, 
     115, 0x16, 
      14, 0xff
};
#endif


static const unsigned char Gen_PAGE_23[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F  
//	/* 0 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x16, 0x16, 0x16, 0x16, 0x19, 0x19, 0x19, 0x19, 
//	/* 1 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 2 */ 0x16, 0x16, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x09, 0x0a, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 3 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 4 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 5 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 6 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 7 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0x19, 0x19, 0x19, 
//	/* 8 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 9 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* A */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* B */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//
//	Compressed data:
//      21, // length (10 nodes)
      19, // length (9 nodes)
       8, 0x19, 
       4, 0x16, 
      20, 0x19, 
       2, 0x16, 
       7, 0x19, 
      -2, 0x09, 0x0a, 
      81, 0x19, 
       1, 0xff, 
      30, 0x19, 
//     101, 0xff
};

#ifdef USE_DATA
static const unsigned char Gen_PAGE_24[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 1 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 2 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 3 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 4 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 6 */ 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
//	/* 7 */ 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
//	/* 8 */ 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
//	/* 9 */ 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x19, 0x19, 0x19, 0x19, 
//	/* A */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* B */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* C */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* D */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* E */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x08, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      16, // length (8 nodes)
      39, 0x19, 
      25, 0xff, 
      11, 0x19, 
      21, 0xff, 
      60, 0x08, 
      78, 0x19, 
       1, 0x08, 
      21, 0xff
};
#endif

#if 0
static const unsigned char Gen_PAGE_25[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F  
//	/* 0 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 1 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 2 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 3 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 4 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 5 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 6 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 7 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 8 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 9 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* A */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* B */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* C */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* D */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* E */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* F */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

//	Compressed data:
      10, // length (5 nodes)
     127, 0x19, 
      23, 0x19, 
      10, 0xff, 
      88, 0x19, 
       8, 0xff
};
#endif
  

#if 0
static const unsigned char Gen_PAGE_26[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F  
//	/* 0 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 1 */ 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 2 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 3 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 4 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 5 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 6 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 7 */ 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 8 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 9 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* A */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* B */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      10, // length (5 nodes)
      20, 0x19, 
       5, 0xff, 
      89, 0x19, 
     127, 0xff, 
      15, 0xff
};
#endif

#ifdef USE_DATA
static const unsigned char Gen_PAGE_27[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0xff, 0x19, 0x19, 0x19, 0x19, 0xff, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0x19, 0x19, 0x19, 0x19, 
//	/* 1 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 2 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 3 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 4 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0x19, 0xff, 0x19, 
//	/* 5 */ 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0x19, 0xff, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 
//	/* 6 */ 0xff, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 7 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
//	/* 8 */ 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
//	/* 9 */ 0x08, 0x08, 0x08, 0x08, 0x19, 0xff, 0xff, 0xff, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* A */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* B */ 0xff, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 
//	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      49, // length (23 nodes)
       1, 0xff, 
       4, 0x19, 
       1, 0xff, 
       4, 0x19, 
       2, 0xff, 
      28, 0x19, 
       1, 0xff, 
      35, 0x19, 
      -3, 0xff, 0x19, 0xff, 
       4, 0x19, 
       3, 0xff, 
      -2, 0x19, 0xff, 
       7, 0x19, 
       2, 0xff, 
       7, 0x19, 
      14, 0xff, 
      30, 0x08, 
       1, 0x19, 
       3, 0xff, 
      24, 0x19, 
       1, 0xff, 
      14, 0x19, 
      65, 0xff
};
#endif

#if 0
static const unsigned char Gen_PAGE_2E[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 1 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 2 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 3 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 4 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 6 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 7 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 8 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 9 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* A */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* B */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* C */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* D */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* E */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* F */ 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      12, // length (6 nodes)
     127, 0xff, 
       1, 0xff, 
      26, 0x19, 
       1, 0xff, 
      89, 0x19, 
      12, 0xff
};
#endif

#if 0
static const unsigned char Gen_PAGE_2F[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F  
//	/* 0 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 1 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 2 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 3 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 4 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 5 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 6 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 7 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 8 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 9 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* A */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* B */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* C */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* D */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      10, // length (5 nodes)
     127, 0x19, 
      87, 0x19, 
      26, 0xff, 
      12, 0x19, 
       4, 0xff
};
#endif

static const unsigned char Gen_PAGE_30[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x10, 0x0f, 0x0f, 0x0f, 0x19, 0x04, 0x05, 0x07, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 
//	/* 1 */ 0x09, 0x0a, 0x19, 0x19, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x0d, 0x09, 0x0a, 0x0a, 
//	/* 2 */ 0x19, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
//	/* 3 */ 0x0d, 0x04, 0x04, 0x04, 0x04, 0x04, 0x19, 0x19, 0x07, 0x07, 0x07, 0xff, 0xff, 0xff, 0x19, 0x19, 
//	/* 4 */ 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0x13, 0x13, 0x18, 0x18, 0x04, 0x04, 0xff, 
//	/* A */ 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* C */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* D */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* E */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* F */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x0e, 0x04, 0x04, 0x04, 0xff
//	Compressed data:
//    74, // length (26 nodes)
      73, // length (14 nodes)
//tweak:
     -33, 0x10, 0x0f, 0x0f, 0x0f, 0x19, 0x04, 0x05, 0x07, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 
          0x09, 0x0a, 0x19, 0x19, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x0d, 0x09, 0x0a, 0x0a, 
          0x19, 
//     1, 0x10, 
//     3, 0x0f, 
//   -14, 0x19, 0x04, 0x05, 0x07, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 
//     2, 0x19, 
//   -10, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x0d, 0x09, 
//     2, 0x0a, 
//    -1, 0x19, 
       9, 0x07, 
       6, 0x13, 
       1, 0x0d, 
       5, 0x04, 
       2, 0x19, 
       3, 0x07, 
       3, 0xff, 
//tweak:
      -3, 0x19, 0x19, 0xff,
//     2, 0x19, 
//    -1, 0xff, 
      84, 0x05, 
       4, 0xff, 
//tweak:
      -8, 0x13, 0x13, 0x18, 0x18, 0x04, 0x04, 0xff, 0xff, 
//     2, 0x13, 
//     2, 0x18, 
//     2, 0x04, 
//     2, 0xff, 
       90, 0x05, 
//tweak:
      -5, 0x0e, 0x04, 0x04, 0x04, 0xff
//    -1, 0x0e, 
//     3, 0x04, 
//     1, 0xff
};

static const unsigned char Gen_PAGE_31[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 
//	/* 3 */ 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 
//	/* 9 */ 0x19, 0x19, 0x08, 0x08, 0x08, 0x08, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
//    20, // length (10 nodes)
      20, // length (9 nodes)
       5, 0xff, 
      40, 0x05, 
       4, 0xff, 
      94, 0x05, 
//tweak:
      -3, 0xff, 0x19, 0x19, 
//    -1, 0xff, 
//     2, 0x19, 
       4, 0x08, 
      10, 0x19, 
      24, 0x05, 
      72, 0xff
};

#ifdef USE_DATA
static const unsigned char Gen_PAGE_32[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 1 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 
//	/* 2 */ 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 3 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 4 */ 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 6 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 7 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0x19, 
//	/* 8 */ 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 9 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* A */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* B */ 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* C */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* E */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* F */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff

//	Compressed data:
      30, // length (15 nodes)
      29, 0x19, 
       3, 0xff, 
      10, 0x08, 
      26, 0x19, 
      28, 0xff, 
      28, 0x19, 
       3, 0xff, 
       1, 0x19, 
      10, 0x08, 
      39, 0x19, 
      15, 0xff, 
      12, 0x19, 
       4, 0xff, 
      47, 0x19, 
       1, 0xff, 
};
#endif

#if 0
static const unsigned char Gen_PAGE_33[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F  
//	/* 0 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 1 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 2 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 3 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 4 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 5 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 6 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 7 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 0xff, 0xff, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 8 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* 9 */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* A */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* B */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* C */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* D */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff, 0xff, 
//	/* E */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
//	/* F */ 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0xff
//	Compressed data:
      12, // length (6 nodes)
     119, 0x19, 
       4, 0xff, 
      99, 0x19, 
       2, 0xff, 
      31, 0x19, 
       1, 0xff, 
};
#endif

#if 0
static const unsigned char Gen_PAGE_4D[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
       6, // length (3 nodes)
     127, 0x05, 
      55, 0x05, 
      74, 0xff
};
#endif

#if 0
static const unsigned char Gen_PAGE_9F[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* B */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
       6, // length (3 nodes)
     127, 0x05, 
      39, 0x05, 
      90, 0xff
};
#endif

#if 0
static const unsigned char Gen_PAGE_A4[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* C */ 0x05, 0xff, 0x05, 0x05, 0x05, 0xff, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
//    25, // length (12 nodes)
      25, // length (10 nodes)
     127, 0x05, 
      14, 0x05, 
       3, 0xff, 
      18, 0x05, 
       2, 0xff, 
      16, 0x05, 
       1, 0xff, 
      12, 0x05, 
//tweak:
      -6, 0xff, 0x05, 0x05, 0x05, 0xff, 0x05, 
//    -1, 0xff, 
//     3, 0x05, 
//    -2, 0xff, 0x05, 
      57, 0xff
};
#endif

#if 0
static const unsigned char Gen_PAGE_D7[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F  
//	/* 0 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 4 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* B */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
       6, // length (3 nodes)
     127, 0x05, 
      37, 0x05, 
      92, 0xff
};
#endif

#if 0
static const unsigned char Gen_PAGE_FA[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F  
//	/* 0 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 
//	/* 3 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 4 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 5 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 6 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 7 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 8 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 9 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* A */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* B */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
       6, // length (3 nodes)
      46, 0x05, 
     127, 0xff, 
      83, 0xff
};
#endif

#ifdef USE_DATA
static const unsigned char Gen_PAGE_FB[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 1 */ 0xff, 0xff, 0xff, 0x02, 0x02, 0x02, 0x02, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 0x13, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x16, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0x05, 0xff, 
//	/* 4 */ 0x05, 0x05, 0xff, 0x05, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* C */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* E */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* F */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05

//	Compressed data:
//    39, // length (18 nodes)
      37, // length (14 nodes)
       7, 0x02, 
      12, 0xff, 
       5, 0x02, 
       5, 0xff, 
      -2, 0x05, 0x13, 
      10, 0x05, 
       1, 0x16, 
      13, 0x05, 
       1, 0xff, 
       5, 0x05, 
//tweak:
      -9, 0xff, 0x05, 0xff, 0x05, 0x05, 0xff, 0x05, 0x05, 0xff, 
//    -3, 0xff, 0x05, 0xff, 
//     2, 0x05, 
//    -1, 0xff, 
//     2, 0x05, 
//    -1, 0xff, 
     108, 0x05, 
      33, 0xff, 
      45, 0x05
};
#endif

//#ifdef USE_DATA
#if 0
static const unsigned char Gen_PAGE_FD[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 1 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 2 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 3 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x09, 0x0a, 
//	/* 4 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 5 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 6 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 7 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* C */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* D */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* E */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* F */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 0xff
//	Compressed data:
      19, // length (9 nodes)
      62, 0x05, 
      -2, 0x09, 0x0a, 
      16, 0xff, 
      64, 0x05, 
       2, 0xff, 
      54, 0x05, 
      40, 0xff, 
      12, 0x05, 
       4, 0xff
};
#endif

static const unsigned char Gen_PAGE_FE[] = {
//	Uncompressed data:
//	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
//	/* 0 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 1 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 2 */ 0x13, 0x13, 0x13, 0x13, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
//	/* 3 */ 0x0f, 0x0d, 0x0d, 0x0e, 0x0e, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 
//	/* 4 */ 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0x0e, 0x0e, 0x0e, 
//	/* 5 */ 0x0f, 0x0f, 0x0f, 0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0x0d, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x0f, 
//	/* 6 */ 0x0f, 0x0f, 0x16, 0x0d, 0x16, 0x16, 0x16, 0xff, 0x0f, 0x17, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 
//	/* 7 */ 0x05, 0x05, 0x05, 0xff, 0x05, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* C */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* D */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* E */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
//	/* F */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x1b
//	Compressed data:
//    78, // length (26 nodes)
      78, // length (15 nodes)
      32, 0xff, 
       4, 0x13, 
      12, 0xff, 
//tweak:
     -21, 0x0f, 0x0d, 0x0d, 0x0e, 0x0e, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 
          0x0a, 0x09, 0x0a, 0x09, 0x0a, 
//    -1, 0x0f, 
//     2, 0x0d, 
//     2, 0x0e, 
//   -16, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 
       4, 0xff, 
       4, 0x0f, 
       3, 0x0e, 
       3, 0x0f, 
//tweak:
     -25, 0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0x0d, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 0x0f, 0x0f, 0x0f, 0x16, 
          0x0d, 0x16, 0x16, 0x16, 0xff, 0x0f, 0x17, 0x0f, 0x0f, 
//    -1, 0xff, 
//     4, 0x0f, 
//    -7, 0x0d, 0x09, 0x0a, 0x09, 0x0a, 0x09, 0x0a, 
//     3, 0x0f, 
//    -2, 0x16, 0x0d, 
//     3, 0x16, 
//    -3, 0xff, 0x0f, 0x17, 
//     2, 0x0f, 
       4, 0xff, 
       3, 0x05, 
      -3, 0xff, 0x05, 0xff, 
     127, 0x05, 
       8, 0x05, 
//tweak:
      -3, 0xff, 0xff, 0x1b
//     2, 0xff, 
//    -1, 0x1b, 
};

static const unsigned char Gen_PAGE_FF[] = {
//	0x00,
	//         0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F
	/* 0 */ 0xff, 0x0f, 0x0f, 0x0f, 0x17, 0x0f, 0x0f, 0x0f, 0x09, 0x0a, 0x0f, 0x16, 0x0f, 0x0d, 0x0f, 0x0f, 
	/* 1 */ 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x0f, 0x0f, 0x16, 0x16, 0x16, 0x0f, 
	/* 2 */ 0x0f, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
	/* 3 */ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x09, 0x0f, 0x0a, 0x18, 0x0e, 
	/* 4 */ 0x18, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
	/* 5 */ 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x09, 0x16, 0x0a, 0x16, 0xff, 
	/* 6 */ 0xff, 0x0f, 0x09, 0x0a, 0x0f, 0x0e, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 7 */ 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 8 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* 9 */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x04, 0x04, 
	/* A */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* B */ 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 
	/* C */ 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
	/* D */ 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xff, 0xff, 0x05, 0x05, 0x05, 0xff, 0xff, 0xff, 
	/* E */ 0x17, 0x17, 0x16, 0x18, 0x19, 0x17, 0x17, 0xff, 0x19, 0x16, 0x16, 0x16, 0x16, 0x19, 0x19, 0xff, 
	/* F */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1b, 0x1b, 0x1b, 0x19, 0x19, 0xff, 0xff

/*	Compressed data:
     100, // length (40 nodes)
      -1, 0xff, 
       3, 0x0f, 
      -1, 0x17, 
       3, 0x0f, 
      -6, 0x09, 0x0a, 0x0f, 0x16, 0x0f, 0x0d, 
       2, 0x0f, 
      10, 0x06, 
       2, 0x0f, 
       3, 0x16, 
       2, 0x0f, 
      26, 0x01, 
      -6, 0x09, 0x0f, 0x0a, 0x18, 0x0e, 0x18, 
      26, 0x02, 
      -4, 0x09, 0x16, 0x0a, 0x16, 
       2, 0xff, 
      -5, 0x0f, 0x09, 0x0a, 0x0f, 0x0e, 
      10, 0x05, 
      -1, 0x04, 
      45, 0x05, 
       2, 0x04, 
      31, 0x05, 
       3, 0xff, 
       6, 0x05, 
       2, 0xff, 
       6, 0x05, 
       2, 0xff, 
       6, 0x05, 
       2, 0xff, 
       3, 0x05, 
       3, 0xff, 
       2, 0x17, 
      -3, 0x16, 0x18, 0x19, 
       2, 0x17, 
      -2, 0xff, 0x19, 
       4, 0x16, 
       2, 0x19, 
      10, 0xff, 
       3, 0x1b, 
       2, 0x19, 
       2, 0xff
*/
};


#if 0 // hi/lo table
#define TT(val) (const unsigned char *)(val)

const unsigned char * rgpbGen[] = {
/* 0x0000 */    Gen_PAGE_00,
/* 0x0100 */    Gen_PAGE_01,
/* 0x0200 */    Gen_PAGE_02,
/* 0x0300 */    Gen_PAGE_03,
/* 0x0400 */    Gen_PAGE_04,
/* 0x0500 */    Gen_PAGE_05,
/* 0x0600 */    Gen_PAGE_06,
/* 0x0700 */    Gen_PAGE_07,
/* 0x0800 */    TT(0xff),
/* 0x0900 */    Gen_PAGE_09,
/* 0x0a00 */    Gen_PAGE_0a,
/* 0x0b00 */    Gen_PAGE_0b,
/* 0x0c00 */    Gen_PAGE_0c,
/* 0x0d00 */    Gen_PAGE_0d,
/* 0x0e00 */    Gen_PAGE_0e,
/* 0x0f00 */    Gen_PAGE_0f,
/* 0x1000 */    Gen_PAGE_10,
/* 0x1100 */    Gen_PAGE_11,
/* 0x1200 */    Gen_PAGE_12,
/* 0x1300 */    Gen_PAGE_13,
/* 0x1400 */    Gen_PAGE_14,
/* 0x1500 */    TT(0x05),
/* 0x1600 */    Gen_PAGE_16,
/* 0x1700 */    Gen_PAGE_17,
/* 0x1800 */    Gen_PAGE_18,
/* 0x1900 */    TT(0xff),
/* 0x1a00 */    TT(0xff),
/* 0x1b00 */    TT(0xff),
/* 0x1c00 */    TT(0xff),
/* 0x1d00 */    TT(0xff),
/* 0x1e00 */    Gen_PAGE_1e,
/* 0x1f00 */    Gen_PAGE_1f,
/* 0x2000 */    Gen_PAGE_20,
/* 0x2100 */    Gen_PAGE_21,
/* 0x2200 */    Gen_PAGE_22,
/* 0x2300 */    Gen_PAGE_23,
/* 0x2400 */    Gen_PAGE_24,
/* 0x2500 */    Gen_PAGE_25,
/* 0x2600 */    Gen_PAGE_26,
/* 0x2700 */    Gen_PAGE_27,
/* 0x2800 */    TT(0x19),
/* 0x2900 */    TT(0xff),
/* 0x2a00 */    TT(0xff),
/* 0x2b00 */    TT(0xff),
/* 0x2c00 */    TT(0xff),
/* 0x2d00 */    TT(0xff),
/* 0x2e00 */    Gen_PAGE_2e,
/* 0x2f00 */    Gen_PAGE_2f,
/* 0x3000 */    Gen_PAGE_30,
/* 0x3100 */    Gen_PAGE_31,
/* 0x3200 */    Gen_PAGE_32,
/* 0x3300 */    Gen_PAGE_33,
/* 0x3400 */    TT(0x05),
/* 0x3500 */    TT(0x05),
/* 0x3600 */    TT(0x05),
/* 0x3700 */    TT(0x05),
/* 0x3800 */    TT(0x05),
/* 0x3900 */    TT(0x05),
/* 0x3a00 */    TT(0x05),
/* 0x3b00 */    TT(0x05),
/* 0x3c00 */    TT(0x05),
/* 0x3d00 */    TT(0x05),
/* 0x3e00 */    TT(0x05),
/* 0x3f00 */    TT(0x05),
/* 0x4000 */    TT(0x05),
/* 0x4100 */    TT(0x05),
/* 0x4200 */    TT(0x05),
/* 0x4300 */    TT(0x05),
/* 0x4400 */    TT(0x05),
/* 0x4500 */    TT(0x05),
/* 0x4600 */    TT(0x05),
/* 0x4700 */    TT(0x05),
/* 0x4800 */    TT(0x05),
/* 0x4900 */    TT(0x05),
/* 0x4a00 */    TT(0x05),
/* 0x4b00 */    TT(0x05),
/* 0x4c00 */    TT(0x05),
/* 0x4d00 */    Gen_PAGE_4d,
/* 0x4e00 */    TT(0x05),
/* 0x4f00 */    TT(0x05),
/* 0x5000 */    TT(0x05),
/* 0x5100 */    TT(0x05),
/* 0x5200 */    TT(0x05),
/* 0x5300 */    TT(0x05),
/* 0x5400 */    TT(0x05),
/* 0x5500 */    TT(0x05),
/* 0x5600 */    TT(0x05),
/* 0x5700 */    TT(0x05),
/* 0x5800 */    TT(0x05),
/* 0x5900 */    TT(0x05),
/* 0x5a00 */    TT(0x05),
/* 0x5b00 */    TT(0x05),
/* 0x5c00 */    TT(0x05),
/* 0x5d00 */    TT(0x05),
/* 0x5e00 */    TT(0x05),
/* 0x5f00 */    TT(0x05),
/* 0x6000 */    TT(0x05),
/* 0x6100 */    TT(0x05),
/* 0x6200 */    TT(0x05),
/* 0x6300 */    TT(0x05),
/* 0x6400 */    TT(0x05),
/* 0x6500 */    TT(0x05),
/* 0x6600 */    TT(0x05),
/* 0x6700 */    TT(0x05),
/* 0x6800 */    TT(0x05),
/* 0x6900 */    TT(0x05),
/* 0x6a00 */    TT(0x05),
/* 0x6b00 */    TT(0x05),
/* 0x6c00 */    TT(0x05),
/* 0x6d00 */    TT(0x05),
/* 0x6e00 */    TT(0x05),
/* 0x6f00 */    TT(0x05),
/* 0x7000 */    TT(0x05),
/* 0x7100 */    TT(0x05),
/* 0x7200 */    TT(0x05),
/* 0x7300 */    TT(0x05),
/* 0x7400 */    TT(0x05),
/* 0x7500 */    TT(0x05),
/* 0x7600 */    TT(0x05),
/* 0x7700 */    TT(0x05),
/* 0x7800 */    TT(0x05),
/* 0x7900 */    TT(0x05),
/* 0x7a00 */    TT(0x05),
/* 0x7b00 */    TT(0x05),
/* 0x7c00 */    TT(0x05),
/* 0x7d00 */    TT(0x05),
/* 0x7e00 */    TT(0x05),
/* 0x7f00 */    TT(0x05),
/* 0x8000 */    TT(0x05),
/* 0x8100 */    TT(0x05),
/* 0x8200 */    TT(0x05),
/* 0x8300 */    TT(0x05),
/* 0x8400 */    TT(0x05),
/* 0x8500 */    TT(0x05),
/* 0x8600 */    TT(0x05),
/* 0x8700 */    TT(0x05),
/* 0x8800 */    TT(0x05),
/* 0x8900 */    TT(0x05),
/* 0x8a00 */    TT(0x05),
/* 0x8b00 */    TT(0x05),
/* 0x8c00 */    TT(0x05),
/* 0x8d00 */    TT(0x05),
/* 0x8e00 */    TT(0x05),
/* 0x8f00 */    TT(0x05),
/* 0x9000 */    TT(0x05),
/* 0x9100 */    TT(0x05),
/* 0x9200 */    TT(0x05),
/* 0x9300 */    TT(0x05),
/* 0x9400 */    TT(0x05),
/* 0x9500 */    TT(0x05),
/* 0x9600 */    TT(0x05),
/* 0x9700 */    TT(0x05),
/* 0x9800 */    TT(0x05),
/* 0x9900 */    TT(0x05),
/* 0x9a00 */    TT(0x05),
/* 0x9b00 */    TT(0x05),
/* 0x9c00 */    TT(0x05),
/* 0x9d00 */    TT(0x05),
/* 0x9e00 */    TT(0x05),
/* 0x9f00 */    Gen_PAGE_9f,
/* 0xa000 */    TT(0x05),
/* 0xa100 */    TT(0x05),
/* 0xa200 */    TT(0x05),
/* 0xa300 */    TT(0x05),
/* 0xa400 */    Gen_PAGE_a4,
/* 0xa500 */    TT(0xff),
/* 0xa600 */    TT(0xff),
/* 0xa700 */    TT(0xff),
/* 0xa800 */    TT(0xff),
/* 0xa900 */    TT(0xff),
/* 0xaa00 */    TT(0xff),
/* 0xab00 */    TT(0xff),
/* 0xac00 */    TT(0x05),
/* 0xad00 */    TT(0x05),
/* 0xae00 */    TT(0x05),
/* 0xaf00 */    TT(0x05),
/* 0xb000 */    TT(0x05),
/* 0xb100 */    TT(0x05),
/* 0xb200 */    TT(0x05),
/* 0xb300 */    TT(0x05),
/* 0xb400 */    TT(0x05),
/* 0xb500 */    TT(0x05),
/* 0xb600 */    TT(0x05),
/* 0xb700 */    TT(0x05),
/* 0xb800 */    TT(0x05),
/* 0xb900 */    TT(0x05),
/* 0xba00 */    TT(0x05),
/* 0xbb00 */    TT(0x05),
/* 0xbc00 */    TT(0x05),
/* 0xbd00 */    TT(0x05),
/* 0xbe00 */    TT(0x05),
/* 0xbf00 */    TT(0x05),
/* 0xc000 */    TT(0x05),
/* 0xc100 */    TT(0x05),
/* 0xc200 */    TT(0x05),
/* 0xc300 */    TT(0x05),
/* 0xc400 */    TT(0x05),
/* 0xc500 */    TT(0x05),
/* 0xc600 */    TT(0x05),
/* 0xc700 */    TT(0x05),
/* 0xc800 */    TT(0x05),
/* 0xc900 */    TT(0x05),
/* 0xca00 */    TT(0x05),
/* 0xcb00 */    TT(0x05),
/* 0xcc00 */    TT(0x05),
/* 0xcd00 */    TT(0x05),
/* 0xce00 */    TT(0x05),
/* 0xcf00 */    TT(0x05),
/* 0xd000 */    TT(0x05),
/* 0xd100 */    TT(0x05),
/* 0xd200 */    TT(0x05),
/* 0xd300 */    TT(0x05),
/* 0xd400 */    TT(0x05),
/* 0xd500 */    TT(0x05),
/* 0xd600 */    TT(0x05),
/* 0xd700 */    Gen_PAGE_d7,
/* 0xd800 */    TT(0x1c),
/* 0xd900 */    TT(0x1c),
/* 0xda00 */    TT(0x1c),
/* 0xdb00 */    TT(0x1c),
/* 0xdc00 */    TT(0x1c),
/* 0xdd00 */    TT(0x1c),
/* 0xde00 */    TT(0x1c),
/* 0xdf00 */    TT(0x1c),
/* 0xe000 */    TT(0x1d),
/* 0xe100 */    TT(0x1d),
/* 0xe200 */    TT(0x1d),
/* 0xe300 */    TT(0x1d),
/* 0xe400 */    TT(0x1d),
/* 0xe500 */    TT(0x1d),
/* 0xe600 */    TT(0x1d),
/* 0xe700 */    TT(0x1d),
/* 0xe800 */    TT(0x1d),
/* 0xe900 */    TT(0x1d),
/* 0xea00 */    TT(0x1d),
/* 0xeb00 */    TT(0x1d),
/* 0xec00 */    TT(0x1d),
/* 0xed00 */    TT(0x1d),
/* 0xee00 */    TT(0x1d),
/* 0xef00 */    TT(0x1d),
/* 0xf000 */    TT(0x1d),
/* 0xf100 */    TT(0x1d),
/* 0xf200 */    TT(0x1d),
/* 0xf300 */    TT(0x1d),
/* 0xf400 */    TT(0x1d),
/* 0xf500 */    TT(0x1d),
/* 0xf600 */    TT(0x1d),
/* 0xf700 */    TT(0x1d),
/* 0xf800 */    TT(0x1d),
/* 0xf900 */    TT(0x05),
/* 0xfa00 */    Gen_PAGE_fa,
/* 0xfb00 */    Gen_PAGE_fb,
/* 0xfc00 */    TT(0x05),
/* 0xfd00 */    Gen_PAGE_fd,
/* 0xfe00 */    Gen_PAGE_fe,
/* 0xff00 */    Gen_PAGE_ff
};

#else // hi byte switch

#define BTEST(ar, ch) ((ar)[((ch) >> 4) & 0x0f] & (1 << ((ch) & 0x0f)))

BYTE WINAPI LookupGen (WCHAR ch)
{
	BYTE r = 0xff;
	const BYTE * pb = NULL;
	switch((BYTE)(ch >> 8))
	{
	case 0x00:  r  = Gen_PAGE_00[(BYTE)ch]; break;
	case 0x01:
#ifdef USE_DATA
                r  = Gen_PAGE_01[(BYTE)ch]; break;
#else
                r = 0x01;
                if (BTEST(L"\x5555\x5555\x5555\x55AA\xAAD5\x5555\x5555\x552B\x948C\x2472\x5494\x8A65\x06DA\xAAAD\x5555\xB455", ch)) 
                  r++;
                if (ch >= 0x010aa)
                {
                  if (ch < 0x01C4)
                  {
                    if (ch > 0x01C0 || ch == 0x01AA || ch == 0x01BB || ch == 0x01BE) r = 0x05;
                  }
                  else
                  {
                    if (ch == 0x01C5 || ch == 0x01C8 || ch == 0x01CB || ch == 0x01F2) r = 0x03;
                  }
                }
                break;
#endif
	case 0x02:
#ifdef USE_DATA
                pb = Gen_PAGE_02; break;
#else
                if (ch < 0x0234) 
                {
                  if (ch == 0x0220 || ch == 0x0221) r = 0xff; 
                  else r = 0x01 + (ch & 1);
                }
                else if (ch < 0x0250) {}
                else if (ch < 0x02AE) r = 0x02;
                else if (ch < 0x02B0 || ch > 0x02EE) {}
                else if (ch < 0x02C2) 
                { 
                  if (ch == 0x02B9 || ch == 0x02BA) r = 0x18;
                  else r = 0x04; 
                }
                else
                {
                  r = 0x18;
                  if      (ch > 0x02E4) {}
                  else if (ch > 0x02E0 || ch == 0x02D0 || ch == 0x02D1) r = 0x04;
                }
                break;
#endif
	case 0x03:  r  = Gen_PAGE_03[(BYTE)ch]; break;
	case 0x04:
#ifdef USE_DATA
                pb = Gen_PAGE_04; break;
#else
                r = 0x01;
                if      (ch <  0x0430) {}
                else if (ch <  0x0460) r++;
                else if (ch <  0x04F6)
                {
                  r += (ch & 1);
                  if      (ch <  0x0482 || ch >= 0x04D0) {}
                  else if (ch <  0x048C) r = Gen_PAGE_0482[ch - 0x0482];
                  else if (ch >= 0x04C0) r = Gen_PAGE_04C0[ch - 0x04C0];
                }
                else if (ch == 0x04F8) {}
                else if (ch == 0x04F9) r++;
                else                   r = 0xff;
                break;
#endif
	case 0x05:  pb = Gen_PAGE_05; break;
	case 0x06:  r  = Gen_PAGE_06[(BYTE)ch]; break;
	case 0x07:  pb = Gen_PAGE_07; break;
	case 0x09:  r  = Gen_PAGE_09[(BYTE)ch]; break;
	case 0x0a:  if (ch < 0x0af0) r  = Gen_PAGE_0A[(BYTE)ch]; break;
	case 0x0b:  r  = Gen_PAGE_0B[(BYTE)ch]; break;
	case 0x0c:  if (ch < 0x0cf0) r  = Gen_PAGE_0C[(BYTE)ch]; break;
	case 0x0d:  r  = Gen_PAGE_0D[(BYTE)ch]; break;
	case 0x0e:  if (ch < 0x0ede) r  = Gen_PAGE_0E[(BYTE)ch]; break;
	case 0x0f:  if (ch < 0x0fd0) r  = Gen_PAGE_0F[(BYTE)ch]; break;
	case 0x10:  pb = Gen_PAGE_10; break;
	case 0x11: 
                if      (ch < 0x115a) r = 0x05;
                else if (ch < 0x115f) {}
                else if (ch < 0x11a3) r = 0x05;
                else if (ch < 0x11a8) {}
                else if (ch < 0x11fa) r = 0x05;
                break;
	case 0x12:  
//#ifdef USE_DATA
//              pb = Gen_PAGE_12; break;
//#else
                if (BTEST(L"\xFF7F\xFFFF\xFFFF\xFFFF\x3D7F\x3D7F\xFFFF\xFFFF\x3D7F\xFFFF\x7FFF\x7F3D\x7F3D\xFF7F\x7FFF\xFFFF", ch)) 
                  r = 0x05; 
                break;
//#endif
	case 0x13: 
#ifdef USE_DATA
                pb = Gen_PAGE_13; break;
#else
                if (ch < 0x1360)
                {
                  if (BTEST(L"\xFFFE\xBCFE\xFFFF\xFFFF\xFEFF\xFFE0", ch)) r = 0x05;
                }
                else if (ch < 0x1380)
                {
                  if (ch > 0x1360 && ch < 0x137D)
                  {
                    if      (ch < 0x1369) r = 0x0f;
                    else if (ch < 0x1372) r = 0x06;
                    else                  r = 0x08;
                  }
                }
                else if (ch < 0x13A0) {}
                else if (ch < 0x13F5) r = 0x05;
                break;
#endif
	case 0x14:  if ((BYTE)ch) r  = 0x05; break;
	case 0x15:  r  = 0x05; break;
	case 0x16:  pb = Gen_PAGE_16; break;
	case 0x17:  pb = Gen_PAGE_17; break;
	case 0x18:
#ifdef USE_DATA
                pb = Gen_PAGE_18; break;
#else
                if (ch <  0x1820)
                {
                  if      (ch <  0x180B) r = 0x0f;
                  else if (ch <  0x1810) { if (ch != 0x180F) r = 0x1b; }
                  else if (ch <  0x181A) r = 0x06;
                }
                else if (ch <  0x1880) 
                {
                  if (ch <  0x1878) 
                  { 
                    if (ch == 0x1843) r = 0x04; 
                    else r = 0x05; 
                  }
                }
                else if (ch <  0x18a9) r = 0x05;
                else if (ch == 0x18a9) r = 0x13;
                break;
#endif
	case 0x1e: 
                if (ch <= 0x1EF9)
                {
                  if ((ch < 0x1E96) || (ch >= 0x1EA0))
                    r = 0x01 + (ch & 1); // (ch & 1) ? 0x02 : 0x01;
                  else if (ch <= 0x1E9B)
                    r = 0x02;
                }
                break;
	case 0x1f:  r  = Gen_PAGE_1F[(BYTE)ch]; break;
	case 0x20:  if (ch < 0x20E4) r  = Gen_PAGE_20[(BYTE)ch]; break;
	case 0x21:
                if (ch < 0x21F4)
                {
                  if (ch >= 0x2190) 
                  {
                    if (BTEST(L"\x0C1F\x4049\x0000\xC000\x0014\x0000\x0000", ch - 0x2190)) r = 0x16;
                    else r = 0x19;
                  }
                  else if (ch >  0x2183) {}
                  else if (ch >= 0x2160) r = 0x07;
                  else if (ch >= 0x2153) r = 0x08;
                  else if (ch >= 0x213b) {}
                  else r  = Gen_PAGE_21[(BYTE)ch];
                }
                break;
	case 0x22:  if (ch < 0x22F2) r = 0x16; break;
	case 0x23:  if (ch < 0x239B) pb = Gen_PAGE_23; break;
	case 0x24: 
#ifdef USE_DATA
                pb = Gen_PAGE_24; break;
#else
                if (ch <  0x2460)
                {
                  if      (ch <  0x2427) r = 0x19;
                  else if (ch <  0x2440) {}
                  else if (ch <  0x244B) r = 0x19;
                }
                else if (ch <  0x249c) r = 0x08;
                else if (ch <  0x24ea) r = 0x19;
                else if (ch == 0x24ea) r = 0x08;
                break;
#endif
	case 0x25:  
		if (ch == 0x25B7 || ch == 0x25C1) r = 0x16;
		else if (ch < 0x25F8 && !IN_RANGE(ch, 0x2596, 0x259F)) r = 0x19; 
		break;
	case 0x26:  
		if (ch == 0x266F) r = 0x16;
		else if (ch < 0x2672 && !IN_RANGE(ch, 0x2614, 0x2618)) r = 0x19; 
		break;
	case 0x27:
#ifdef USE_DATA
                pb = Gen_PAGE_27; break;
#else
                if (ch < 0x27BF)
                {
                  if (IN_RANGE(ch, 0x2776, 0x279a)) 
                    r = 0x08;
                  else if (BTEST(L"\x7BCF\xFFFF\xFF7F\xFFFF\xFFF5\xE2FE\x7F00\x03FF\xFFFF\xF8FF\xFFFF\x7FFE", ch))
                    r = 0x19;
                }
                break;
#endif
	case 0x28:  r  = 0x19; break;
	case 0x2e:  if (IN_RANGE(ch, 0x2E80, 0x2EF3) && ch != 0x2E9A) r = 0x19; break;
	case 0x2f:
		r = 0x19;
                if (ch > 0x2FD5)
                {
                  if      (ch < 0x2FF0) r = 0xff;
                  else if (ch < 0x2FFC) {}
                  else r = 0xff;
                }
                break;
	case 0x30:  pb = Gen_PAGE_30; break;
	case 0x31:  pb = Gen_PAGE_31; break;
	case 0x32: 
#ifdef USE_DATA
                pb = Gen_PAGE_32; break;
#else
                if (BTEST(L"\xFFFF\xFFF8\xFFFF\xFFFF\xF000\x0000\xFFFF\xFFF1\xFFFF\xFFFF\xFFFF\x8000\xFFF0\xFFFF\xFFFF\xFFFE", ch))
                {
                  if (IN_RANGE(ch, 0x3230, 0x3229))
                    r = 0x08;
                  else
                    r = 0x19;
                }
                break;
#endif
	case 0x33:
                r = 0x19;
                if (ch > 0x3376)
                {
                  if      (ch < 0x337B) r = 0xff;
                  else if (ch < 0x33DE) {}
                  else if (ch < 0x33E0 || ch == 0x33FF) r = 0xff;
                }
                break;
	case 0x34:
	case 0x35:
	case 0x36:
	case 0x37:
	case 0x38:
	case 0x39:
	case 0x3a:
	case 0x3b:
	case 0x3c:
	case 0x3d:
	case 0x3e:
	case 0x3f:
	case 0x40:
	case 0x41:
	case 0x42:
	case 0x43:
	case 0x44:
	case 0x45:
	case 0x46:
	case 0x47:
	case 0x48:
	case 0x49:
	case 0x4a:
	case 0x4b:
	case 0x4c: 
	case 0x4d:  if (ch < 0x4DB6) r = 0x05; break;
	case 0x4e:
	case 0x4f:
	case 0x50:
	case 0x51:
	case 0x52:
	case 0x53:
	case 0x54:
	case 0x55:
	case 0x56:
	case 0x57:
	case 0x58:
	case 0x59:
	case 0x5a:
	case 0x5b:
	case 0x5c:
	case 0x5d:
	case 0x5e:
	case 0x5f:
	case 0x60:
	case 0x61:
	case 0x62:
	case 0x63:
	case 0x64:
	case 0x65:
	case 0x66:
	case 0x67:
	case 0x68:
	case 0x69:
	case 0x6a:
	case 0x6b:
	case 0x6c:
	case 0x6d:
	case 0x6e:
	case 0x6f:
	case 0x70:
	case 0x71:
	case 0x72:
	case 0x73:
	case 0x74:
	case 0x75:
	case 0x76:
	case 0x77:
	case 0x78:
	case 0x79:
	case 0x7a:
	case 0x7b:
	case 0x7c:
	case 0x7d:
	case 0x7e:
	case 0x7f:
	case 0x80:
	case 0x81:
	case 0x82:
	case 0x83:
	case 0x84:
	case 0x85:
	case 0x86:
	case 0x87:
	case 0x88:
	case 0x89:
	case 0x8a:
	case 0x8b:
	case 0x8c:
	case 0x8d:
	case 0x8e:
	case 0x8f:
	case 0x90:
	case 0x91:
	case 0x92:
	case 0x93:
	case 0x94:
	case 0x95:
	case 0x96:
	case 0x97:
	case 0x98:
	case 0x99:
	case 0x9a:
	case 0x9b:
	case 0x9c:
	case 0x9d:
	case 0x9e: 
	case 0x9f:  if (ch < 0x9FA6) r = 0x05; break;
	case 0xa0:
	case 0xa1:
	case 0xa2:
	case 0xa3:  r  = 0x05; break;
	case 0xa4: 
                if (ch < 0xa4c7)
                {
                  if (ch < 0xa4a4)
                  {
                    if      (ch < 0xa48d) r = 0x05;
                    else if (ch < 0xa490) {}
                    else if (ch < 0xa4a2) r = 0x19;
                  }
                  else if (ch == 0xa4b4 || ch == 0xa4c1 || ch == 0xa4c5) {}
                  else r = 0x19;
                }
                break;
    case 0xac:
	case 0xad:
	case 0xae:
	case 0xaf:
	case 0xb0:
	case 0xb1:
	case 0xb2:
	case 0xb3:
	case 0xb4:
	case 0xb5:
	case 0xb6:
	case 0xb7:
	case 0xb8:
	case 0xb9:
	case 0xba:
	case 0xbb:
	case 0xbc:
	case 0xbd:
	case 0xbe:
	case 0xbf:
	case 0xc0:
	case 0xc1:
	case 0xc2:
	case 0xc3:
	case 0xc4:
	case 0xc5:
	case 0xc6:
	case 0xc7:
	case 0xc8:
	case 0xc9:
	case 0xca:
	case 0xcb:
	case 0xcc:
	case 0xcd:
	case 0xce:
	case 0xcf:
	case 0xd0:
	case 0xd1:
	case 0xd2:
	case 0xd3:
	case 0xd4:
	case 0xd5:
	case 0xd6: 
	case 0xd7:  if (ch < 0xD7A4) r = 0x05; break;
	case 0xd8:
	case 0xd9:
	case 0xda:
	case 0xdb:
	case 0xdc:
	case 0xdd:
	case 0xde:
	case 0xdf:  r  = 0x1c; break;
	case 0xe0:
	case 0xe1:
	case 0xe2:
	case 0xe3:
	case 0xe4:
	case 0xe5:
	case 0xe6:
	case 0xe7:
	case 0xe8:
	case 0xe9:
	case 0xea:
	case 0xeb:
	case 0xec:
	case 0xed:
	case 0xee:
	case 0xef:
	case 0xf0:
	case 0xf1:
	case 0xf2:
	case 0xf3:
	case 0xf4:
	case 0xf5:
	case 0xf6:
	case 0xf7:
	case 0xf8:  r  = 0x1d; break;
	case 0xf9: 
	case 0xfa:  if (ch < 0xFA2E) r = 0x05;  break;
	case 0xfb:
#ifdef USE_DATA
                pb = Gen_PAGE_FB; break;
#else
                if      (ch == 0xFB1E) r = 0x13;
                else if (ch == 0xFB29) r = 0x16;
                else
                {
                  bool f;
                  if (ch < 0xFB46) f = BTEST(L"\xFE00\x1F07\xFFFF\xFEFA\xDB00", ch);
                  else             f = !IN_RANGE(ch, 0xFBB2, 0xFBDD2);
                  if (f && ch < 0xFB18) r = 0x02;
                }
                break;
#endif
	case 0xfc:  r  = 0x05; break;
	case 0xfd: 
//#ifdef USE_DATA
//                pb = Gen_PAGE_FD; break;
//#else
                if      (ch < 0xFD3E) r = 0x05;
                else if (ch < 0xFD50)
                { 
                  if      (ch == 0xFD3E) r = 0x09; 
                  else if (ch == 0xFD3F) r = 0x0a; 
                }
                else if (ch < 0xFDC8)
                {
                  if (ch < 0xFD90 || ch > 0xFD91) r = 0x05;
                }
                else if (IN_RANGE(ch, 0xFDF0, 0xFDFB)) r = 0x05;
                break;
//#endif
	case 0xfe:  pb = Gen_PAGE_FE; break;
	case 0xff:  r  = Gen_PAGE_FF[(BYTE)ch]; break;
	}
	if (pb) 
      r = RLELookup(pb, (BYTE)ch);
	return r;
}

#endif // table substitute
//Row table 1024 (1K)
//48 Unique Rows,  12288 (12k) bytes,  TOTAL = 13312 (13k)
//RLE rows, Limits 80/100, 26
//48 Unique Rows,  7366 (8k) bytes,  TOTAL = 8390 (9k)
