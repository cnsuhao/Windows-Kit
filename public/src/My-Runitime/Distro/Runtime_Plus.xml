<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Runtime_Plus</name>
    </assembly>
    <members>
        <member name="T:System.Extensions.ArrayExtensions">
            <summary>
            Extension methods for an <see cref="T:System.Array"/>.
            </summary>
        </member>
        <member name="M:System.Extensions.ArrayExtensions.IsNullOrEmpty(System.Array)">
            <summary>
            Indicates whether the specified <see cref="T:System.Array"/> is null or has a zero length.
            </summary>
            <param name="array">The <see cref="T:System.Array"/> to check.</param>
            <returns><b>True</b> if the <see cref="T:System.Array"/> is null or has a zero length; <b>false</b> otherwise.</returns>
        </member>
        <member name="M:System.Extensions.ArrayExtensions.ToDelimitedString``1(``0[],System.String,System.String)">
            <summary>
            Formats the array as a string, each element delimited by a seperator.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of the array.</typeparam>
            <param name="array">The array to format.</param>
            <param name="format">The format specifier for each element of the array.</param>
            <param name="delimiter">The delimiting string to use.</param>
            <returns>The array, formatted as as string, each element delimited by a seperator.</returns>
        </member>
        <member name="M:System.Extensions.ArrayExtensions.ToHexString(System.Byte[])">
            <summary>
            Converts the given byte array to pure hex digits.  { 0, 255 } becomes 00FF
            </summary>
            <param name="array">The byte array to convert to hex.</param>
            <returns>The hex string representation of the byte array.</returns>
        </member>
        <member name="M:System.Extensions.ArrayExtensions.Combine``1(``0[][])">
            <summary>
            Combines a series of arrays of the same type into a single array.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of the array.</typeparam>
            <param name="arrays">The arrays to combine.</param>
            <returns>A single array of type T, with all of the contents of the arrays.</returns>
        </member>
        <member name="T:System.Extensions.BooleanExtensions">
            <summary>
            Extension methods for a <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="M:System.Extensions.BooleanExtensions.ToString(System.Boolean,System.String)">
            <summary>
            Converts the boolean into a string representation using the <see cref="T:System.Extensions.BooleanFormatProvider"/>.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> to convert.</param>
            <param name="format">The format string to use during conversion.</param>
            <returns>A string representation of the boolean.</returns>
        </member>
        <member name="T:System.Extensions.BooleanFormatProvider">
            <summary>
            Provides formatting for <see cref="T:System.Boolean"/> types.
            </summary>
        </member>
        <member name="M:System.Extensions.BooleanFormatProvider.GetFormat(System.Type)">
            <summary>
            Gets a formatter based on the requested type.
            </summary>
            <param name="formatType">The requested type.</param>
            <returns>The formatter if one is found.</returns>
        </member>
        <member name="M:System.Extensions.BooleanFormatProvider.Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            Formats a <see cref="T:System.Boolean"/> based on the supplied format strings.
            </summary>
            <param name="format">The format in which to format.</param>
            <param name="arg">The value to format.</param>
            <param name="formatProvider">The formatter to use.</param>
            <returns>A formatted string.</returns>
        </member>
        <member name="T:System.Extensions.CodeDom.ClassDeclaration">
            <summary>
            Summary description for ClassDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.CodeGenerator">
            <summary>
            Summary description for CodeGenerator.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.AssemblyCollection">
            <summary>
            A collection of elements of type Assembly
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.AssemblyCollection.#ctor">
            <summary>
            Initializes a new empty instance of the AssemblyCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.AssemblyCollection.#ctor(System.Reflection.Assembly[])">
            <summary>
            Initializes a new instance of the AssemblyCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new AssemblyCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.AssemblyCollection.#ctor(System.Extensions.CodeDom.Collections.AssemblyCollection)">
            <summary>
            Initializes a new instance of the AssemblyCollection class, containing elements
            copied from another instance of AssemblyCollection
            </summary>
            <param name="items">
            The AssemblyCollection whose elements are to be added to the new AssemblyCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.AssemblyCollection.AddRange(System.Reflection.Assembly[])">
            <summary>
            Adds the elements of an array to the end of this AssemblyCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this AssemblyCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.AssemblyCollection.AddRange(System.Extensions.CodeDom.Collections.AssemblyCollection)">
            <summary>
            Adds the elements of another AssemblyCollection to the end of this AssemblyCollection.
            </summary>
            <param name="items">
            The AssemblyCollection whose elements are to be added to the end of this AssemblyCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.AssemblyCollection.Add(System.Reflection.Assembly)">
            <summary>
            Adds an instance of type Assembly to the end of this AssemblyCollection.
            </summary>
            <param name="value">
            The Assembly to be added to the end of this AssemblyCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.AssemblyCollection.Contains(System.Reflection.Assembly)">
            <summary>
            Determines whether a specfic Assembly value is in this AssemblyCollection.
            </summary>
            <param name="value">
            The Assembly value to locate in this AssemblyCollection.
            </param>
            <returns>
            true if value is found in this AssemblyCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.AssemblyCollection.IndexOf(System.Reflection.Assembly)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this AssemblyCollection
            </summary>
            <param name="value">
            The Assembly value to locate in the AssemblyCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.AssemblyCollection.Insert(System.Int32,System.Reflection.Assembly)">
            <summary>
            Inserts an element into the AssemblyCollection at the specified index
            </summary>
            <param name="index">
            The index at which the Assembly is to be inserted.
            </param>
            <param name="value">
            The Assembly to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.AssemblyCollection.Item(System.Int32)">
            <summary>
            Gets or sets the Assembly at the given index in this AssemblyCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.AssemblyCollection.Remove(System.Reflection.Assembly)">
            <summary>
            Removes the first occurrence of a specific Assembly from this AssemblyCollection.
            </summary>
            <param name="value">
            The Assembly value to remove from this AssemblyCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.AssemblyCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by AssemblyCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.AssemblyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this AssemblyCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.CatchClauseCollection">
            <summary>
            A collection of elements of type CatchClause
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.CatchClauseCollection.#ctor">
            <summary>
            Initializes a new empty instance of the CatchClauseCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.CatchClauseCollection.#ctor(System.Extensions.CodeDom.Statements.CatchClause[])">
            <summary>
            Initializes a new instance of the CatchClauseCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new CatchClauseCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.CatchClauseCollection.#ctor(System.Extensions.CodeDom.Collections.CatchClauseCollection)">
            <summary>
            Initializes a new instance of the CatchClauseCollection class, containing elements
            copied from another instance of CatchClauseCollection
            </summary>
            <param name="items">
            The CatchClauseCollection whose elements are to be added to the new CatchClauseCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.CatchClauseCollection.AddRange(System.Extensions.CodeDom.Statements.CatchClause[])">
            <summary>
            Adds the elements of an array to the end of this CatchClauseCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this CatchClauseCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.CatchClauseCollection.AddRange(System.Extensions.CodeDom.Collections.CatchClauseCollection)">
            <summary>
            Adds the elements of another CatchClauseCollection to the end of this CatchClauseCollection.
            </summary>
            <param name="items">
            The CatchClauseCollection whose elements are to be added to the end of this CatchClauseCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.CatchClauseCollection.Add(System.Extensions.CodeDom.Statements.CatchClause)">
            <summary>
            Adds an instance of type CatchClause to the end of this CatchClauseCollection.
            </summary>
            <param name="value">
            The CatchClause to be added to the end of this CatchClauseCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.CatchClauseCollection.Contains(System.Extensions.CodeDom.Statements.CatchClause)">
            <summary>
            Determines whether a specfic CatchClause value is in this CatchClauseCollection.
            </summary>
            <param name="value">
            The CatchClause value to locate in this CatchClauseCollection.
            </param>
            <returns>
            true if value is found in this CatchClauseCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.CatchClauseCollection.IndexOf(System.Extensions.CodeDom.Statements.CatchClause)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this CatchClauseCollection
            </summary>
            <param name="value">
            The CatchClause value to locate in the CatchClauseCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.CatchClauseCollection.Insert(System.Int32,System.Extensions.CodeDom.Statements.CatchClause)">
            <summary>
            Inserts an element into the CatchClauseCollection at the specified index
            </summary>
            <param name="index">
            The index at which the CatchClause is to be inserted.
            </param>
            <param name="value">
            The CatchClause to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.CatchClauseCollection.Item(System.Int32)">
            <summary>
            Gets or sets the CatchClause at the given index in this CatchClauseCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.CatchClauseCollection.Remove(System.Extensions.CodeDom.Statements.CatchClause)">
            <summary>
            Removes the first occurrence of a specific CatchClause from this CatchClauseCollection.
            </summary>
            <param name="value">
            The CatchClause value to remove from this CatchClauseCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.CatchClauseCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by CatchClauseCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.CatchClauseCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this CatchClauseCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection">
            <summary>
            A collection of elements of type ConstructorDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.#ctor">
            <summary>
            Initializes a new empty instance of the ConstructorDeclarationCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.#ctor(System.Extensions.CodeDom.ConstructorDeclaration[])">
            <summary>
            Initializes a new instance of the ConstructorDeclarationCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new ConstructorDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.#ctor(System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection)">
            <summary>
            Initializes a new instance of the ConstructorDeclarationCollection class, containing elements
            copied from another instance of ConstructorDeclarationCollection
            </summary>
            <param name="items">
            The ConstructorDeclarationCollection whose elements are to be added to the new ConstructorDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.AddRange(System.Extensions.CodeDom.ConstructorDeclaration[])">
            <summary>
            Adds the elements of an array to the end of this ConstructorDeclarationCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this ConstructorDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.AddRange(System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection)">
            <summary>
            Adds the elements of another ConstructorDeclarationCollection to the end of this ConstructorDeclarationCollection.
            </summary>
            <param name="items">
            The ConstructorDeclarationCollection whose elements are to be added to the end of this ConstructorDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.Add(System.Extensions.CodeDom.ConstructorDeclaration)">
            <summary>
            Adds an instance of type ConstructorDeclaration to the end of this ConstructorDeclarationCollection.
            </summary>
            <param name="value">
            The ConstructorDeclaration to be added to the end of this ConstructorDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.Contains(System.Extensions.CodeDom.ConstructorDeclaration)">
            <summary>
            Determines whether a specfic ConstructorDeclaration value is in this ConstructorDeclarationCollection.
            </summary>
            <param name="value">
            The ConstructorDeclaration value to locate in this ConstructorDeclarationCollection.
            </param>
            <returns>
            true if value is found in this ConstructorDeclarationCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.IndexOf(System.Extensions.CodeDom.ConstructorDeclaration)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this ConstructorDeclarationCollection
            </summary>
            <param name="value">
            The ConstructorDeclaration value to locate in the ConstructorDeclarationCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.Insert(System.Int32,System.Extensions.CodeDom.ConstructorDeclaration)">
            <summary>
            Inserts an element into the ConstructorDeclarationCollection at the specified index
            </summary>
            <param name="index">
            The index at which the ConstructorDeclaration is to be inserted.
            </param>
            <param name="value">
            The ConstructorDeclaration to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.Item(System.Int32)">
            <summary>
            Gets or sets the ConstructorDeclaration at the given index in this ConstructorDeclarationCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.Remove(System.Extensions.CodeDom.ConstructorDeclaration)">
            <summary>
            Removes the first occurrence of a specific ConstructorDeclaration from this ConstructorDeclarationCollection.
            </summary>
            <param name="value">
            The ConstructorDeclaration value to remove from this ConstructorDeclarationCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by ConstructorDeclarationCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ConstructorDeclarationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this ConstructorDeclarationCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.EventDeclarationCollection">
            <summary>
            A collection of elements of type EventDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.EventDeclarationCollection.#ctor">
            <summary>
            Initializes a new empty instance of the EventDeclarationCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.EventDeclarationCollection.#ctor(System.Extensions.CodeDom.EventDeclaration[])">
            <summary>
            Initializes a new instance of the EventDeclarationCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new EventDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.EventDeclarationCollection.#ctor(System.Extensions.CodeDom.Collections.EventDeclarationCollection)">
            <summary>
            Initializes a new instance of the EventDeclarationCollection class, containing elements
            copied from another instance of EventDeclarationCollection
            </summary>
            <param name="items">
            The EventDeclarationCollection whose elements are to be added to the new EventDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.EventDeclarationCollection.AddRange(System.Extensions.CodeDom.EventDeclaration[])">
            <summary>
            Adds the elements of an array to the end of this EventDeclarationCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this EventDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.EventDeclarationCollection.AddRange(System.Extensions.CodeDom.Collections.EventDeclarationCollection)">
            <summary>
            Adds the elements of another EventDeclarationCollection to the end of this EventDeclarationCollection.
            </summary>
            <param name="items">
            The EventDeclarationCollection whose elements are to be added to the end of this EventDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.EventDeclarationCollection.Add(System.Extensions.CodeDom.EventDeclaration)">
            <summary>
            Adds an instance of type EventDeclaration to the end of this EventDeclarationCollection.
            </summary>
            <param name="value">
            The EventDeclaration to be added to the end of this EventDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.EventDeclarationCollection.Contains(System.Extensions.CodeDom.EventDeclaration)">
            <summary>
            Determines whether a specfic EventDeclaration value is in this EventDeclarationCollection.
            </summary>
            <param name="value">
            The EventDeclaration value to locate in this EventDeclarationCollection.
            </param>
            <returns>
            true if value is found in this EventDeclarationCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.EventDeclarationCollection.IndexOf(System.Extensions.CodeDom.EventDeclaration)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this EventDeclarationCollection
            </summary>
            <param name="value">
            The EventDeclaration value to locate in the EventDeclarationCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.EventDeclarationCollection.Insert(System.Int32,System.Extensions.CodeDom.EventDeclaration)">
            <summary>
            Inserts an element into the EventDeclarationCollection at the specified index
            </summary>
            <param name="index">
            The index at which the EventDeclaration is to be inserted.
            </param>
            <param name="value">
            The EventDeclaration to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.EventDeclarationCollection.Item(System.Int32)">
            <summary>
            Gets or sets the EventDeclaration at the given index in this EventDeclarationCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.EventDeclarationCollection.Remove(System.Extensions.CodeDom.EventDeclaration)">
            <summary>
            Removes the first occurrence of a specific EventDeclaration from this EventDeclarationCollection.
            </summary>
            <param name="value">
            The EventDeclaration value to remove from this EventDeclarationCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.EventDeclarationCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by EventDeclarationCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.EventDeclarationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this EventDeclarationCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.ExpressionCollection">
            <summary>
            A collection of elements of type Expression
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ExpressionCollection.#ctor">
            <summary>
            Initializes a new empty instance of the ExpressionCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ExpressionCollection.#ctor(System.Extensions.CodeDom.Expressions.Expression[])">
            <summary>
            Initializes a new instance of the ExpressionCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new ExpressionCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ExpressionCollection.#ctor(System.Extensions.CodeDom.Collections.ExpressionCollection)">
            <summary>
            Initializes a new instance of the ExpressionCollection class, containing elements
            copied from another instance of ExpressionCollection
            </summary>
            <param name="items">
            The ExpressionCollection whose elements are to be added to the new ExpressionCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ExpressionCollection.AddRange(System.Extensions.CodeDom.Expressions.Expression[])">
            <summary>
            Adds the elements of an array to the end of this ExpressionCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this ExpressionCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ExpressionCollection.AddRange(System.Extensions.CodeDom.Collections.ExpressionCollection)">
            <summary>
            Adds the elements of another ExpressionCollection to the end of this ExpressionCollection.
            </summary>
            <param name="items">
            The ExpressionCollection whose elements are to be added to the end of this ExpressionCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ExpressionCollection.Add(System.Extensions.CodeDom.Expressions.Expression)">
            <summary>
            Adds an instance of type Expression to the end of this ExpressionCollection.
            </summary>
            <param name="value">
            The Expression to be added to the end of this ExpressionCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.ExpressionCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by ExpressionCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ExpressionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this ExpressionCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.FieldDeclarationCollection">
            <summary>
            A collection of elements of type FieldDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.#ctor">
            <summary>
            Initializes a new empty instance of the FieldDeclarationCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.#ctor(System.Extensions.CodeDom.FieldDeclaration[])">
            <summary>
            Initializes a new instance of the FieldDeclarationCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new FieldDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.#ctor(System.Extensions.CodeDom.Collections.FieldDeclarationCollection)">
            <summary>
            Initializes a new instance of the FieldDeclarationCollection class, containing elements
            copied from another instance of FieldDeclarationCollection
            </summary>
            <param name="items">
            The FieldDeclarationCollection whose elements are to be added to the new FieldDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.AddRange(System.Extensions.CodeDom.FieldDeclaration[])">
            <summary>
            Adds the elements of an array to the end of this FieldDeclarationCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this FieldDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.AddRange(System.Extensions.CodeDom.Collections.FieldDeclarationCollection)">
            <summary>
            Adds the elements of another FieldDeclarationCollection to the end of this FieldDeclarationCollection.
            </summary>
            <param name="items">
            The FieldDeclarationCollection whose elements are to be added to the end of this FieldDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.Add(System.Extensions.CodeDom.FieldDeclaration)">
            <summary>
            Adds an instance of type FieldDeclaration to the end of this FieldDeclarationCollection.
            </summary>
            <param name="value">
            The FieldDeclaration to be added to the end of this FieldDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.Contains(System.Extensions.CodeDom.FieldDeclaration)">
            <summary>
            Determines whether a specfic FieldDeclaration value is in this FieldDeclarationCollection.
            </summary>
            <param name="value">
            The FieldDeclaration value to locate in this FieldDeclarationCollection.
            </param>
            <returns>
            true if value is found in this FieldDeclarationCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.IndexOf(System.Extensions.CodeDom.FieldDeclaration)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this FieldDeclarationCollection
            </summary>
            <param name="value">
            The FieldDeclaration value to locate in the FieldDeclarationCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.Insert(System.Int32,System.Extensions.CodeDom.FieldDeclaration)">
            <summary>
            Inserts an element into the FieldDeclarationCollection at the specified index
            </summary>
            <param name="index">
            The index at which the FieldDeclaration is to be inserted.
            </param>
            <param name="value">
            The FieldDeclaration to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.Item(System.Int32)">
            <summary>
            Gets or sets the FieldDeclaration at the given index in this FieldDeclarationCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.Remove(System.Extensions.CodeDom.FieldDeclaration)">
            <summary>
            Removes the first occurrence of a specific FieldDeclaration from this FieldDeclarationCollection.
            </summary>
            <param name="value">
            The FieldDeclaration value to remove from this FieldDeclarationCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by FieldDeclarationCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.FieldDeclarationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this FieldDeclarationCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection">
            <summary>
            A collection of elements of type IndexerDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.#ctor">
            <summary>
            Initializes a new empty instance of the IndexerDeclarationCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.#ctor(System.Extensions.CodeDom.IndexerDeclaration[])">
            <summary>
            Initializes a new instance of the IndexerDeclarationCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new IndexerDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.#ctor(System.Extensions.CodeDom.Collections.IndexerDeclarationCollection)">
            <summary>
            Initializes a new instance of the IndexerDeclarationCollection class, containing elements
            copied from another instance of IndexerDeclarationCollection
            </summary>
            <param name="items">
            The IndexerDeclarationCollection whose elements are to be added to the new IndexerDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.AddRange(System.Extensions.CodeDom.IndexerDeclaration[])">
            <summary>
            Adds the elements of an array to the end of this IndexerDeclarationCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this IndexerDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.AddRange(System.Extensions.CodeDom.Collections.IndexerDeclarationCollection)">
            <summary>
            Adds the elements of another IndexerDeclarationCollection to the end of this IndexerDeclarationCollection.
            </summary>
            <param name="items">
            The IndexerDeclarationCollection whose elements are to be added to the end of this IndexerDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.Add(System.Extensions.CodeDom.IndexerDeclaration)">
            <summary>
            Adds an instance of type IndexerDeclaration to the end of this IndexerDeclarationCollection.
            </summary>
            <param name="value">
            The IndexerDeclaration to be added to the end of this IndexerDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.Contains(System.Extensions.CodeDom.IndexerDeclaration)">
            <summary>
            Determines whether a specfic IndexerDeclaration value is in this IndexerDeclarationCollection.
            </summary>
            <param name="value">
            The IndexerDeclaration value to locate in this IndexerDeclarationCollection.
            </param>
            <returns>
            true if value is found in this IndexerDeclarationCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.IndexOf(System.Extensions.CodeDom.IndexerDeclaration)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this IndexerDeclarationCollection
            </summary>
            <param name="value">
            The IndexerDeclaration value to locate in the IndexerDeclarationCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.Insert(System.Int32,System.Extensions.CodeDom.IndexerDeclaration)">
            <summary>
            Inserts an element into the IndexerDeclarationCollection at the specified index
            </summary>
            <param name="index">
            The index at which the IndexerDeclaration is to be inserted.
            </param>
            <param name="value">
            The IndexerDeclaration to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.Item(System.Int32)">
            <summary>
            Gets or sets the IndexerDeclaration at the given index in this IndexerDeclarationCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.Remove(System.Extensions.CodeDom.IndexerDeclaration)">
            <summary>
            Removes the first occurrence of a specific IndexerDeclaration from this IndexerDeclarationCollection.
            </summary>
            <param name="value">
            The IndexerDeclaration value to remove from this IndexerDeclarationCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by IndexerDeclarationCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.IndexerDeclarationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this IndexerDeclarationCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.MethodDeclarationCollection">
            <summary>
            A collection of elements of type MethodDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.#ctor">
            <summary>
            Initializes a new empty instance of the MethodDeclarationCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.#ctor(System.Extensions.CodeDom.MethodDeclaration[])">
            <summary>
            Initializes a new instance of the MethodDeclarationCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new MethodDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.#ctor(System.Extensions.CodeDom.Collections.MethodDeclarationCollection)">
            <summary>
            Initializes a new instance of the MethodDeclarationCollection class, containing elements
            copied from another instance of MethodDeclarationCollection
            </summary>
            <param name="items">
            The MethodDeclarationCollection whose elements are to be added to the new MethodDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.AddRange(System.Extensions.CodeDom.MethodDeclaration[])">
            <summary>
            Adds the elements of an array to the end of this MethodDeclarationCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this MethodDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.AddRange(System.Extensions.CodeDom.Collections.MethodDeclarationCollection)">
            <summary>
            Adds the elements of another MethodDeclarationCollection to the end of this MethodDeclarationCollection.
            </summary>
            <param name="items">
            The MethodDeclarationCollection whose elements are to be added to the end of this MethodDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.Add(System.Extensions.CodeDom.MethodDeclaration)">
            <summary>
            Adds an instance of type MethodDeclaration to the end of this MethodDeclarationCollection.
            </summary>
            <param name="value">
            The MethodDeclaration to be added to the end of this MethodDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.Contains(System.Extensions.CodeDom.MethodDeclaration)">
            <summary>
            Determines whether a specfic MethodDeclaration value is in this MethodDeclarationCollection.
            </summary>
            <param name="value">
            The MethodDeclaration value to locate in this MethodDeclarationCollection.
            </param>
            <returns>
            true if value is found in this MethodDeclarationCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.IndexOf(System.Extensions.CodeDom.MethodDeclaration)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this MethodDeclarationCollection
            </summary>
            <param name="value">
            The MethodDeclaration value to locate in the MethodDeclarationCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.Insert(System.Int32,System.Extensions.CodeDom.MethodDeclaration)">
            <summary>
            Inserts an element into the MethodDeclarationCollection at the specified index
            </summary>
            <param name="index">
            The index at which the MethodDeclaration is to be inserted.
            </param>
            <param name="value">
            The MethodDeclaration to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.Item(System.Int32)">
            <summary>
            Gets or sets the MethodDeclaration at the given index in this MethodDeclarationCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.Remove(System.Extensions.CodeDom.MethodDeclaration)">
            <summary>
            Removes the first occurrence of a specific MethodDeclaration from this MethodDeclarationCollection.
            </summary>
            <param name="value">
            The MethodDeclaration value to remove from this MethodDeclarationCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by MethodDeclarationCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.MethodDeclarationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this MethodDeclarationCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection">
            <summary>
            A collection of elements of type ParameterDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.#ctor">
            <summary>
            Initializes a new empty instance of the ParameterDeclarationCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.#ctor(System.Extensions.CodeDom.ParameterDeclaration[])">
            <summary>
            Initializes a new instance of the ParameterDeclarationCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new ParameterDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.#ctor(System.Extensions.CodeDom.Collections.ParameterDeclarationCollection)">
            <summary>
            Initializes a new instance of the ParameterDeclarationCollection class, containing elements
            copied from another instance of ParameterDeclarationCollection
            </summary>
            <param name="items">
            The ParameterDeclarationCollection whose elements are to be added to the new ParameterDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.AddRange(System.Extensions.CodeDom.ParameterDeclaration[])">
            <summary>
            Adds the elements of an array to the end of this ParameterDeclarationCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this ParameterDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.AddRange(System.Extensions.CodeDom.Collections.ParameterDeclarationCollection)">
            <summary>
            Adds the elements of another ParameterDeclarationCollection to the end of this ParameterDeclarationCollection.
            </summary>
            <param name="items">
            The ParameterDeclarationCollection whose elements are to be added to the end of this ParameterDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.Add(System.Extensions.CodeDom.ParameterDeclaration)">
            <summary>
            Adds an instance of type ParameterDeclaration to the end of this ParameterDeclarationCollection.
            </summary>
            <param name="value">
            The ParameterDeclaration to be added to the end of this ParameterDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.Contains(System.Extensions.CodeDom.ParameterDeclaration)">
            <summary>
            Determines whether a specfic ParameterDeclaration value is in this ParameterDeclarationCollection.
            </summary>
            <param name="value">
            The ParameterDeclaration value to locate in this ParameterDeclarationCollection.
            </param>
            <returns>
            true if value is found in this ParameterDeclarationCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.IndexOf(System.Extensions.CodeDom.ParameterDeclaration)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this ParameterDeclarationCollection
            </summary>
            <param name="value">
            The ParameterDeclaration value to locate in the ParameterDeclarationCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.Insert(System.Int32,System.Extensions.CodeDom.ParameterDeclaration)">
            <summary>
            Inserts an element into the ParameterDeclarationCollection at the specified index
            </summary>
            <param name="index">
            The index at which the ParameterDeclaration is to be inserted.
            </param>
            <param name="value">
            The ParameterDeclaration to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.Item(System.Int32)">
            <summary>
            Gets or sets the ParameterDeclaration at the given index in this ParameterDeclarationCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.Remove(System.Extensions.CodeDom.ParameterDeclaration)">
            <summary>
            Removes the first occurrence of a specific ParameterDeclaration from this ParameterDeclarationCollection.
            </summary>
            <param name="value">
            The ParameterDeclaration value to remove from this ParameterDeclarationCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by ParameterDeclarationCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ParameterDeclarationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this ParameterDeclarationCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection">
            <summary>
            A collection of elements of type PropertyDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.#ctor">
            <summary>
            Initializes a new empty instance of the PropertyDeclarationCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.#ctor(System.Extensions.CodeDom.PropertyDeclaration[])">
            <summary>
            Initializes a new instance of the PropertyDeclarationCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new PropertyDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.#ctor(System.Extensions.CodeDom.Collections.PropertyDeclarationCollection)">
            <summary>
            Initializes a new instance of the PropertyDeclarationCollection class, containing elements
            copied from another instance of PropertyDeclarationCollection
            </summary>
            <param name="items">
            The PropertyDeclarationCollection whose elements are to be added to the new PropertyDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.AddRange(System.Extensions.CodeDom.PropertyDeclaration[])">
            <summary>
            Adds the elements of an array to the end of this PropertyDeclarationCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this PropertyDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.AddRange(System.Extensions.CodeDom.Collections.PropertyDeclarationCollection)">
            <summary>
            Adds the elements of another PropertyDeclarationCollection to the end of this PropertyDeclarationCollection.
            </summary>
            <param name="items">
            The PropertyDeclarationCollection whose elements are to be added to the end of this PropertyDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.Add(System.Extensions.CodeDom.PropertyDeclaration)">
            <summary>
            Adds an instance of type PropertyDeclaration to the end of this PropertyDeclarationCollection.
            </summary>
            <param name="value">
            The PropertyDeclaration to be added to the end of this PropertyDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.Contains(System.Extensions.CodeDom.PropertyDeclaration)">
            <summary>
            Determines whether a specfic PropertyDeclaration value is in this PropertyDeclarationCollection.
            </summary>
            <param name="value">
            The PropertyDeclaration value to locate in this PropertyDeclarationCollection.
            </param>
            <returns>
            true if value is found in this PropertyDeclarationCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.IndexOf(System.Extensions.CodeDom.PropertyDeclaration)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this PropertyDeclarationCollection
            </summary>
            <param name="value">
            The PropertyDeclaration value to locate in the PropertyDeclarationCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.Insert(System.Int32,System.Extensions.CodeDom.PropertyDeclaration)">
            <summary>
            Inserts an element into the PropertyDeclarationCollection at the specified index
            </summary>
            <param name="index">
            The index at which the PropertyDeclaration is to be inserted.
            </param>
            <param name="value">
            The PropertyDeclaration to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.Item(System.Int32)">
            <summary>
            Gets or sets the PropertyDeclaration at the given index in this PropertyDeclarationCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.Remove(System.Extensions.CodeDom.PropertyDeclaration)">
            <summary>
            Removes the first occurrence of a specific PropertyDeclaration from this PropertyDeclarationCollection.
            </summary>
            <param name="value">
            The PropertyDeclaration value to remove from this PropertyDeclarationCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by PropertyDeclarationCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.PropertyDeclarationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this PropertyDeclarationCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.StatementCollection">
            <summary>
            A collection of elements of type Statement
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StatementCollection.#ctor">
            <summary>
            Initializes a new empty instance of the StatementCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StatementCollection.#ctor(System.Extensions.CodeDom.Statements.Statement[])">
            <summary>
            Initializes a new instance of the StatementCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new StatementCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StatementCollection.#ctor(System.Extensions.CodeDom.Collections.StatementCollection)">
            <summary>
            Initializes a new instance of the StatementCollection class, containing elements
            copied from another instance of StatementCollection
            </summary>
            <param name="items">
            The StatementCollection whose elements are to be added to the new StatementCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StatementCollection.AddRange(System.Extensions.CodeDom.Statements.Statement[])">
            <summary>
            Adds the elements of an array to the end of this StatementCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this StatementCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StatementCollection.AddRange(System.Extensions.CodeDom.Collections.StatementCollection)">
            <summary>
            Adds the elements of another StatementCollection to the end of this StatementCollection.
            </summary>
            <param name="items">
            The StatementCollection whose elements are to be added to the end of this StatementCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StatementCollection.Add(System.Extensions.CodeDom.Statements.Statement)">
            <summary>
            Adds an instance of type Statement to the end of this StatementCollection.
            </summary>
            <param name="value">
            The Statement to be added to the end of this StatementCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.StatementCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by StatementCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StatementCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this StatementCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.StringClassDeclarationDictionary">
            <summary>
            A dictionary with keys of type String and values of type ClassDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringClassDeclarationDictionary.#ctor">
            <summary>
            Initializes a new empty instance of the StringClassDeclarationDictionary class
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringClassDeclarationDictionary.Item(System.String)">
            <summary>
            Gets or sets the ClassDeclaration associated with the given String
            </summary>
            <param name="key">
            The String whose value to get or set.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringClassDeclarationDictionary.Add(System.Extensions.CodeDom.ClassDeclaration)">
            <summary>
            Adds an element with the specified key and value to this StringClassDeclarationDictionary.
            </summary>
            <param name="key">
            The String key of the element to add.
            </param>
            <param name="value">
            The ClassDeclaration value of the element to add.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringClassDeclarationDictionary.Contains(System.String)">
            <summary>
            Determines whether this StringClassDeclarationDictionary contains a specific key.
            </summary>
            <param name="key">
            The String key to locate in this StringClassDeclarationDictionary.
            </param>
            <returns>
            true if this StringClassDeclarationDictionary contains an element with the specified key;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringClassDeclarationDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether this StringClassDeclarationDictionary contains a specific key.
            </summary>
            <param name="key">
            The String key to locate in this StringClassDeclarationDictionary.
            </param>
            <returns>
            true if this StringClassDeclarationDictionary contains an element with the specified key;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringClassDeclarationDictionary.ContainsValue(System.Extensions.CodeDom.ClassDeclaration)">
            <summary>
            Determines whether this StringClassDeclarationDictionary contains a specific value.
            </summary>
            <param name="value">
            The ClassDeclaration value to locate in this StringClassDeclarationDictionary.
            </param>
            <returns>
            true if this StringClassDeclarationDictionary contains an element with the specified value;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringClassDeclarationDictionary.Remove(System.String)">
            <summary>
            Removes the element with the specified key from this StringClassDeclarationDictionary.
            </summary>
            <param name="key">
            The String key of the element to remove.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringClassDeclarationDictionary.Keys">
            <summary>
            Gets a collection containing the keys in this StringClassDeclarationDictionary.
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringClassDeclarationDictionary.Values">
            <summary>
            Gets a collection containing the values in this StringClassDeclarationDictionary.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.StringConstantDeclaration">
            <summary>
            A dictionary with keys of type String and values of type ConstantDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringConstantDeclaration.#ctor">
            <summary>
            Initializes a new empty instance of the StringConstantDeclaration class
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringConstantDeclaration.Item(System.String)">
            <summary>
            Gets or sets the ConstantDeclaration associated with the given String
            </summary>
            <param name="key">
            The String whose value to get or set.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringConstantDeclaration.Add(System.Extensions.CodeDom.ConstantDeclaration)">
            <summary>
            Adds an element with the specified key and value to this StringConstantDeclaration.
            </summary>
            <param name="key">
            The String key of the element to add.
            </param>
            <param name="value">
            The ConstantDeclaration value of the element to add.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringConstantDeclaration.Contains(System.String)">
            <summary>
            Determines whether this StringConstantDeclaration contains a specific key.
            </summary>
            <param name="key">
            The String key to locate in this StringConstantDeclaration.
            </param>
            <returns>
            true if this StringConstantDeclaration contains an element with the specified key;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringConstantDeclaration.Remove(System.String)">
            <summary>
            Removes the element with the specified key from this StringConstantDeclaration.
            </summary>
            <param name="key">
            The String key of the element to remove.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringConstantDeclaration.Keys">
            <summary>
            Gets a collection containing the keys in this StringConstantDeclaration.
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringConstantDeclaration.Values">
            <summary>
            Gets a collection containing the values in this StringConstantDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.StringEnumDeclarationDictionary">
            <summary>
            A dictionary with keys of type String and values of type EnumDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringEnumDeclarationDictionary.#ctor">
            <summary>
            Initializes a new empty instance of the StringEnumDeclarationDictionary class
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringEnumDeclarationDictionary.Item(System.String)">
            <summary>
            Gets or sets the EnumDeclaration associated with the given String
            </summary>
            <param name="key">
            The String whose value to get or set.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringEnumDeclarationDictionary.Add(System.Extensions.CodeDom.EnumDeclaration)">
            <summary>
            Adds an element with the specified key and value to this StringEnumDeclarationDictionary.
            </summary>
            <param name="key">
            The String key of the element to add.
            </param>
            <param name="value">
            The EnumDeclaration value of the element to add.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringEnumDeclarationDictionary.Contains(System.String)">
            <summary>
            Determines whether this StringEnumDeclarationDictionary contains a specific key.
            </summary>
            <param name="key">
            The String key to locate in this StringEnumDeclarationDictionary.
            </param>
            <returns>
            true if this StringEnumDeclarationDictionary contains an element with the specified key;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringEnumDeclarationDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether this StringEnumDeclarationDictionary contains a specific key.
            </summary>
            <param name="key">
            The String key to locate in this StringEnumDeclarationDictionary.
            </param>
            <returns>
            true if this StringEnumDeclarationDictionary contains an element with the specified key;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringEnumDeclarationDictionary.ContainsValue(System.Extensions.CodeDom.EnumDeclaration)">
            <summary>
            Determines whether this StringEnumDeclarationDictionary contains a specific value.
            </summary>
            <param name="value">
            The EnumDeclaration value to locate in this StringEnumDeclarationDictionary.
            </param>
            <returns>
            true if this StringEnumDeclarationDictionary contains an element with the specified value;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringEnumDeclarationDictionary.Remove(System.String)">
            <summary>
            Removes the element with the specified key from this StringEnumDeclarationDictionary.
            </summary>
            <param name="key">
            The String key of the element to remove.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringEnumDeclarationDictionary.Keys">
            <summary>
            Gets a collection containing the keys in this StringEnumDeclarationDictionary.
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringEnumDeclarationDictionary.Values">
            <summary>
            Gets a collection containing the values in this StringEnumDeclarationDictionary.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.StringFieldDeclarationDictionary">
            <summary>
            A dictionary with keys of type String and values of type FieldDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringFieldDeclarationDictionary.#ctor">
            <summary>
            Initializes a new empty instance of the StringFieldDeclarationDictionary class
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringFieldDeclarationDictionary.Item(System.String)">
            <summary>
            Gets or sets the FieldDeclaration associated with the given String
            </summary>
            <param name="key">
            The String whose value to get or set.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringFieldDeclarationDictionary.Add(System.Extensions.CodeDom.FieldDeclaration)">
            <summary>
            Adds an element with the specified key and value to this StringFieldDeclarationDictionary.
            </summary>
            <param name="key">
            The String key of the element to add.
            </param>
            <param name="value">
            The FieldDeclaration value of the element to add.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringFieldDeclarationDictionary.Contains(System.String)">
            <summary>
            Determines whether this StringFieldDeclarationDictionary contains a specific key.
            </summary>
            <param name="key">
            The String key to locate in this StringFieldDeclarationDictionary.
            </param>
            <returns>
            true if this StringFieldDeclarationDictionary contains an element with the specified key;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringFieldDeclarationDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether this StringFieldDeclarationDictionary contains a specific key.
            </summary>
            <param name="key">
            The String key to locate in this StringFieldDeclarationDictionary.
            </param>
            <returns>
            true if this StringFieldDeclarationDictionary contains an element with the specified key;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringFieldDeclarationDictionary.ContainsValue(System.Extensions.CodeDom.FieldDeclaration)">
            <summary>
            Determines whether this StringFieldDeclarationDictionary contains a specific value.
            </summary>
            <param name="value">
            The FieldDeclaration value to locate in this StringFieldDeclarationDictionary.
            </param>
            <returns>
            true if this StringFieldDeclarationDictionary contains an element with the specified value;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringFieldDeclarationDictionary.Remove(System.String)">
            <summary>
            Removes the element with the specified key from this StringFieldDeclarationDictionary.
            </summary>
            <param name="key">
            The String key of the element to remove.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringFieldDeclarationDictionary.Keys">
            <summary>
            Gets a collection containing the keys in this StringFieldDeclarationDictionary.
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringFieldDeclarationDictionary.Values">
            <summary>
            Gets a collection containing the values in this StringFieldDeclarationDictionary.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.StringNamespaceDeclarationDictionary">
            <summary>
            A dictionary with keys of type String and values of type NamespaceDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringNamespaceDeclarationDictionary.#ctor">
            <summary>
            Initializes a new empty instance of the StringNamespaceDeclarationDictionary class
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringNamespaceDeclarationDictionary.Item(System.String)">
            <summary>
            Gets or sets the NamespaceDeclaration associated with the given String
            </summary>
            <param name="key">
            The String whose value to get or set.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringNamespaceDeclarationDictionary.Add(System.String,System.Extensions.CodeDom.NamespaceDeclaration)">
            <summary>
            Adds an element with the specified key and value to this StringNamespaceDeclarationDictionary.
            </summary>
            <param name="key">
            The String key of the element to add.
            </param>
            <param name="value">
            The NamespaceDeclaration value of the element to add.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringNamespaceDeclarationDictionary.Contains(System.String)">
            <summary>
            Determines whether this StringNamespaceDeclarationDictionary contains a specific key.
            </summary>
            <param name="key">
            The String key to locate in this StringNamespaceDeclarationDictionary.
            </param>
            <returns>
            true if this StringNamespaceDeclarationDictionary contains an element with the specified key;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringNamespaceDeclarationDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether this StringNamespaceDeclarationDictionary contains a specific key.
            </summary>
            <param name="key">
            The String key to locate in this StringNamespaceDeclarationDictionary.
            </param>
            <returns>
            true if this StringNamespaceDeclarationDictionary contains an element with the specified key;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringNamespaceDeclarationDictionary.ContainsValue(System.Extensions.CodeDom.NamespaceDeclaration)">
            <summary>
            Determines whether this StringNamespaceDeclarationDictionary contains a specific value.
            </summary>
            <param name="value">
            The NamespaceDeclaration value to locate in this StringNamespaceDeclarationDictionary.
            </param>
            <returns>
            true if this StringNamespaceDeclarationDictionary contains an element with the specified value;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.StringNamespaceDeclarationDictionary.Remove(System.String)">
            <summary>
            Removes the element with the specified key from this StringNamespaceDeclarationDictionary.
            </summary>
            <param name="key">
            The String key of the element to remove.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringNamespaceDeclarationDictionary.Keys">
            <summary>
            Gets a collection containing the keys in this StringNamespaceDeclarationDictionary.
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.StringNamespaceDeclarationDictionary.Values">
            <summary>
            Gets a collection containing the values in this StringNamespaceDeclarationDictionary.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection">
            <summary>
            A collection of elements of type ThrowedExceptionDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.#ctor">
            <summary>
            Initializes a new empty instance of the ThrowedExceptionDeclarationCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.#ctor(System.Extensions.CodeDom.ThrowedExceptionDeclaration[])">
            <summary>
            Initializes a new instance of the ThrowedExceptionDeclarationCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new ThrowedExceptionDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.#ctor(System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection)">
            <summary>
            Initializes a new instance of the ThrowedExceptionDeclarationCollection class, containing elements
            copied from another instance of ThrowedExceptionDeclarationCollection
            </summary>
            <param name="items">
            The ThrowedExceptionDeclarationCollection whose elements are to be added to the new ThrowedExceptionDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.AddRange(System.Extensions.CodeDom.ThrowedExceptionDeclaration[])">
            <summary>
            Adds the elements of an array to the end of this ThrowedExceptionDeclarationCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this ThrowedExceptionDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.AddRange(System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection)">
            <summary>
            Adds the elements of another ThrowedExceptionDeclarationCollection to the end of this ThrowedExceptionDeclarationCollection.
            </summary>
            <param name="items">
            The ThrowedExceptionDeclarationCollection whose elements are to be added to the end of this ThrowedExceptionDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.Add(System.Extensions.CodeDom.ThrowedExceptionDeclaration)">
            <summary>
            Adds an instance of type ThrowedExceptionDeclaration to the end of this ThrowedExceptionDeclarationCollection.
            </summary>
            <param name="value">
            The ThrowedExceptionDeclaration to be added to the end of this ThrowedExceptionDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.Contains(System.Extensions.CodeDom.ThrowedExceptionDeclaration)">
            <summary>
            Determines whether a specfic ThrowedExceptionDeclaration value is in this ThrowedExceptionDeclarationCollection.
            </summary>
            <param name="value">
            The ThrowedExceptionDeclaration value to locate in this ThrowedExceptionDeclarationCollection.
            </param>
            <returns>
            true if value is found in this ThrowedExceptionDeclarationCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.IndexOf(System.Extensions.CodeDom.ThrowedExceptionDeclaration)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this ThrowedExceptionDeclarationCollection
            </summary>
            <param name="value">
            The ThrowedExceptionDeclaration value to locate in the ThrowedExceptionDeclarationCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.Insert(System.Int32,System.Extensions.CodeDom.ThrowedExceptionDeclaration)">
            <summary>
            Inserts an element into the ThrowedExceptionDeclarationCollection at the specified index
            </summary>
            <param name="index">
            The index at which the ThrowedExceptionDeclaration is to be inserted.
            </param>
            <param name="value">
            The ThrowedExceptionDeclaration to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.Item(System.Int32)">
            <summary>
            Gets or sets the ThrowedExceptionDeclaration at the given index in this ThrowedExceptionDeclarationCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.Remove(System.Extensions.CodeDom.ThrowedExceptionDeclaration)">
            <summary>
            Removes the first occurrence of a specific ThrowedExceptionDeclaration from this ThrowedExceptionDeclarationCollection.
            </summary>
            <param name="value">
            The ThrowedExceptionDeclaration value to remove from this ThrowedExceptionDeclarationCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by ThrowedExceptionDeclarationCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.ThrowedExceptionDeclarationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this ThrowedExceptionDeclarationCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.TypeCollection">
            <summary>
            A collection of elements of type Type
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeCollection.#ctor">
            <summary>
            Initializes a new empty instance of the TypeCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeCollection.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the TypeCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new TypeCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeCollection.#ctor(System.Extensions.CodeDom.Collections.TypeCollection)">
            <summary>
            Initializes a new instance of the TypeCollection class, containing elements
            copied from another instance of TypeCollection
            </summary>
            <param name="items">
            The TypeCollection whose elements are to be added to the new TypeCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeCollection.AddRange(System.Type[])">
            <summary>
            Adds the elements of an array to the end of this TypeCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this TypeCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeCollection.AddRange(System.Extensions.CodeDom.Collections.TypeCollection)">
            <summary>
            Adds the elements of another TypeCollection to the end of this TypeCollection.
            </summary>
            <param name="items">
            The TypeCollection whose elements are to be added to the end of this TypeCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeCollection.Add(System.Type)">
            <summary>
            Adds an instance of type Type to the end of this TypeCollection.
            </summary>
            <param name="value">
            The Type to be added to the end of this TypeCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeCollection.Contains(System.Type)">
            <summary>
            Determines whether a specfic Type value is in this TypeCollection.
            </summary>
            <param name="value">
            The Type value to locate in this TypeCollection.
            </param>
            <returns>
            true if value is found in this TypeCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeCollection.IndexOf(System.Type)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this TypeCollection
            </summary>
            <param name="value">
            The Type value to locate in the TypeCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeCollection.Insert(System.Int32,System.Type)">
            <summary>
            Inserts an element into the TypeCollection at the specified index
            </summary>
            <param name="index">
            The index at which the Type is to be inserted.
            </param>
            <param name="value">
            The Type to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.TypeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the Type at the given index in this TypeCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeCollection.Remove(System.Type)">
            <summary>
            Removes the first occurrence of a specific Type from this TypeCollection.
            </summary>
            <param name="value">
            The Type value to remove from this TypeCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.TypeCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by TypeCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this TypeCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.TypeDeclarationCollection">
            <summary>
            A collection of elements of type ITypeDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.#ctor">
            <summary>
            Initializes a new empty instance of the TypeDeclarationCollection class.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.#ctor(System.Extensions.CodeDom.ITypeDeclaration[])">
            <summary>
            Initializes a new instance of the TypeDeclarationCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new TypeDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.#ctor(System.Extensions.CodeDom.Collections.TypeDeclarationCollection)">
            <summary>
            Initializes a new instance of the TypeDeclarationCollection class, containing elements
            copied from another instance of TypeDeclarationCollection
            </summary>
            <param name="items">
            The TypeDeclarationCollection whose elements are to be added to the new TypeDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.AddRange(System.Extensions.CodeDom.ITypeDeclaration[])">
            <summary>
            Adds the elements of an array to the end of this TypeDeclarationCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this TypeDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.AddRange(System.Extensions.CodeDom.Collections.TypeDeclarationCollection)">
            <summary>
            Adds the elements of another TypeDeclarationCollection to the end of this TypeDeclarationCollection.
            </summary>
            <param name="items">
            The TypeDeclarationCollection whose elements are to be added to the end of this TypeDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.Add(System.Extensions.CodeDom.ITypeDeclaration)">
            <summary>
            Adds an instance of type ITypeDeclaration to the end of this TypeDeclarationCollection.
            </summary>
            <param name="value">
            The ITypeDeclaration to be added to the end of this TypeDeclarationCollection.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.Contains(System.Extensions.CodeDom.ITypeDeclaration)">
            <summary>
            Determines whether a specfic ITypeDeclaration value is in this TypeDeclarationCollection.
            </summary>
            <param name="value">
            The ITypeDeclaration value to locate in this TypeDeclarationCollection.
            </param>
            <returns>
            true if value is found in this TypeDeclarationCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.IndexOf(System.Extensions.CodeDom.ITypeDeclaration)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this TypeDeclarationCollection
            </summary>
            <param name="value">
            The ITypeDeclaration value to locate in the TypeDeclarationCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.Insert(System.Int32,System.Extensions.CodeDom.ITypeDeclaration)">
            <summary>
            Inserts an element into the TypeDeclarationCollection at the specified index
            </summary>
            <param name="index">
            The index at which the ITypeDeclaration is to be inserted.
            </param>
            <param name="value">
            The ITypeDeclaration to insert.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.Item(System.Int32)">
            <summary>
            Gets or sets the ITypeDeclaration at the given index in this TypeDeclarationCollection.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.Remove(System.Extensions.CodeDom.ITypeDeclaration)">
            <summary>
            Removes the first occurrence of a specific ITypeDeclaration from this TypeDeclarationCollection.
            </summary>
            <param name="value">
            The ITypeDeclaration value to remove from this TypeDeclarationCollection.
            </param>
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by TypeDeclarationCollection.GetEnumerator.
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeDeclarationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this TypeDeclarationCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="T:System.Extensions.CodeDom.Collections.TypeTypeDeclarationDictionary">
            <summary>
            A dictionary with keys of type Type and values of type ITypeDeclaration
            </summary>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeTypeDeclarationDictionary.#ctor">
            <summary>
            Initializes a new empty instance of the TypeTypeDeclarationDictionary class
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.TypeTypeDeclarationDictionary.Item(System.Type)">
            <summary>
            Gets or sets the ITypeDeclaration associated with the given Type
            </summary>
            <param name="key">
            The Type whose value to get or set.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeTypeDeclarationDictionary.Add(System.Type,System.Extensions.CodeDom.ITypeDeclaration)">
            <summary>
            Adds an element with the specified key and value to this TypeTypeDeclarationDictionary.
            </summary>
            <param name="key">
            The Type key of the element to add.
            </param>
            <param name="value">
            The ITypeDeclaration value of the element to add.
            </param>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeTypeDeclarationDictionary.Contains(System.Type)">
            <summary>
            Determines whether this TypeTypeDeclarationDictionary contains a specific key.
            </summary>
            <param name="key">
            The Type key to locate in this TypeTypeDeclarationDictionary.
            </param>
            <returns>
            true if this TypeTypeDeclarationDictionary contains an element with the specified key;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeTypeDeclarationDictionary.ContainsKey(System.Type)">
            <summary>
            Determines whether this TypeTypeDeclarationDictionary contains a specific key.
            </summary>
            <param name="key">
            The Type key to locate in this TypeTypeDeclarationDictionary.
            </param>
            <returns>
            true if this TypeTypeDeclarationDictionary contains an element with the specified key;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeTypeDeclarationDictionary.ContainsValue(System.Extensions.CodeDom.ITypeDeclaration)">
            <summary>
            Determines whether this TypeTypeDeclarationDictionary contains a specific value.
            </summary>
            <param name="value">
            The ITypeDeclaration value to locate in this TypeTypeDeclarationDictionary.
            </param>
            <returns>
            true if this TypeTypeDeclarationDictionary contains an element with the specified value;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Extensions.CodeDom.Collections.TypeTypeDeclarationDictionary.Remove(System.Type)">
            <summary>
            Removes the element with the specified key from this TypeTypeDeclarationDictionary.
            </summary>
            <param name="key">
            The Type key of the element to remove.
            </param>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.TypeTypeDeclarationDictionary.Keys">
            <summary>
            Gets a collection containing the keys in this TypeTypeDeclarationDictionary.
            </summary>
        </member>
        <member name="P:System.Extensions.CodeDom.Collections.TypeTypeDeclarationDictionary.Values">
            <summary>
            Gets a collection containing the values in this TypeTypeDeclarationDictionary.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.ConstantDeclaration">
            <summary>
            Summary description for ConstantDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.ConstructorDeclaration">
            <summary>
            Summary description for ConstructorDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.DelegateDeclaration">
            <summary>
            Summary description for DelegateDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Doc.TypeFinder">
            <summary>
            Summary description for TypeFinder.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Doc.XmlMarkup">
            <summary>
            Summary description for XmlMarkup.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.EnumDeclaration">
            <summary>
            Summary description for EnumDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.EventDeclaration">
            <summary>
            Summary description for EventDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expr">
            <summary>
            Summary description for Expr.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.ArgumentReferenceExpression">
            <summary>
            Summary description for ArgumentReferenceExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.BaseReferenceExpression">
            <summary>
            Summary description for BaseReferenceExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.BinaryOpOperatorExpression">
            <summary>
            Summary description for BinaryOpOperatorExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.CastExpression">
            <summary>
            Summary description for CastExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.EventReferenceExpression">
            <summary>
            Summary description for EventReferenceExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.Expression">
            <summary>
            Summary description for Expression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.FieldReferenceExpression">
            <summary>
            Summary description for FieldReferenceExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.IndexerExpression">
            <summary>
            Summary description for IndexerExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.MethodInvokeExpression">
            <summary>
            Summary description for MethodInvokeExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.MethodReferenceExpression">
            <summary>
            Summary description for MethodReferenceExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.NativeExpression">
            <summary>
            Summary description for NativeExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.NativeMethodInvokeExpression">
            <summary>
            Summary description for MethodInvokeExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.NativeMethodReferenceExpression">
            <summary>
            Summary description for MethodReferenceExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.NativePropertyReferenceExpression">
            <summary>
            Summary description for PropertyReferenceExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.ObjectCreationExpression">
            <summary>
            Summary description for ObjectCreationExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.PrimitiveExpression">
            <summary>
            Summary description for PrimitiveExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.PropertyReferenceExpression">
            <summary>
            Summary description for PropertyReferenceExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.PropertySetValueReferenceExpression">
            <summary>
            Summary description for ThisReferenceExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.ThisReferenceExpression">
            <summary>
            Summary description for ThisReferenceExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Expressions.VariableReferenceExpression">
            <summary>
            Summary description for VariableReferenceExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.FieldDeclaration">
            <summary>
            Summary description for FieldDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.ImplementationMemberDeclaration">
            <summary>
            Summary description for ImplementationMemberDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.IndexerDeclaration">
            <summary>
            Summary description for IndexerDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.ITypeDeclaration">
            <summary>
            Summary description for ITypeDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.MemberDeclaration">
            <summary>
            Summary description for MemberDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.MethodDeclaration">
            <summary>
            Summary description for MethodDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.MethodSignature">
            <summary>
            Summary description for MethodSignature.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.NamespaceDeclaration">
            <summary>
            Summary description for ClassDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.PropertyDeclaration">
            <summary>
            Summary description for ClassDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.SnippetExpression">
            <summary>
            Summary description for SnippetExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Statements.AssignStatement">
            <summary>
            Summary description for AssignStatementExpression.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Statements.CatchClause">
            <summary>
            Summary description for CatchClause.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Statements.ConditionStatement">
            <summary>
            Summary description for ConditionStatement.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Statements.ExpressionStatement">
            <summary>
            Summary description for ExpressionStatement.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Statements.ForEachStatement">
            <summary>
            Summary description for ForEachStatement.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Statements.IterationStatement">
            <summary>
            Summary description for IterationStatement.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Statements.LabeledStatement">
            <summary>
            Summary description for LabelStatement.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Statements.MethodReturnStatement">
            <summary>
            Summary description for MethodReturnStatement.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Statements.NativeStatement">
            <summary>
            Summary description for NativeStatement.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Statements.ThrowExceptionStatement">
            <summary>
            Summary description for ThrowExceptionStatement.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Statements.TryCatchFinallyStatement">
            <summary>
            Summary description for TryCatchFinallyStatement.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Stm">
            <summary>
            A bunch of static methods around the CodeDom class constructors.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.ThrowedExceptionDeclaration">
            <summary>
            Summary description for ThrowedExceptionDeclaration.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.TypeHelper">
            <summary>
            Helper static class for Type related tasks
            </summary>
            <!-- Failed to insert some or all of included XML --><include file="GUnit.CodeDom.Doc.xml" path="doc/remarkss/remarks[@name='TypeHelper']" />
        </member>
        <member name="M:System.Extensions.CodeDom.TypeHelper.HasCustomAttribute(System.Type,System.Type)">
            <summary>
            Gets a value indicating if the type <paramref name="t"/> is tagged
            by a <paramref name="customAttributeType"/> instance.
            </summary>
            <param name="t">type to test</param>
            <param name="customAttributeType">custom attribute type to search</param>
            <returns>
            true if <param name="t"/> is tagged by a <paramref name="customAttributeType"/>
            attribute, false otherwise.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="t"/> or <paramref name="customAttributeType"/>
            is a null reference
            </exception>
            <remarks>
            You can use this method to check that a type is tagged by an attribute.
            </remarks>
        </member>
        <member name="M:System.Extensions.CodeDom.TypeHelper.HasCustomAttribute(System.Reflection.PropertyInfo,System.Type)">
            <summary>
            Gets a value indicating if the property info <paramref name="t"/> is tagged
            by a <paramref name="customAttributeType"/> instance.
            </summary>
            <param name="t">property to test</param>
            <param name="customAttributeType">custom attribute type to search</param>
            <returns>
            true if <param name="t"/> is tagged by a <paramref name="customAttributeType"/>
            attribute, false otherwise.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="t"/> or <paramref name="customAttributeType"/>
            is a null reference
            </exception>
            <remarks>
            You can use this property to check that a method is tagged by a
            specified attribute.
            </remarks>
        </member>
        <member name="M:System.Extensions.CodeDom.TypeHelper.GetFirstCustomAttribute(System.Type,System.Type)">
            <summary>
            Gets the first instance of <paramref name="customAttributeType"/> 
            from the type <paramref name="t"/> custom attributes.
            </summary>
            <param name="t">type to test</param>
            <param name="customAttributeType">custom attribute type to search</param>
            <returns>
            First instance of <paramref name="customAttributeTyp"/>
            from the type <paramref name="t"/> custom attributes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="t"/> or <paramref name="customAttributeType"/>
            is a null reference
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="t"/> is not tagged by an attribute of type
            <paramref name="customAttributeType"/>
            </exception>
            <remarks>
            You can use this method to retreive a specified attribute
            instance
            </remarks>
        </member>
        <member name="M:System.Extensions.CodeDom.TypeHelper.GetFirstCustomAttribute(System.Reflection.PropertyInfo,System.Type)">
            <summary>
            Gets the first instance of <paramref name="customAttributeType"/> 
            from the property <paramref name="mi"/> custom attributes.
            </summary>
            <param name="mi">property to test</param>
            <param name="customAttributeType">custom attribute type to search</param>
            <returns>
            First instance of <paramref name="customAttributeTyp"/>
            from the property <paramref name="mi"/> custom attributes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="mi"/> or <paramref name="customAttributeType"/>
            is a null reference
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="mi"/> is not tagged by an attribute of type
            <paramref name="customAttributeType"/>
            </exception>
            <remarks>
            You can use this property to retreive a specified attribute
            instance of a method.
            </remarks>
        </member>
        <member name="T:System.Extensions.CodeDom.Xsd.XsdWrapperConfig">
            <summary>
            Summary description for XsdWrapperConfig.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Xsd.XsdWrapperGenerator">
            <summary>
            Transforms the XSD wrapper classes outputed by the Xsd.exe utility
            to nicer classes using Reflection.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:System.Extensions.CodeDom.Xsd.XsdWrapperGenerator.#ctor(System.String)">
            <summary>
            Creates a new wrapper generator.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:System.Extensions.CodeDom.Xsd.XsdWrapperGenerator.Add(System.Type)">
            <summary>
            Adds a class to the wrapped class list
            </summary>
            <param name="t"></param>
        </member>
        <member name="T:System.Extensions.Collections.ObjectModel.Dictionary`2">
            <summary>
            Provides the base class for a generic dictionary.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
        </member>
        <member name="F:System.Extensions.Collections.ObjectModel.Dictionary`2.items">
            <summary>
            Stores the internal dictionary.
            </summary>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.#ctor">
            <summary>
            Initializes a new instance of the Dictionary class with the default key comparer.
            </summary>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the Dictionary class with the specified key comparer.
            </summary>
            <param name="comparer">The comparer to use when testing for equality on keys.</param>
        </member>
        <member name="P:System.Extensions.Collections.ObjectModel.Dictionary`2.Values">
            <summary>
            Gets a collection containing the values in the Dictionary.
            </summary>
        </member>
        <member name="P:System.Extensions.Collections.ObjectModel.Dictionary`2.Count">
            <summary>
            Gets the number of key/value pairs contained in the Dictionary.
            </summary>
        </member>
        <member name="P:System.Extensions.Collections.ObjectModel.Dictionary`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the Dictionary is read-only.
            </summary>
        </member>
        <member name="P:System.Extensions.Collections.ObjectModel.Dictionary`2.Keys">
            <summary>
            Gets a collection containing the keys in the Dictionary.
            </summary>
        </member>
        <member name="P:System.Extensions.Collections.ObjectModel.Dictionary`2.Item(`0)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the element to get or set.</param>
            <returns>The value associated with the specified key.  If the specified key is not found, a get operation throws an exception, and a set operation creates a new element with the specified key.</returns>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.Add(`0,`1)">
            <summary>
            Adds an item to the Dictionary.
            </summary>
            <param name="key">The key of the item to add.</param>
            <param name="value">The item to add.</param>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.Remove(`0)">
            <summary>
            Removes an item from the Dictionary.
            </summary>
            <param name="key">The key of the item to remove.</param>
            <returns><b>True</b> if it was removed, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.Clear">
            <summary>
            Removes all objects from the Dictionary.
            </summary>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the Dictionary contains the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns><b>True</b> if the Dictionary contains an element with the specified key, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key of the item to get.</param>
            <param name="value">The item if found, otherwise the default value for the type.</param>
            <returns><b>True</b> if the item is found, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the Dictionary.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the Dictionary contains a specified item by using the default equality comparer.
            </summary>
            <param name="item">The item to look for.</param>
            <returns><b>True</b> if found, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the Dictionary to an array, starting at the specified array index.
            </summary>
            <param name="array">The one-dimensional that is the destination of the elements copied from the Dictionary.  The array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <em>array</em> at which copying begins.</param>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds a <see cref="T:System.Collections.Generic.KeyValuePair`2"/> to the dictionary.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes a <see cref="T:System.Collections.Generic.KeyValuePair`2"/> to the dictionary.
            </summary>
            <param name="item">The item to remove.</param>
            <returns><b>True</b> if successful, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the Dictionary.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.ClearItems">
            <summary>
            Removes all objects from the Dictionary.
            </summary>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.ClearItemsByRemoving">
            <summary>
            Removes all objects from the Dictionary by calling Remove on each of them.
            </summary>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.AddItem(`0,`1)">
            <summary>
            Adds an item to the Dictionary.
            </summary>
            <param name="key">The key of the item to add.</param>
            <param name="value">The item to add.</param>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.RemoveItem(`0)">
            <summary>
            Removes an item from the Dictionary.
            </summary>
            <param name="key">The key of the item to remove.</param>
        </member>
        <member name="M:System.Extensions.Collections.ObjectModel.Dictionary`2.SetItem(`0,`1)">
            <summary>
            Replaces the item with the specified key.
            </summary>
            <param name="key">The key of the item to replace.</param>
            <param name="value">The item to replace it with.</param>
        </member>
        <member name="T:System.Extensions.Compact.Video">
            <summary>
            Provides methods for turning the display on and off on a smart client.
            </summary>
        </member>
        <member name="M:System.Extensions.Compact.Video.PowerOff">
            <summary>
            Turn the display off.
            </summary>
        </member>
        <member name="M:System.Extensions.Compact.Video.PowerOn">
            <summary>
            Turn the display on.
            </summary>
        </member>
        <member name="T:System.Extensions.DataCancelEventHandler`1">
            <summary>
            Represents the method of a cancellable event that has a piece of data.
            </summary>
            <typeparam name="T">The type of the data attached to the event.</typeparam>
            <param name="sender">The source of the event.</param>
            <param name="e">The event arguments with attached data.</param>
        </member>
        <member name="T:System.Extensions.DataCancelEventArgs`1">
            <summary>
            Represents a CancelEventArgs that has a piece of data attached to it.
            </summary>
            <typeparam name="T">The type of the data attached to the event.</typeparam>
        </member>
        <member name="M:System.Extensions.DataCancelEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Extensions.DataCancelEventArgs`1"/> class.
            </summary>
            <param name="data">The data to store with the EventArgs.</param>
            <exception cref="T:System.ArgumentNullException">If <em>data</em> is null.</exception>
        </member>
        <member name="P:System.Extensions.DataCancelEventArgs`1.Data">
            <summary>
            Gets the data associated with this EventArgs
            </summary>
        </member>
        <member name="T:System.Extensions.DataEventHandler`1">
            <summary>
            Represents the method of an event that has a piece of data.
            </summary>
            <typeparam name="T">The type of the data attached to the event.</typeparam>
            <param name="sender">The source of the event.</param>
            <param name="e">The event arguments with attached data.</param>
        </member>
        <member name="T:System.Extensions.DataEventArgs`1">
            <summary>
            Represents an EventArgs that has a piece of data attached to it.
            </summary>
            <typeparam name="T">The type of the data attached to the event.</typeparam>
        </member>
        <member name="M:System.Extensions.DataEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Extensions.DataEventArgs`1"/> class.
            </summary>
            <param name="data">The data to store with the EventArgs.</param>
            <exception cref="T:System.ArgumentNullException">If <em>data</em> is null.</exception>
        </member>
        <member name="P:System.Extensions.DataEventArgs`1.Data">
            <summary>
            Gets the data associated with this EventArgs
            </summary>
        </member>
        <member name="T:System.Extensions.Data.DataRowExtensions">
            <summary>
            Extension methods for a <see cref="T:System.Data.DataRow"/>.
            </summary>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBoolean(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBoolean(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBoolean(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBoolean(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBoolean(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBoolean(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBoolean(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBoolean(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBoolean(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBoolean(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBoolean(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBoolean(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetByte(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetByte(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetByte(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetByte(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetByte(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetByte(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableByte(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableByte(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableByte(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableByte(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableByte(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableByte(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBytes(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBytes(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBytes(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBytes(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBytes(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetBytes(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBytes(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBytes(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBytes(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBytes(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBytes(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableBytes(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChar(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChar(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChar(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChar(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChar(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChar(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChar(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChar(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChar(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChar(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChar(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChar(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChars(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChars(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChars(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChars(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChars(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetChars(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChars(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChars(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChars(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChars(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChars(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableChars(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> array or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDateTime(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDateTime(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDateTime(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDateTime(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDateTime(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDateTime(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDateTime(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDateTime(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDateTime(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDateTime(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDateTime(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDateTime(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDecimal(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDecimal(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDecimal(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDecimal(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDecimal(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDecimal(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDecimal(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDecimal(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDecimal(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDecimal(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDecimal(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDecimal(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDouble(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDouble(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDouble(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDouble(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDouble(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetDouble(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDouble(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDouble(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDouble(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDouble(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDouble(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableDouble(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetGuid(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetGuid(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetGuid(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetGuid(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetGuid(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetGuid(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableGuid(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableGuid(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableGuid(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableGuid(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableGuid(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableGuid(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt16(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt16(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt16(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt16(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt16(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt16(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt16(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt16(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt16(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt16(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt16(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt16(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt32(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt32(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt32(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt32(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt32(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt32(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt32(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt32(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt32(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt32(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt32(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt32(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt64(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt64(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt64(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt64(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt64(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetInt64(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt64(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt64(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt64(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt64(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt64(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableInt64(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetSingle(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetSingle(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetSingle(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetSingle(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetSingle(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetSingle(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableSingle(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableSingle(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableSingle(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableSingle(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableSingle(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableSingle(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetString(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetString(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetString(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetString(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetString(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetString(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/>.
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableString(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableString(System.Data.DataRow,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableString(System.Data.DataRow,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableString(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="column">The column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableString(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            {
            Gets the value of the specified column as a <see cref="T:System.String"/> or null if the value is <see cref="T:System.DBNull"/>..
            }
            </summary>
            {
            <param name="row">The row to retrieve the value from.</param>
            }
            <param name="columnIndex">The zero-based index of the column.</param>
            {
            <param name="version">The version of the row you want.</param>
            }
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.DataRowExtensions.GetNullableString(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/> or null if the value is <see cref="T:System.DBNull"/>..
            </summary>
            <param name="row">The row to retrieve the value from.</param>
            <param name="columnName">The name of the column to retrieve.</param>
            <param name="version">The version of the row you want.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="T:System.Extensions.Data.DataTableExtensions">
            <summary>
            Extension methods for a <see cref="T:System.Data.DataTable"/>.
            </summary>
        </member>
        <member name="M:System.Extensions.Data.DataTableExtensions.ReadCsv(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            Reads CSV data into the <see cref="T:System.Data.DataTable"/> using the specified file name.
            </summary>
            <param name="table">The table to read the CSV data into.</param>
            <param name="fileName">The name of the file from which to read the data.</param>
            <param name="hasHeader">Whether the CSV document has a header row.</param>
        </member>
        <member name="M:System.Extensions.Data.DataTableExtensions.ReadCsv(System.Data.DataTable,System.IO.Stream,System.Boolean)">
            <summary>
            Reads CSV data into the <see cref="T:System.Data.DataTable"/> using the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="table">The table to read the CSV data into.</param>
            <param name="stream">The stream from which to read the data.</param>
            <param name="hasHeader">Whether the CSV document has a header row.</param>
        </member>
        <member name="M:System.Extensions.Data.DataTableExtensions.ReadCsv(System.Data.DataTable,System.IO.TextReader,System.Boolean)">
            <summary>
            Reads CSV data into the <see cref="T:System.Data.DataTable"/> using the specified <see cref="T:System.IO.TextReader"/>.
            </summary>
            <param name="table">The table to read the CSV data into.</param>
            <param name="reader">The reader from which to read the data.</param>
            <param name="hasHeader">Whether the CSV document has a header row.</param>
        </member>
        <member name="M:System.Extensions.Data.DataTableExtensions.WriteCsv(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            Writes the <see cref="T:System.Data.DataTable"/> to a CSV file using the specified file name.
            </summary>
            <param name="table">The table that contains the data to write.</param>
            <param name="fileName">The name of the file where the data should be written.</param>
            <param name="hasHeader">Whether the CSV document should have a header row.</param>
        </member>
        <member name="M:System.Extensions.Data.DataTableExtensions.WriteCsv(System.Data.DataTable,System.IO.Stream,System.Boolean)">
            <summary>
            Reads CSV data into the <see cref="T:System.Data.DataTable"/> using the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="table">The table that contains the data to write.</param>
            <param name="stream">The stream where the data ahould be written.</param>
            <param name="hasHeader">Whether the CSV document should have a header row.</param>
        </member>
        <member name="M:System.Extensions.Data.DataTableExtensions.WriteCsv(System.Data.DataTable,System.IO.TextWriter,System.Boolean)">
            <summary>
            Reads CSV data into the <see cref="T:System.Data.DataTable"/> using the specified <see cref="T:System.IO.TextReader"/>.
            </summary>
            <param name="table">The table that contains the data to write.</param>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> where the data ahould be written.</param>
            <param name="hasHeader">Whether the CSV document should have a header row.</param>
        </member>
        <member name="M:System.Extensions.Data.DataTableExtensions.QuoteText(System.Object)">
            <summary>
            Called to quote text so the CSV is well formatted.
            </summary>
            <param name="value">The value to quote.</param>
            <returns>The quoted text.</returns>
        </member>
        <member name="T:System.Extensions.Data.IDataReaderExtensions">
            <summary>
            Extension methods for an <see cref="T:System.Data.IDataReader"/>.
            </summary>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetBoolean(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableBoolean(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableBoolean(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Boolean"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetByte(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableByte(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableByte(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetBytes(System.Data.IDataRecord,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <param name="fieldOffset">The index within the field from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferOffset">The index for <em>buffer</em> to begin the write operation.</param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetAllBytes(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetAllBytes(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableBytes(System.Data.IDataRecord,System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <param name="fieldOffset">The index within the field from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferOffset">The index for <em>buffer</em> to begin the write operation.</param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableBytes(System.Data.IDataRecord,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <param name="fieldOffset">The index within the field from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferOffset">The index for <em>buffer</em> to begin the write operation.</param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableAllBytes(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableAllBytes(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Byte"/> array or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetChar(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableChar(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableChar(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Char"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetChars(System.Data.IDataRecord,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of chars from the specified column offset into the buffer an array starting at the given buffer offset.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <param name="fieldOffset">The index within the field from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of chars.</param>
            <param name="bufferOffset">The index for <em>buffer</em> to begin the write operation.</param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of chars read.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableChars(System.Data.IDataRecord,System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of chars from the specified column offset into the buffer an array starting at the given buffer offset.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <param name="fieldOffset">The index within the field from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of chars.</param>
            <param name="bufferOffset">The index for <em>buffer</em> to begin the write operation.</param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of chars read.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableChars(System.Data.IDataRecord,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of chars from the specified column offset into the buffer an array starting at the given buffer offset.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <param name="fieldOffset">The index within the field from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of chars.</param>
            <param name="bufferOffset">The index for <em>buffer</em> to begin the write operation.</param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of chars read.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetData(System.Data.IDataRecord,System.String)">
            <summary>
            Gets an <see cref="T:System.Data.IDataReader"/> to be used when the field points to more remote structured data.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> to be used when the field points to more remote structured data.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetDataTypeName(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the name of the source data type.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The name of the back-end data type.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetDateTime(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableDateTime(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableDateTime(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.DateTime"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetDecimal(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableDecimal(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableDecimal(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Decimal"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetDouble(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableDouble(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableDouble(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Double"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetFieldType(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the <see cref="T:System.Type"/> that is the data type of the object.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The <see cref="T:System.Type"/> that is the data type of the object.  If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, returns null.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetFloat(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableFloat(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableFloat(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Single"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetGuid(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableGuid(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableGuid(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Guid"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetInt16(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableInt16(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableInt16(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int16"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetInt32(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableInt32(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableInt32(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int32"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetInt64(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableInt64(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableInt64(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.Int64"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetString(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableString(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableString(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column as a <see cref="T:System.String"/> or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetValue(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column in its native format.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableValue(System.Data.IDataRecord,System.Int32)">
            <summary>
            Gets the value of the specified column in its native format or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="index">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.GetNullableValue(System.Data.IDataRecord,System.String)">
            <summary>
            Gets the value of the specified column in its native format or null of it the value is <see cref="T:System.DBNull"/>.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDataReaderExtensions.IsDBNull(System.Data.IDataRecord,System.String)">
            <summary>
            Gets a value that indicates whether the column contains non-existent or missing values.
            </summary>
            <param name="reader">The reader to retrieve the value from.</param>
            <param name="name">The name of the field to find.</param>
            <returns><b>True</b> if the specified column value is equivalent to <see cref="T:System.DBNull"/>; otherwise false.</returns>
        </member>
        <member name="T:System.Extensions.Data.IDbCommandExtensions">
            <summary>
            Extension methods for an <see cref="T:System.Data.IDbCommand"/>.
            </summary>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteBoolean(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteByte(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteBytes(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteChar(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteChars(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteDateTime(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteDecimal(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteDouble(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteGuid(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteInt16(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteInt32(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteInt64(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteSingle(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbCommandExtensions.ExecuteString(System.Data.IDbCommand)">
            <summary>
            Executes the query and returns the first column of the first row in the resultset returned by the query.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="T:System.Extensions.Data.IDbConnectionExtensions">
            <summary>
            Extension methods for an <see cref="T:System.Data.IDbConnection"/>.
            </summary>
        </member>
        <member name="M:System.Extensions.Data.IDbConnectionExtensions.CreateCommand(System.Data.IDbConnection,System.String)">
            <summary>
            Creates and returns a <see cref="T:System.Data.IDbCommand"/> object associated with the connection.
            </summary>
            <param name="connection">The connection to associate the command to.</param>
            <param name="commandText">The text of the command.</param>
            <returns>An <see cref="T:System.Data.IDbCommand"/> object associated with the connection.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbConnectionExtensions.CreateCommand(System.Data.IDbConnection,System.String,System.Data.CommandType)">
            <summary>
            Creates and returns a <see cref="T:System.Data.IDbCommand"/> object associated with the connection.
            </summary>
            <param name="connection">The connection to associate the command to.</param>
            <param name="commandText">The text of the command.</param>
            <param name="commandType">The type of the command.</param>
            <returns>An <see cref="T:System.Data.IDbCommand"/> object associated with the connection.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbConnectionExtensions.ExecuteCommandNonQuery(System.Data.IDbConnection,System.String)">
            <summary>
            Creates an appropriate <see cref="T:System.Data.IDbCommand"/> and executes a statement against the connection.
            </summary>
            <param name="connection">The connection to execute the command against.</param>
            <param name="commandText">The text of the command to execute.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:System.Extensions.Data.IDbConnectionExtensions.ExecuteCommandNonQuery(System.Data.IDbConnection,System.String,System.Data.CommandType)">
            <summary>
            Creates an appropriate <see cref="T:System.Data.IDbCommand"/> and executes a statement against the connection.
            </summary>
            <param name="connection">The connection to execute the command against.</param>
            <param name="commandText">The text of the command to execute.</param>
            <param name="commandType">The type of the command to execute.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="T:System.Extensions.DateTimeExtensions">
            <summary>
            Extension methods for a <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="M:System.Extensions.DateTimeExtensions.IsWeekend(System.DateTime)">
            <summary>
            Indicates whether the specified <see cref="T:System.DateTime"/> is on a weekend day.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime"/> to check.</param>
            <returns><b>True</b> if the day represented is a weekend day; <b>false</b> otherwise.</returns>
        </member>
        <member name="M:System.Extensions.DateTimeExtensions.IsWeekday(System.DateTime)">
            <summary>
            Indicates whether the specified <see cref="T:System.DateTime"/> occurs on a week day.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime"/> to check.</param>
            <returns><b>True</b> if the day represented is a week day; <b>false</b> otherwise.</returns>
        </member>
        <member name="T:System.Extensions.Drawing.ImageExtensions">
            <summary>
            Utility and extension class for <see cref="T:System.Drawing.Image"/> objects.
            </summary>
        </member>
        <member name="M:System.Extensions.Drawing.ImageExtensions.FromByteArray(System.Byte[])">
            <summary>
            Converts the specified byte array to an image.
            </summary>
            <param name="buffer">The byte array representation of the image.</param>
            <returns>The <see cref="T:System.Drawing.Image"/> that was loaded from the byte array.</returns>
        </member>
        <member name="M:System.Extensions.Drawing.ImageExtensions.Resize(System.Drawing.Image,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Resizes an image, maintaining width:height ratios.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/> that you wish to resize.</param>
            <param name="width">The desired width of the resulting image.</param>
            <param name="height">The desired height of the resulting image.</param>
            <param name="pad">Whether the image should pad the borders to keep width/height.</param>
            <returns>The resulting resized <see cref="T:System.Drawing.Image"/> object.</returns>
        </member>
        <member name="M:System.Extensions.Drawing.ImageExtensions.ToByteArray(System.Drawing.Image)">
            <summary>
            Converts the specified image to a byte array using format specified by the image.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/> to convert.</param>
            <returns>The byte array representation of the image.</returns>
        </member>
        <member name="M:System.Extensions.Drawing.ImageExtensions.ToByteArray(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Converts the specified image to a byte array using the specified format.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/> to convert.</param>
            <param name="format">The <see cref="T:System.Drawing.Imaging.ImageFormat"/> to use when serializing.</param>
            <returns>The byte array representation of the image.</returns>
        </member>
        <member name="M:System.Extensions.Drawing.ImageExtensions.ToAlphaBlend(System.Drawing.Image,System.Int32,System.Drawing.Color)">
            <summary>
            Alpha blends an image with a background color;
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/> to alpha blend.</param>
            <param name="alpha">The alpha value to use when blending.</param>
            <param name="backgroundColor">The background color to blend with.</param>
            <returns>A new <see cref="T:System.Drawing.Image"/> with the alpha blended image.</returns>
        </member>
        <member name="M:System.Extensions.Drawing.ImageExtensions.ToGrayscale(System.Drawing.Image)">
            <summary>
            Grayscales an image.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/> that you wish to grayscale.</param>
            <returns>A new <see cref="T:System.Drawing.Image"/> instance that represents the grayscaled image.</returns>
        </member>
        <member name="T:System.Extensions.Internal.SRCategoryAttribute">
            <summary>
            Provides a localizable way to get designer category names.
            </summary>
        </member>
        <member name="T:System.Extensions.Internal.SRDescriptionAttribute">
            <summary>
            Provides a localizable way to get designer descriptions.
            </summary>
        </member>
        <member name="M:System.Extensions.Internal.SRDescriptionAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="description"></param>
        </member>
        <member name="P:System.Extensions.Internal.SRDescriptionAttribute.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:System.Extensions.NameConformer">
            <summary>
            Summary description for NameConformer.
            </summary>
        </member>
        <member name="T:System.Extensions.NativeMethods">
            <summary>
            Wraps P/Invoke methods.
            </summary>
        </member>
        <member name="T:System.Extensions.ObjectExtensions">
            <summary>
            Extension methods for an <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:System.Extensions.ObjectExtensions.IsNullOrDBNull(System.Object)">
            <summary>
            Inidicates whether the specified <see cref="T:System.Object"/> is null or <see cref="T:System.DBNull"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to check.</param>
            <returns><b>True</b> if null or <see cref="T:System.DBNull"/>, <b>false</b> otherwise.</returns>
        </member>
        <member name="T:System.Extensions.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.Category_Appearance">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.Category_Asynchronous">
            <summary>
              Looks up a localized string similar to Asynchronous.
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.Category_Behavior">
            <summary>
              Looks up a localized string similar to Behavior.
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.CommandLink_RestingArrow">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.CommandLink_SelectedArrow">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.ProgressDialog_Description">
            <summary>
              Looks up a localized string similar to Executes an operation on a separate thread while showing a progress dialog..
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.ProgressDialog_DoWork">
            <summary>
              Looks up a localized string similar to Event handler to be run on a different thread when the operation begins..
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.ProgressDialog_HeaderText">
            <summary>
              Looks up a localized string similar to The header text that indicates what general action is occurring..
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.ProgressDialog_MessageText">
            <summary>
              Looks up a localized string similar to The small text to show that can provide progress status..
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.ProgressDialog_ProgressChanged">
            <summary>
              Looks up a localized string similar to Raised when the worker thread indicates that some progress has been made..
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.ProgressDialog_RunWorkerCompleted">
            <summary>
              Looks up a localized string similar to Raised when the worker has completed (either through success, failure, or cancellation)..
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.ProgressDialog_TitleText">
            <summary>
              Looks up a localized string similar to The title text that will show in the window title bar..
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.ProgressDialog_WorkerReportsProgress">
            <summary>
              Looks up a localized string similar to Whether the worker will report progress..
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.ProgressDialog_WorkerSupportsCancellation">
            <summary>
              Looks up a localized string similar to Whether the worker supports cancellation..
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.SafeDataReader_NoRewrap">
            <summary>
              Looks up a localized string similar to SafeDataReader cannot wrap an object of the same Type..
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.Shield">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.TextBox_CueBannerDescription">
            <summary>
              Looks up a localized string similar to Specifies the text to display when the control is empty..
            </summary>
        </member>
        <member name="P:System.Extensions.Properties.Resources.TextBox_ShowCueWhenFocusedDescription">
            <summary>
              Looks up a localized string similar to Specifies whether to show the cue banner when the control has focus..
            </summary>
        </member>
        <member name="T:System.Extensions.Security.PronounceablePasswordGenerator">
            <summary>
            Generates passwords that are pronounceable. Original Java code from
            http://www.multicians.org/thvv/gpw.html. This class is free to use without restrictions.
            </summary>
        </member>
        <member name="M:System.Extensions.Security.PronounceablePasswordGenerator.Generate(System.Int32,System.Int32)">
            <summary>
            Generates a set of pronounceable passwords.
            </summary>
            <param name="passwordCount">The number of passwords to generate.</param>
            <param name="passwordLength">The character length of the passwords.</param>
            <returns>A list of passwords as strings.</returns>
        </member>
        <member name="T:System.Extensions.SingleProgramInstance">
            <summary>
            <strong>SingleProgamInstance</strong> uses a mutex synchronization object
            to ensure that only one copy of process is running at
            a particular time. It also allows for UI identification
            of the intial process by bring that window to the foreground.
            </summary>
        </member>
        <member name="M:System.Extensions.SingleProgramInstance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Extensions.SingleProgramInstance"/> class.
            </summary>
        </member>
        <member name="M:System.Extensions.SingleProgramInstance.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Extensions.SingleProgramInstance"/> class using the specified string as the process identifier.
            </summary>
            <param name="identifier">The string that represents the process identifier.</param>
        </member>
        <member name="P:System.Extensions.SingleProgramInstance.IsSingleInstance">
            <summary>
            Gets a value indicating whether this instance is single instance.
            </summary>
            <value>
              <c>true</c> if this instance is single instance; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:System.Extensions.SingleProgramInstance.RaiseOtherProcess">
            <summary>
            If another istance of the application is already running, raises the other process.
            </summary>
        </member>
        <member name="M:System.Extensions.SingleProgramInstance.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:System.Extensions.SingleProgramInstance"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:System.Extensions.SingleProgramInstance.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:System.Extensions.Stopwatch">
            <summary>
            
            </summary>
        </member>
        <member name="T:System.Extensions.Templates.CollectionTemplate">
            <summary>
            Summary description for StronglyTypedCollectionGenerator.
            </summary>
        </member>
        <member name="T:System.Extensions.Templates.DataReaderTemplate">
            <summary>
            Summary description for DataReaderTemplate.
            </summary>
        </member>
        <member name="T:System.Extensions.Templates.DataTemplate">
            <summary>
            Summary description for DataReaderTemplate.
            </summary>
        </member>
        <member name="T:System.Extensions.Templates.DictionaryTemplate">
            <summary>
            Summary description for StronglyTypedCollectionGenerator.
            </summary>
        </member>
        <member name="T:System.Extensions.Templates.ITemplate">
            <summary>
            Summary description for ITemplate.
            </summary>
        </member>
        <member name="M:System.Extensions.Templates.ITemplate.Generate(System.Extensions.CodeDom.NamespaceDeclaration)">
            <summary>
            
            </summary>
            <param name="ns"></param>
        </member>
        <member name="T:System.Extensions.Text.StringBuilderExtensions">
            <summary>
            Extension methods for a <see cref="T:System.Text.StringBuilder"/>.
            </summary> 
        </member>
        <member name="M:System.Extensions.Text.StringBuilderExtensions.AppendFormatLine(System.Text.StringBuilder,System.String,System.Object)">
            <summary>
            Appends a formatted string and the default line terminator, which contains zero or more format specifications, to this instance.  Each format specification is replaced by the string representation of a corresponding object argument.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder"/> instance to append text to.</param>
            <param name="format">A string containing zero or more format specifications.</param>
            <param name="arg0">An object to format.</param>
            <returns>A reference to this instance with format appended.  Any format specifications in format is replaced by the string representation of the corresponding object argument.</returns>
            <exception cref="T:System.ArgumentNullException">format is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity"/>.</exception>
            <exception cref="T:System.FormatException">format is invalid.</exception>
        </member>
        <member name="M:System.Extensions.Text.StringBuilderExtensions.AppendFormatLine(System.Text.StringBuilder,System.String,System.Object[])">
            <summary>
            Appends a formatted string and the default line terminator, which contains zero or more format specifications, to this instance.  Each format specification is replaced by the string representation of a corresponding object argument.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder"/> instance to append text to.</param>
            <param name="format">A string containing zero or more format specifications.</param>
            <param name="args">An array of objects to format.</param>
            <returns>A reference to this instance with format appended.  Any format specifications in format is replaced by the string representation of the corresponding object argument.</returns>
            <exception cref="T:System.ArgumentNullException">format is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity"/>.</exception>
            <exception cref="T:System.FormatException">format is invalid.</exception>
        </member>
        <member name="M:System.Extensions.Text.StringBuilderExtensions.AppendFormatLine(System.Text.StringBuilder,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Appends a formatted string and the default line terminator, which contains zero or more format specifications, to this instance.  Each format specification is replaced by the string representation of a corresponding object argument.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder"/> instance to append text to.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> that determines the way formatting specifications in format are interpreted.</param>
            <param name="format">A string containing zero or more format specifications.</param>
            <param name="args">An array of objects to format.</param>
            <returns>A reference to this instance with format appended.  Any format specifications in format is replaced by the string representation of the corresponding object argument.</returns>
            <exception cref="T:System.ArgumentNullException">format is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity"/>.</exception>
            <exception cref="T:System.FormatException">format is invalid.</exception>
        </member>
        <member name="M:System.Extensions.Text.StringBuilderExtensions.AppendFormatLine(System.Text.StringBuilder,System.String,System.Object,System.Object)">
            <summary>
            Appends a formatted string and the default line terminator, which contains zero or more format specifications, to this instance.  Each format specification is replaced by the string representation of a corresponding object argument.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder"/> instance to append text to.</param>
            <param name="format">A string containing zero or more format specifications.</param>
            <param name="arg0">The first object to format.</param>
            <param name="arg1">The second object to format.</param>
            <returns>A reference to this instance with format appended.  Any format specifications in format is replaced by the string representation of the corresponding object argument.</returns>
            <exception cref="T:System.ArgumentNullException">format is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity"/>.</exception>
            <exception cref="T:System.FormatException">format is invalid.</exception>
        </member>
        <member name="M:System.Extensions.Text.StringBuilderExtensions.AppendFormatLine(System.Text.StringBuilder,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Appends a formatted string and the default line terminator, which contains zero or more format specifications, to this instance.  Each format specification is replaced by the string representation of a corresponding object argument.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder"/> instance to append text to.</param>
            <param name="format">A string containing zero or more format specifications.</param>
            <param name="arg0">The first object to format.</param>
            <param name="arg1">The second object to format.</param>
            <param name="arg2">The third object to format.</param>
            <returns>A reference to this instance with format appended.  Any format specifications in format is replaced by the string representation of the corresponding object argument.</returns>
            <exception cref="T:System.ArgumentNullException">format is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity"/>.</exception>
            <exception cref="T:System.FormatException">format is invalid.</exception>
        </member>
    </members>
</doc>
