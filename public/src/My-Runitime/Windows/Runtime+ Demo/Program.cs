using System.Extensions.CodeDom;
using System.Extensions.Templates;

namespace RuntimePlus.Demo
{

    /// <summary>
    /// Summary description for SimpleDemo.
    /// </summary>
    public static class CodeDomDemo
    {
        public static void Output(NamespaceDeclaration ns)
        {
            // output result
            var gen = new CodeGenerator();
            string fncs = "filecs.cs";
            string fnvb = "filevb.vb";

        // output to C#
            gen.Provider = CodeGenerator.CsProvider;
            gen.GenerateCode("./CS", ns, fncs);

            // output to VB
            gen.Provider = CodeGenerator.VbProvider;
            gen.GenerateCode("./VB", ns,fnvb);
        }

        public static void CreateUser()
        {
            // create namespace
            var ns = new NamespaceDeclaration("MyFirstNamespace");

            // adding imports

            // creating User class
            var user = ns.AddClass("User");

            // put some comments
            user.Doc.Summary.AddText("Refly User class");
            user.Doc.Remarks.Add("para");
            user.Doc.Remarks.Into();
            user.Doc.Remarks.AddText("This class was generated by Refly");
            user.Doc.Remarks.OutOf();

            // adding private fields
            var name = user.AddField(typeof(string), "name");
            var lastName = user.AddField(typeof(string), "lastName");

            // adding properties for the fields
            var pname = user.AddProperty(name, true, true, true);
            var plastName = user.AddProperty(lastName, true, true, true);

            Output(ns);
        }

        public static void CreateStronglyTypedCollection()
        {
            var ns = new NamespaceDeclaration("Collections");

            var st = new CollectionTemplate();
            st.ElementType = typeof(string).Name;

            st.Generate(ns);

            Output(ns);
        }

        public static void CreateStronglyTypedDictionary()
        {
            var ns = new NamespaceDeclaration("Collections");

            var st = new DictionaryTemplate();
            st.Key = typeof(string).Name;
            st.Value = typeof(int).Name;

            st.Generate(ns);

            Output(ns);
        }

        public static void CreateStronglyTypedDataReader()
        {
            var ns = new NamespaceDeclaration("Collections");

            var st = new DataReaderTemplate();
            st.Name = "User";
            st.Data.Fields.Add("name", typeof(string).FullName);
            st.Data.Fields.Add("lastname", typeof(string).FullName);
            st.Generate(ns);

            Output(ns);
        }

        public static void Main()
        {
            var ns = new NamespaceDeclaration("Demo");
            CreateUser();
            CreateStronglyTypedDataReader();
            CreateStronglyTypedDictionary();
            CreateStronglyTypedCollection();
            Output(ns);

        }

    }
}
