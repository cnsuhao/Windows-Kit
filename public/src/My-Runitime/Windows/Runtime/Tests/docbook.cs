//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=1.1.4322.573.
// 
namespace NDocBook.Xsd {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class set {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public setinfo setinfo;
        
        /// <remarks/>
        public toc toc;
        
        /// <remarks/>
        public book book;
        
        /// <remarks/>
        public setindex setindex;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string fpi;
    }
  
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class title {
        
        /// <remarks/>
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class setindexinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class graphic {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class subjectset {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subject")]
        public subject[] subject;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
        public string scheme;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class subject {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subjectterm")]
        public subjectterm[] subjectterm;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string weight;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class subjectterm {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class itermset {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("indexterm")]
        public indexterm[] indexterm;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class indexterm {
        
        /// <remarks/>
        public primary primary;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("seealso", typeof(seealso))]
        [System.Xml.Serialization.XmlElementAttribute("secondary", typeof(secondary))]
        [System.Xml.Serialization.XmlElementAttribute("see", typeof(see))]
        [System.Xml.Serialization.XmlElementAttribute("tertiary", typeof(tertiary))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public indextermScope scope;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scopeSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(indextermSignificance.normal)]
        public indextermSignificance significance = indextermSignificance.normal;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public indextermClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
        public string startref;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREFS")]
        public string zone;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class primary {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string sortas;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class inlinemediaobject {
        
        /// <remarks/>
        public objectinfo objectinfo;
        
        /// <remarks/>
        public videoobject videoobject;
        
        /// <remarks/>
        public audioobject audioobject;
        
        /// <remarks/>
        public imageobject imageobject;
        
        /// <remarks/>
        public textobject textobject;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class objectinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class keywordset {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("keyword")]
        public keyword[] keyword;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class keyword {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class mediaobject {
        
        /// <remarks/>
        public objectinfo objectinfo;
        
        /// <remarks/>
        public videoobject videoobject;
        
        /// <remarks/>
        public audioobject audioobject;
        
        /// <remarks/>
        public imageobject imageobject;
        
        /// <remarks/>
        public textobject textobject;
        
        /// <remarks/>
        public caption caption;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class videoobject {
        
        /// <remarks/>
        public objectinfo objectinfo;
        
        /// <remarks/>
        public videodata videodata;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class videodata {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string width;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string contentwidth;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string depth;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string contentdepth;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public videodataAlign align;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alignSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public videodataValign valign;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valignSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string scale;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string scalefit;
    }
    
    /// <remarks/>
    public enum videodataAlign {
        
        /// <remarks/>
        left,
        
        /// <remarks/>
        right,
        
        /// <remarks/>
        center,
    }
    
    /// <remarks/>
    public enum videodataValign {
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        middle,
        
        /// <remarks/>
        bottom,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class audioobject {
        
        /// <remarks/>
        public objectinfo objectinfo;
        
        /// <remarks/>
        public audiodata audiodata;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class audiodata {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class imageobject {
        
        /// <remarks/>
        public objectinfo objectinfo;
        
        /// <remarks/>
        public imagedata imagedata;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class imagedata {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string width;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string contentwidth;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string depth;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string contentdepth;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public imagedataAlign align;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alignSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public imagedataValign valign;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valignSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string scale;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string scalefit;
    }
    
    /// <remarks/>
    public enum imagedataAlign {
        
        /// <remarks/>
        left,
        
        /// <remarks/>
        right,
        
        /// <remarks/>
        center,
    }
    
    /// <remarks/>
    public enum imagedataValign {
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        middle,
        
        /// <remarks/>
        bottom,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class textobject {
        
        /// <remarks/>
        public objectinfo objectinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("textdata", typeof(textdata))]
        [System.Xml.Serialization.XmlElementAttribute("phrase", typeof(phrase))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class textdata {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string encoding;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class phrase {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class beginpage {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class caption {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("blockquote")]
        public blockquote Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class blockquote {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public attribution attribution;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("blockquote")]
        public blockquote blockquote1;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class attribution {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class calloutlist {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callout")]
        public callout[] callout;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class titleabbrev {
        
        /// <remarks/>
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class callout {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREFS")]
        public string arearefs;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class glosslist {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossentry")]
        public glossentry[] glossentry;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class glossentry {
        
        /// <remarks/>
        public glossterm glossterm;
        
        /// <remarks/>
        public acronym acronym;
        
        /// <remarks/>
        public abbrev abbrev;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public revhistory revhistory;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glosssee", typeof(glosssee))]
        [System.Xml.Serialization.XmlElementAttribute("glossdef", typeof(glossdef))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string sortas;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class glossterm {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string baseform;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class acronym {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("acronym", typeof(acronym))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class trademark {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(trademarkClass.trade)]
        public trademarkClass @class = trademarkClass.trade;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class inlinegraphic {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class emphasis {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    public enum trademarkClass {
        
        /// <remarks/>
        service,
        
        /// <remarks/>
        trade,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        copyright,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class abbrev {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("acronym", typeof(acronym))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class revhistory {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("revision")]
        public revision[] revision;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class revision {
        
        /// <remarks/>
        public revnumber revnumber;
        
        /// <remarks/>
        public date date;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("authorinitials")]
        public authorinitials[] authorinitials;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("revdescription", typeof(revdescription))]
        [System.Xml.Serialization.XmlElementAttribute("revremark", typeof(revremark))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class revnumber {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class replaceable {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("co", typeof(co))]
        [System.Xml.Serialization.XmlElementAttribute("optional", typeof(optional))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public replaceableClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class co {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class optional {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    public enum replaceableClass {
        
        /// <remarks/>
        command,
        
        /// <remarks/>
        function,
        
        /// <remarks/>
        option,
        
        /// <remarks/>
        parameter,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class date {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class authorinitials {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class revdescription {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("procedure")]
        public procedure Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class procedure {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("procedure")]
        public procedure procedure1;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("step")]
        public step[] step;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class blockinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class modespec {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public notationclass application;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applicationSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="notation.class")]
    public enum notationclass {
        
        /// <remarks/>
        BMP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CGM-CHAR")]
        CGMCHAR,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CGM-BINARY")]
        CGMBINARY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CGM-CLEAR")]
        CGMCLEAR,
        
        /// <remarks/>
        DITROFF,
        
        /// <remarks/>
        DVI,
        
        /// <remarks/>
        EPS,
        
        /// <remarks/>
        EQN,
        
        /// <remarks/>
        FAX,
        
        /// <remarks/>
        GIF,
        
        /// <remarks/>
        GIF87a,
        
        /// <remarks/>
        GIF89a,
        
        /// <remarks/>
        JPG,
        
        /// <remarks/>
        JPEG,
        
        /// <remarks/>
        IGES,
        
        /// <remarks/>
        PCX,
        
        /// <remarks/>
        PIC,
        
        /// <remarks/>
        PNG,
        
        /// <remarks/>
        PS,
        
        /// <remarks/>
        SGML,
        
        /// <remarks/>
        TBL,
        
        /// <remarks/>
        TEX,
        
        /// <remarks/>
        TIFF,
        
        /// <remarks/>
        WMF,
        
        /// <remarks/>
        WPG,
        
        /// <remarks/>
        SVG,
        
        /// <remarks/>
        linespecific,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class legalnotice {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class itemizedlist {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("listitem")]
        public listitem[] listitem;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public itemizedlistSpacing spacing;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool spacingSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class caution {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class orderedlist {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("listitem")]
        public listitem[] listitem;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public orderedlistNumeration numeration;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numerationSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(orderedlistInheritnum.ignore)]
        public orderedlistInheritnum inheritnum = orderedlistInheritnum.ignore;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(orderedlistContinuation.restarts)]
        public orderedlistContinuation continuation = orderedlistContinuation.restarts;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public orderedlistSpacing spacing;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool spacingSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class important {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class segmentedlist {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("segtitle")]
        public segtitle[] segtitle;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("seglistitem")]
        public seglistitem[] seglistitem;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class segtitle {
        
        /// <remarks/>
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class seglistitem {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("seg")]
        public seg[] seg;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class seg {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class simplelist {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("member")]
        public member[] member;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string columns;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(simplelistType.vert)]
        public simplelistType type = simplelistType.vert;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class member {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    public enum simplelistType {
        
        /// <remarks/>
        inline,
        
        /// <remarks/>
        vert,
        
        /// <remarks/>
        horiz,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class variablelist {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("varlistentry")]
        public varlistentry[] varlistentry;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string termlength;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class note {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class literallayout {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("co", typeof(co))]
        [System.Xml.Serialization.XmlElementAttribute("lineannotation", typeof(lineannotation))]
        [System.Xml.Serialization.XmlElementAttribute("textobject", typeof(textobject))]
        [System.Xml.Serialization.XmlElementAttribute("coref", typeof(coref))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(literallayoutClass.normal)]
        public literallayoutClass @class = literallayoutClass.normal;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class lineannotation {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class coref {
    }
    
    /// <remarks/>
    public enum literallayoutClass {
        
        /// <remarks/>
        monospaced,
        
        /// <remarks/>
        normal,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class programlisting {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("co", typeof(co))]
        [System.Xml.Serialization.XmlElementAttribute("lineannotation", typeof(lineannotation))]
        [System.Xml.Serialization.XmlElementAttribute("textobject", typeof(textobject))]
        [System.Xml.Serialization.XmlElementAttribute("coref", typeof(coref))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class programlistingco {
        
        /// <remarks/>
        public areaspec areaspec;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("calloutlist")]
        public calloutlist[] calloutlist;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class areaspec {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("area", typeof(area))]
        [System.Xml.Serialization.XmlElementAttribute("areaset", typeof(areaset))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public areaspecUnits units;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
        public string otherunits;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class area {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public areaUnits units;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
        public string otherunits;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string coords;
    }
    
    /// <remarks/>
    public enum areaUnits {
        
        /// <remarks/>
        calspair,
        
        /// <remarks/>
        linecolumn,
        
        /// <remarks/>
        linerange,
        
        /// <remarks/>
        linecolumnpair,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class areaset {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("area")]
        public area[] area;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public areasetUnits units;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
        public string otherunits;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string coords;
    }
    
    /// <remarks/>
    public enum areasetUnits {
        
        /// <remarks/>
        calspair,
        
        /// <remarks/>
        linecolumn,
        
        /// <remarks/>
        linerange,
        
        /// <remarks/>
        linecolumnpair,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    public enum areaspecUnits {
        
        /// <remarks/>
        calspair,
        
        /// <remarks/>
        linecolumn,
        
        /// <remarks/>
        linerange,
        
        /// <remarks/>
        linecolumnpair,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class screen {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("co", typeof(co))]
        [System.Xml.Serialization.XmlElementAttribute("lineannotation", typeof(lineannotation))]
        [System.Xml.Serialization.XmlElementAttribute("textobject", typeof(textobject))]
        [System.Xml.Serialization.XmlElementAttribute("coref", typeof(coref))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class screenco {
        
        /// <remarks/>
        public areaspec areaspec;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("calloutlist")]
        public calloutlist[] calloutlist;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class screenshot {
        
        /// <remarks/>
        public screeninfo screeninfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("graphicco", typeof(graphicco))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobjectco", typeof(mediaobjectco))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class screeninfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class graphicco {
        
        /// <remarks/>
        public areaspec areaspec;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("calloutlist")]
        public calloutlist[] calloutlist;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class mediaobjectco {
        
        /// <remarks/>
        public objectinfo objectinfo;
        
        /// <remarks/>
        public imageobjectco imageobjectco;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("textobject", typeof(textobject))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class imageobjectco {
        
        /// <remarks/>
        public areaspec areaspec;
        
        /// <remarks/>
        public imageobject imageobject;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("calloutlist")]
        public calloutlist[] calloutlist;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class synopsis {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("lineannotation", typeof(lineannotation))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("co", typeof(co))]
        [System.Xml.Serialization.XmlElementAttribute("textobject", typeof(textobject))]
        [System.Xml.Serialization.XmlElementAttribute("coref", typeof(coref))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class cmdsynopsis {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg", typeof(arg))]
        [System.Xml.Serialization.XmlElementAttribute("sbr", typeof(sbr))]
        [System.Xml.Serialization.XmlElementAttribute("command", typeof(command))]
        [System.Xml.Serialization.XmlElementAttribute("group", typeof(group))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("synopfragment")]
        public synopfragment[] synopfragment;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(" ")]
        public string sepchar = " ";
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string cmdlength;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class arg {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg", typeof(arg))]
        [System.Xml.Serialization.XmlElementAttribute("option", typeof(option))]
        [System.Xml.Serialization.XmlElementAttribute("sbr", typeof(sbr))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("synopfragmentref", typeof(synopfragmentref))]
        [System.Xml.Serialization.XmlElementAttribute("group", typeof(group))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(argChoice.opt)]
        public argChoice choice = argChoice.opt;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(argRep.norepeat)]
        public argRep rep = argRep.norepeat;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class option {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sbr {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class synopfragmentref {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class group {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg", typeof(arg))]
        [System.Xml.Serialization.XmlElementAttribute("option", typeof(option))]
        [System.Xml.Serialization.XmlElementAttribute("sbr", typeof(sbr))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("synopfragmentref", typeof(synopfragmentref))]
        [System.Xml.Serialization.XmlElementAttribute("group", typeof(group))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(groupChoice.opt)]
        public groupChoice choice = groupChoice.opt;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(groupRep.norepeat)]
        public groupRep rep = groupRep.norepeat;
    }
    
    /// <remarks/>
    public enum groupChoice {
        
        /// <remarks/>
        opt,
        
        /// <remarks/>
        req,
        
        /// <remarks/>
        plain,
    }
    
    /// <remarks/>
    public enum groupRep {
        
        /// <remarks/>
        norepeat,
        
        /// <remarks/>
        repeat,
    }
    
    /// <remarks/>
    public enum argChoice {
        
        /// <remarks/>
        opt,
        
        /// <remarks/>
        req,
        
        /// <remarks/>
        plain,
    }
    
    /// <remarks/>
    public enum argRep {
        
        /// <remarks/>
        norepeat,
        
        /// <remarks/>
        repeat,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class command {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class synopfragment {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg", typeof(arg))]
        [System.Xml.Serialization.XmlElementAttribute("group", typeof(group))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class funcsynopsis {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("funcsynopsisinfo", typeof(funcsynopsisinfo))]
        [System.Xml.Serialization.XmlElementAttribute("funcprototype", typeof(funcprototype))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class funcsynopsisinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineannotation", typeof(lineannotation))]
        [System.Xml.Serialization.XmlElementAttribute("textobject", typeof(textobject))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class funcprototype {
        
        /// <remarks/>
        public funcdef funcdef;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("void", typeof(@void))]
        [System.Xml.Serialization.XmlElementAttribute("paramdef", typeof(paramdef))]
        [System.Xml.Serialization.XmlElementAttribute("varargs", typeof(varargs))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class funcdef {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("type", typeof(type))]
        [System.Xml.Serialization.XmlElementAttribute("function", typeof(function))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class type {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class function {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class @void {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class paramdef {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameter", typeof(parameter))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("funcparams", typeof(funcparams))]
        [System.Xml.Serialization.XmlElementAttribute("type", typeof(type))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class parameter {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public parameterClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
    }
    
    /// <remarks/>
    public enum parameterClass {
        
        /// <remarks/>
        command,
        
        /// <remarks/>
        function,
        
        /// <remarks/>
        option,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class funcparams {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class varargs {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class classsynopsis {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ooclass", typeof(ooclass))]
        [System.Xml.Serialization.XmlElementAttribute("oointerface", typeof(oointerface))]
        [System.Xml.Serialization.XmlElementAttribute("ooexception", typeof(ooexception))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fieldsynopsis", typeof(fieldsynopsis))]
        [System.Xml.Serialization.XmlElementAttribute("classsynopsisinfo", typeof(classsynopsisinfo))]
        public object[] Items1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string language;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(classsynopsisClass.@class)]
        public classsynopsisClass @class = classsynopsisClass.@class;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class ooclass {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modifier")]
        public modifier[] modifier;
        
        /// <remarks/>
        public classname classname;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class modifier {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class classname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class oointerface {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modifier")]
        public modifier[] modifier;
        
        /// <remarks/>
        public interfacename interfacename;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class interfacename {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class ooexception {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modifier")]
        public modifier[] modifier;
        
        /// <remarks/>
        public exceptionname exceptionname;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class exceptionname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class fieldsynopsis {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modifier")]
        public modifier[] modifier;
        
        /// <remarks/>
        public type type;
        
        /// <remarks/>
        public varname varname;
        
        /// <remarks/>
        public initializer initializer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string language;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class varname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class initializer {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class classsynopsisinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineannotation", typeof(lineannotation))]
        [System.Xml.Serialization.XmlElementAttribute("textobject", typeof(textobject))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    public enum classsynopsisClass {
        
        /// <remarks/>
        @class,
        
        /// <remarks/>
        @interface,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class constructorsynopsis {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modifier")]
        public modifier[] modifier;
        
        /// <remarks/>
        public methodname methodname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("void", typeof(@void))]
        [System.Xml.Serialization.XmlElementAttribute("methodparam", typeof(methodparam))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exceptionname")]
        public exceptionname[] exceptionname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string language;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class methodname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class methodparam {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modifier")]
        public modifier[] modifier;
        
        /// <remarks/>
        public type type;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameter", typeof(parameter))]
        [System.Xml.Serialization.XmlElementAttribute("initializer", typeof(initializer))]
        [System.Xml.Serialization.XmlElementAttribute("funcparams", typeof(funcparams))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modifier1")]
        public modifier[] modifier1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(methodparamChoice.req)]
        public methodparamChoice choice = methodparamChoice.req;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(methodparamRep.norepeat)]
        public methodparamRep rep = methodparamRep.norepeat;
    }
    
    /// <remarks/>
    public enum methodparamChoice {
        
        /// <remarks/>
        opt,
        
        /// <remarks/>
        req,
        
        /// <remarks/>
        plain,
    }
    
    /// <remarks/>
    public enum methodparamRep {
        
        /// <remarks/>
        norepeat,
        
        /// <remarks/>
        repeat,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class destructorsynopsis {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modifier")]
        public modifier[] modifier;
        
        /// <remarks/>
        public methodname methodname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("void", typeof(@void))]
        [System.Xml.Serialization.XmlElementAttribute("methodparam", typeof(methodparam))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exceptionname")]
        public exceptionname[] exceptionname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string language;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class methodsynopsis {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modifier")]
        public modifier[] modifier;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("void", typeof(@void))]
        [System.Xml.Serialization.XmlElementAttribute("type", typeof(type))]
        public object Item;
        
        /// <remarks/>
        public methodname methodname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("methodparam", typeof(methodparam))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exceptionname")]
        public exceptionname[] exceptionname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modifiers")]
        public modifier[] modifier1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string language;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class formalpara {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public para para;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class para {
        
        /// <remarks/>
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class simpara {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class address {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("personname", typeof(personname))]
        [System.Xml.Serialization.XmlElementAttribute("otheraddr", typeof(otheraddr))]
        [System.Xml.Serialization.XmlElementAttribute("country", typeof(country))]
        [System.Xml.Serialization.XmlElementAttribute("pob", typeof(pob))]
        [System.Xml.Serialization.XmlElementAttribute("email", typeof(email))]
        [System.Xml.Serialization.XmlElementAttribute("phone", typeof(phone))]
        [System.Xml.Serialization.XmlElementAttribute("fax", typeof(fax))]
        [System.Xml.Serialization.XmlElementAttribute("state", typeof(state))]
        [System.Xml.Serialization.XmlElementAttribute("city", typeof(city))]
        [System.Xml.Serialization.XmlElementAttribute("postcode", typeof(postcode))]
        [System.Xml.Serialization.XmlElementAttribute("street", typeof(street))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class personname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("firstname", typeof(firstname))]
        [System.Xml.Serialization.XmlElementAttribute("othername", typeof(othername))]
        [System.Xml.Serialization.XmlElementAttribute("surname", typeof(surname))]
        [System.Xml.Serialization.XmlElementAttribute("honorific", typeof(honorific))]
        [System.Xml.Serialization.XmlElementAttribute("lineage", typeof(lineage))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class firstname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class othername {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class surname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class honorific {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class lineage {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class otheraddr {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class country {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class pob {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class email {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class phone {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class fax {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class state {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class city {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class postcode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class street {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class informalequation {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public alt alt;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class alt {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class informalexample {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("informalexample")]
        public informalexample informalexample1;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class informalfigure {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string @float = "0";
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string pgwide;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class informaltable {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("textobject")]
        public textobject[] textobject;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("tgroup", typeof(tgroup))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public informaltableFrame frame;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool frameSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rowsep;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class tgroup : tbltgroupmdl {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string cols;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rowsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public tgroupAlign align;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alignSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @char;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string charoff;
    }
    
    /// <remarks/>
    public enum tgroupAlign {
        
        /// <remarks/>
        left,
        
        /// <remarks/>
        right,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        justify,
        
        /// <remarks/>
        @char,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="tbl.tgroup.mdl")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(tgroup))]
    public class tbltgroupmdl {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("colspec")]
        public colspec[] colspec;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("spanspec")]
        public spanspec[] spanspec;
        
        /// <remarks/>
        public thead thead;
        
        /// <remarks/>
        public tfoot tfoot;
        
        /// <remarks/>
        public tbody tbody;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class colspec {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colnum;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colwidth;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rowsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public colspecAlign align;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alignSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @char;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string charoff;
    }
    
    /// <remarks/>
    public enum colspecAlign {
        
        /// <remarks/>
        left,
        
        /// <remarks/>
        right,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        justify,
        
        /// <remarks/>
        @char,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class spanspec {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string namest;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nameend;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string spanname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rowsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public spanspecAlign align;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alignSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @char;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string charoff;
    }
    
    /// <remarks/>
    public enum spanspecAlign {
        
        /// <remarks/>
        left,
        
        /// <remarks/>
        right,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        justify,
        
        /// <remarks/>
        @char,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class thead : tblhdftmdl {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public theadValign valign;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valignSpecified;
    }
    
    /// <remarks/>
    public enum theadValign {
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        middle,
        
        /// <remarks/>
        bottom,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="tbl.hdft.mdl")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(tfoot))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(thead))]
    public class tblhdftmdl {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("colspec")]
        public colspec[] colspec;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("row")]
        public row[] row;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class row : tblrowmdl {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rowsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public rowValign valign;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valignSpecified;
    }
    
    /// <remarks/>
    public enum rowValign {
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        middle,
        
        /// <remarks/>
        bottom,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="tbl.row.mdl")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(row))]
    public class tblrowmdl {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("entrytbl", typeof(entrytbl))]
        [System.Xml.Serialization.XmlElementAttribute("entry", typeof(entry))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class entrytbl : tblentrytblmdl {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string cols;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string spanname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string namest;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nameend;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rowsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public entrytblAlign align;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alignSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @char;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string charoff;
    }
    
    /// <remarks/>
    public enum entrytblAlign {
        
        /// <remarks/>
        left,
        
        /// <remarks/>
        right,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        justify,
        
        /// <remarks/>
        @char,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="tbl.entrytbl.mdl")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(entrytbl))]
    public class tblentrytblmdl {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("colspec")]
        public colspec[] colspec;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("spanspec")]
        public spanspec[] spanspec;
        
        /// <remarks/>
        public thead thead;
        
        /// <remarks/>
        public tbody tbody;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class tbody {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("row")]
        public row[] row;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public tbodyValign valign;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valignSpecified;
    }
    
    /// <remarks/>
    public enum tbodyValign {
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        middle,
        
        /// <remarks/>
        bottom,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class entry {
        
        /// <remarks/>
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string namest;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nameend;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string spanname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string morerows;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rowsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public entryAlign align;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alignSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @char;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string charoff;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rotate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public entryValign valign;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valignSpecified;
    }
    
    /// <remarks/>
    public enum entryAlign {
        
        /// <remarks/>
        left,
        
        /// <remarks/>
        right,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        justify,
        
        /// <remarks/>
        @char,
    }
    
    /// <remarks/>
    public enum entryValign {
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        middle,
        
        /// <remarks/>
        bottom,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class tfoot : tblhdftmdl {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public tfootValign valign;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valignSpecified;
    }
    
    /// <remarks/>
    public enum tfootValign {
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        middle,
        
        /// <remarks/>
        bottom,
    }
    
    /// <remarks/>
    public enum informaltableFrame {
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        bottom,
        
        /// <remarks/>
        topbot,
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        sides,
        
        /// <remarks/>
        none,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class equation {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("informalequation")]
        public informalequation Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class example {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class figure {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string @float = "0";
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string pgwide;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class table : tbltablemdl {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public tableFrame frame;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool frameSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string colsep;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rowsep;
    }
    
    /// <remarks/>
    public enum tableFrame {
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        bottom,
        
        /// <remarks/>
        topbot,
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        sides,
        
        /// <remarks/>
        none,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="tbl.table.mdl")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(table))]
    public class tbltablemdl {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("textobject")]
        public textobject[] textobject;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("tgroup", typeof(tgroup))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sidebar {
        
        /// <remarks/>
        public sidebarinfo sidebarinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sidebarinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class tip {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class anchor {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class bridgehead {
        
        /// <remarks/>
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bridgeheadRenderas renderas;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool renderasSpecified;
    }
    
    /// <remarks/>
    public enum bridgeheadRenderas {
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        sect1,
        
        /// <remarks/>
        sect2,
        
        /// <remarks/>
        sect3,
        
        /// <remarks/>
        sect4,
        
        /// <remarks/>
        sect5,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class remark {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class warning {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class highlights {
        
        /// <remarks/>
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class abstractc {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class authorblurb {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class epigraph {
        
        /// <remarks/>
        public attribution attribution;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("literallayout")]
        public literallayout[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class varlistentry {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("term")]
        public term[] term;
        
        /// <remarks/>
        public listitem listitem;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class term {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class listitem {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @override;
    }
    
    /// <remarks/>
    public enum orderedlistNumeration {
        
        /// <remarks/>
        arabic,
        
        /// <remarks/>
        upperalpha,
        
        /// <remarks/>
        loweralpha,
        
        /// <remarks/>
        upperroman,
        
        /// <remarks/>
        lowerroman,
    }
    
    /// <remarks/>
    public enum orderedlistInheritnum {
        
        /// <remarks/>
        inherit,
        
        /// <remarks/>
        ignore,
    }
    
    /// <remarks/>
    public enum orderedlistContinuation {
        
        /// <remarks/>
        continues,
        
        /// <remarks/>
        restarts,
    }
    
    /// <remarks/>
    public enum orderedlistSpacing {
        
        /// <remarks/>
        normal,
        
        /// <remarks/>
        compact,
    }
    
    /// <remarks/>
    public enum itemizedlistSpacing {
        
        /// <remarks/>
        normal,
        
        /// <remarks/>
        compact,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msgset {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("simplemsgentry", typeof(simplemsgentry))]
        [System.Xml.Serialization.XmlElementAttribute("msgentry", typeof(msgentry))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class simplemsgentry {
        
        /// <remarks/>
        public msgtext msgtext;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("msgexplan")]
        public msgexplan[] msgexplan;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string audience;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string level;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string origin;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msgtext {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msgexplan {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class qandaset {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("qandadiv", typeof(qandadiv))]
        [System.Xml.Serialization.XmlElementAttribute("qandaentry", typeof(qandaentry))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public qandasetDefaultlabel defaultlabel;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultlabelSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class qandadiv {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("qandadiv", typeof(qandadiv))]
        [System.Xml.Serialization.XmlElementAttribute("qandaentry", typeof(qandaentry))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class qandaentry {
        
        /// <remarks/>
        public blockinfo blockinfo;
        
        /// <remarks/>
        public revhistory revhistory;
        
        /// <remarks/>
        public question question;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("answer")]
        public answer[] answer;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class question {
        
        /// <remarks/>
        public label label;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public indexterm indexterm;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class label {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("acronym", typeof(acronym))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class answer {
        
        /// <remarks/>
        public label label;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("qandaentry")]
        public qandaentry[] qandaentry;
    }
    
    /// <remarks/>
    public enum qandasetDefaultlabel {
        
        /// <remarks/>
        qanda,
        
        /// <remarks/>
        number,
        
        /// <remarks/>
        none,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msgentry {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("msg")]
        public msg[] msg;
        
        /// <remarks/>
        public msginfo msginfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("msgexplan")]
        public msgexplan[] msgexplan;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msg {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public msgmain msgmain;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("msgsub", typeof(msgsub))]
        [System.Xml.Serialization.XmlElementAttribute("msgrel", typeof(msgrel))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msgmain {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public msgtext msgtext;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msgsub {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public msgtext msgtext;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msgrel {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public msgtext msgtext;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msginfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("msglevel", typeof(msglevel))]
        [System.Xml.Serialization.XmlElementAttribute("msgaud", typeof(msgaud))]
        [System.Xml.Serialization.XmlElementAttribute("msgorig", typeof(msgorig))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msglevel {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msgaud {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class msgorig {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class step {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("substeps")]
        public substeps Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(stepPerformance.required)]
        public stepPerformance performance = stepPerformance.required;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class substeps {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("step")]
        public step[] step;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(substepsPerformance.required)]
        public substepsPerformance performance = substepsPerformance.required;
    }
    
    /// <remarks/>
    public enum substepsPerformance {
        
        /// <remarks/>
        optional,
        
        /// <remarks/>
        required,
    }
    
    /// <remarks/>
    public enum stepPerformance {
        
        /// <remarks/>
        optional,
        
        /// <remarks/>
        required,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class revremark {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class glosssee {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
        public string otherterm;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class glossdef {
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossseealso")]
        public glossseealso[] glossseealso;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string subject;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class glossseealso {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
        public string otherterm;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class seealso {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class secondary {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string sortas;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class see {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class tertiary {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string sortas;
    }
    
    /// <remarks/>
    public enum indextermScope {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        global,
        
        /// <remarks/>
        local,
    }
    
    /// <remarks/>
    public enum indextermSignificance {
        
        /// <remarks/>
        preferred,
        
        /// <remarks/>
        normal,
    }
    
    /// <remarks/>
    public enum indextermClass {
        
        /// <remarks/>
        singular,
        
        /// <remarks/>
        startofrange,
        
        /// <remarks/>
        endofrange,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class setindex {
        
        /// <remarks/>
        public setindexinfo setindexinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("indexentry", typeof(indexentry))]
        [System.Xml.Serialization.XmlElementAttribute("indexdiv", typeof(indexdiv))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class subtitle {
        
        /// <remarks/>
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class indexentry {
        
        /// <remarks/>
        public primaryie primaryie;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("seealsoie", typeof(seealsoie))]
        [System.Xml.Serialization.XmlElementAttribute("seeie", typeof(seeie))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("secondaryie")]
        public secondaryie[] secondaryie;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tertiaryie", typeof(tertiaryie))]
        public object[] Items1;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class primaryie {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class seealsoie {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class seeie {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class secondaryie {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class tertiaryie {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class indexdiv {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public link link;
        
        /// <remarks/>
        public olink olink;
        
        /// <remarks/>
        public ulink ulink;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("indexentry", typeof(indexentry))]
        [System.Xml.Serialization.XmlElementAttribute("segmentedlist", typeof(segmentedlist))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class link {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
        public string endterm;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class olink {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="ENTITY")]
        public string targetdocent;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
        public string linkmode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string localinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string targetdoc;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string targetptr;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class ulink {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string url;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class colophon {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public blockquote blockquote;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class ackno {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class article {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public articleinfo articleinfo;
        
        /// <remarks/>
        public tocchap tocchap;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lot")]
        public lot[] lot;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractec;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute("sect1")]
		[System.Xml.Serialization.XmlElementAttribute("simplesect", typeof(simplesect))]
        public object[] Items;
        
        /// <remarks/>
        public refentry refentry;
        
        /// <remarks/>
        public section section;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ackno")]
        public ackno[] Items1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public articleClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
        public string parentbook;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class articleinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class tocchap {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocentry")]
        public tocentry[] tocentry;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toclevel1")]
        public toclevel1[] toclevel1;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class tocentry {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class toclevel1 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocentry")]
        public tocentry[] tocentry;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toclevel2")]
        public toclevel2[] toclevel2;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class toclevel2 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocentry")]
        public tocentry[] tocentry;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toclevel3")]
        public toclevel3[] toclevel3;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class toclevel3 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocentry")]
        public tocentry[] tocentry;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toclevel4")]
        public toclevel4[] toclevel4;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class toclevel4 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocentry")]
        public tocentry[] tocentry;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toclevel5")]
        public toclevel5[] toclevel5;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class toclevel5 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocentry")]
        public tocentry[] tocentry;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class lot {
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lotentry")]
        public lotentry[] lotentry;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class lotentry {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string srccredit;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class simplesect {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sect1 {
        
        /// <remarks/>
        public sect1info sect1info;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public toc toc;
        
        /// <remarks/>
        public lot lot;
        
        /// <remarks/>
        public index index;
        
        /// <remarks/>
        public glossary glossary;
        
        /// <remarks/>
        public bibliography bibliography;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect2", typeof(sect2))]
        [System.Xml.Serialization.XmlElementAttribute("simplesect", typeof(simplesect))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toc")]
        public toc toc1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lot")]
        public lot lot1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("index")]
        public index index1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossary")]
        public glossary glossary1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliography")]
        public bibliography bibliography1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sect1Renderas renderas;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool renderasSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sect1info {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class toc {
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocfront")]
        public tocfront[] tocfront;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocpart", typeof(tocpart))]
        [System.Xml.Serialization.XmlElementAttribute("tocchap", typeof(tocchap))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocback")]
        public tocback[] tocback;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class tocfront {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class tocpart {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocentry")]
        public tocentry[] tocentry;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocchap")]
        public tocchap[] tocchap;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class tocback {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class index {
        
        /// <remarks/>
        public indexinfo indexinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("indexentry", typeof(indexentry))]
        [System.Xml.Serialization.XmlElementAttribute("indexdiv", typeof(indexdiv))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class indexinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class glossary {
        
        /// <remarks/>
        public glossaryinfo glossaryinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossdiv", typeof(glossdiv))]
        [System.Xml.Serialization.XmlElementAttribute("glossentry", typeof(glossentry))]
        public object[] Items;
        
        /// <remarks/>
        public bibliography bibliography;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class glossaryinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class glossdiv {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossentry")]
        public glossentry[] glossentry;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class bibliography {
        
        /// <remarks/>
        public bibliographyinfo bibliographyinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliomixed", typeof(bibliomixed))]
        [System.Xml.Serialization.XmlElementAttribute("biblioentry", typeof(biblioentry))]
        [System.Xml.Serialization.XmlElementAttribute("bibliodiv", typeof(bibliodiv))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class bibliographyinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class bibliomixed {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliomset")]
        public bibliomset[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class bibliomset {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliomset")]
        public bibliomset[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string relation;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class biblioentry {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("articleinfo")]
        public articleinfo[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class bibliodiv {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliomixed", typeof(bibliomixed))]
        [System.Xml.Serialization.XmlElementAttribute("biblioentry", typeof(biblioentry))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sect2 {
        
        /// <remarks/>
        public sect2info sect2info;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public toc toc;
        
        /// <remarks/>
        public lot lot;
        
        /// <remarks/>
        public index index;
        
        /// <remarks/>
        public glossary glossary;
        
        /// <remarks/>
        public bibliography bibliography;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect3", typeof(sect3))]
        [System.Xml.Serialization.XmlElementAttribute("simplesect", typeof(simplesect))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toc")]
        public toc toc1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lot")]
        public lot lot1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("index")]
        public index index1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossary")]
        public glossary glossary1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliography")]
        public bibliography bibliography1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sect2Renderas renderas;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool renderasSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sect2info {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sect3 {
        
        /// <remarks/>
        public sect3info sect3info;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public toc toc;
        
        /// <remarks/>
        public lot lot;
        
        /// <remarks/>
        public index index;
        
        /// <remarks/>
        public glossary glossary;
        
        /// <remarks/>
        public bibliography bibliography;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect4", typeof(sect4))]
        [System.Xml.Serialization.XmlElementAttribute("simplesect", typeof(simplesect))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toc")]
        public toc toc1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lot")]
        public lot lot1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("index")]
        public index index1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossary")]
        public glossary glossary1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliography")]
        public bibliography bibliography1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sect3Renderas renderas;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool renderasSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sect3info {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sect4 {
        
        /// <remarks/>
        public sect4info sect4info;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public toc toc;
        
        /// <remarks/>
        public lot lot;
        
        /// <remarks/>
        public index index;
        
        /// <remarks/>
        public glossary glossary;
        
        /// <remarks/>
        public bibliography bibliography;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect5", typeof(sect5))]
        [System.Xml.Serialization.XmlElementAttribute("simplesect", typeof(simplesect))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toc")]
        public toc toc1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lot")]
        public lot lot1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("index")]
        public index index1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossary")]
        public glossary glossary1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliography")]
        public bibliography bibliography1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sect4Renderas renderas;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool renderasSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sect4info {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sect5 {
        
        /// <remarks/>
        public sect5info sect5info;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public toc toc;
        
        /// <remarks/>
        public lot lot;
        
        /// <remarks/>
        public index index;
        
        /// <remarks/>
        public glossary glossary;
        
        /// <remarks/>
        public bibliography bibliography;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("simplesect")]
        public simplesect[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toc")]
        public toc toc1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lot")]
        public lot lot1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("index")]
        public index index1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossary")]
        public glossary glossary1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliography")]
        public bibliography bibliography1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sect5Renderas renderas;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool renderasSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sect5info {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    public enum sect5Renderas {
        
        /// <remarks/>
        sect1,
        
        /// <remarks/>
        sect2,
        
        /// <remarks/>
        sect3,
        
        /// <remarks/>
        sect4,
    }
    
    /// <remarks/>
    public enum sect4Renderas {
        
        /// <remarks/>
        sect1,
        
        /// <remarks/>
        sect2,
        
        /// <remarks/>
        sect3,
        
        /// <remarks/>
        sect5,
    }
    
    /// <remarks/>
    public enum sect3Renderas {
        
        /// <remarks/>
        sect1,
        
        /// <remarks/>
        sect2,
        
        /// <remarks/>
        sect4,
        
        /// <remarks/>
        sect5,
    }
    
    /// <remarks/>
    public enum sect2Renderas {
        
        /// <remarks/>
        sect1,
        
        /// <remarks/>
        sect3,
        
        /// <remarks/>
        sect4,
        
        /// <remarks/>
        sect5,
    }
    
    /// <remarks/>
    public enum sect1Renderas {
        
        /// <remarks/>
        sect2,
        
        /// <remarks/>
        sect3,
        
        /// <remarks/>
        sect4,
        
        /// <remarks/>
        sect5,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refentry {
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public refentryinfo refentryinfo;
        
        /// <remarks/>
        public refmeta refmeta;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("remark")]
        public remark[] Items;
        
        /// <remarks/>
        public refnamediv refnamediv;
        
        /// <remarks/>
        public refsynopsisdiv refsynopsisdiv;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("refsection", typeof(refsection))]
        [System.Xml.Serialization.XmlElementAttribute("refsect1", typeof(refsect1))]
        public object[] Items1;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refentryinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refmeta {
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public refentrytitle refentrytitle;
        
        /// <remarks/>
        public manvolnum manvolnum;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("refmiscinfo")]
        public refmiscinfo[] refmiscinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("indexterm")]
        public indexterm indexterm1;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refentrytitle {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class manvolnum {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("acronym", typeof(acronym))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refmiscinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @class;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refnamediv {
        
        /// <remarks/>
        public refdescriptor refdescriptor;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("refname")]
        public refname[] refname;
        
        /// <remarks/>
        public refpurpose refpurpose;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("refclass")]
        public refclass[] refclass;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("remark")]
        public remark[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refdescriptor {
        
        /// <remarks/>
        public action action;
        
        /// <remarks/>
        public application application;
        
        /// <remarks/>
        public classname classname;
        
        /// <remarks/>
        public methodname methodname;
        
        /// <remarks/>
        public interfacename interfacename;
        
        /// <remarks/>
        public exceptionname exceptionname;
        
        /// <remarks/>
        public ooclass ooclass;
        
        /// <remarks/>
        public oointerface oointerface;
        
        /// <remarks/>
        public ooexception ooexception;
        
        /// <remarks/>
        public command command;
        
        /// <remarks/>
        public computeroutput computeroutput;
        
        /// <remarks/>
        public database database;
        
        /// <remarks/>
        public email email;
        
        /// <remarks/>
        public envar envar;
        
        /// <remarks/>
        public errorcode errorcode;
        
        /// <remarks/>
        public errorname errorname;
        
        /// <remarks/>
        public errortype errortype;
        
        /// <remarks/>
        public errortext errortext;
        
        /// <remarks/>
        public filename filename;
        
        /// <remarks/>
        public function function;
        
        /// <remarks/>
        public guibutton guibutton;
        
        /// <remarks/>
        public guiicon guiicon;
        
        /// <remarks/>
        public guilabel guilabel;
        
        /// <remarks/>
        public guimenu guimenu;
        
        /// <remarks/>
        public guimenuitem guimenuitem;
        
        /// <remarks/>
        public guisubmenu guisubmenu;
        
        /// <remarks/>
        public hardware hardware;
        
        /// <remarks/>
        public @interface @interface;
        
        /// <remarks/>
        public keycap keycap;
        
        /// <remarks/>
        public keycode keycode;
        
        /// <remarks/>
        public keycombo keycombo;
        
        /// <remarks/>
        public keysym keysym;
        
        /// <remarks/>
        public literal literal;
        
        /// <remarks/>
        public constant constant;
        
        /// <remarks/>
        public markup markup;
        
        /// <remarks/>
        public medialabel medialabel;
        
        /// <remarks/>
        public menuchoice menuchoice;
        
        /// <remarks/>
        public mousebutton mousebutton;
        
        /// <remarks/>
        public option option;
        
        /// <remarks/>
        public optional optional;
        
        /// <remarks/>
        public parameter parameter;
        
        /// <remarks/>
        public prompt prompt;
        
        /// <remarks/>
        public property property;
        
        /// <remarks/>
        public replaceable replaceable;
        
        /// <remarks/>
        public returnvalue returnvalue;
        
        /// <remarks/>
        public sgmltag sgmltag;
        
        /// <remarks/>
        public structfield structfield;
        
        /// <remarks/>
        public structname structname;
        
        /// <remarks/>
        public symbol symbol;
        
        /// <remarks/>
        public systemitem systemitem;
        
        /// <remarks/>
        public token token;
        
        /// <remarks/>
        public type type;
        
        /// <remarks/>
        public userinput userinput;
        
        /// <remarks/>
        public varname varname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class action {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class application {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public applicationClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
    }
    
    /// <remarks/>
    public enum applicationClass {
        
        /// <remarks/>
        hardware,
        
        /// <remarks/>
        software,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class computeroutput {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("co")]
        public co[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class database {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public databaseClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
    }
    
    /// <remarks/>
    public enum databaseClass {
        
        /// <remarks/>
        name,
        
        /// <remarks/>
        table,
        
        /// <remarks/>
        field,
        
        /// <remarks/>
        key1,
        
        /// <remarks/>
        key2,
        
        /// <remarks/>
        record,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class envar {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class errorcode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class errorname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class errortype {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class errortext {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class filename {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public filenameClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string path;
    }
    
    /// <remarks/>
    public enum filenameClass {
        
        /// <remarks/>
        headerfile,
        
        /// <remarks/>
        partition,
        
        /// <remarks/>
        devicefile,
        
        /// <remarks/>
        libraryfile,
        
        /// <remarks/>
        directory,
        
        /// <remarks/>
        extension,
        
        /// <remarks/>
        symlink,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class guibutton {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accel")]
        public accel[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class accel {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class guiicon {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accel")]
        public accel[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class guilabel {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accel")]
        public accel[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class guimenu {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accel")]
        public accel[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class guimenuitem {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accel")]
        public accel[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class guisubmenu {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accel")]
        public accel[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class hardware {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class @interface {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accel")]
        public accel[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class keycap {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class keycode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class keycombo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mousebutton", typeof(mousebutton))]
        [System.Xml.Serialization.XmlElementAttribute("keycombo", typeof(keycombo))]
        [System.Xml.Serialization.XmlElementAttribute("keysym", typeof(keysym))]
        [System.Xml.Serialization.XmlElementAttribute("keycap", typeof(keycap))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class mousebutton {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class keysym {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class literal {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class constant {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public constantClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
    }
    
    /// <remarks/>
    public enum constantClass {
        
        /// <remarks/>
        limit,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class markup {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class medialabel {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public medialabelClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
    }
    
    /// <remarks/>
    public enum medialabelClass {
        
        /// <remarks/>
        cartridge,
        
        /// <remarks/>
        cdrom,
        
        /// <remarks/>
        disk,
        
        /// <remarks/>
        tape,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class menuchoice {
        
        /// <remarks/>
        public shortcut shortcut;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("guiicon", typeof(guiicon))]
        [System.Xml.Serialization.XmlElementAttribute("guilabel", typeof(guilabel))]
        [System.Xml.Serialization.XmlElementAttribute("guibutton", typeof(guibutton))]
        [System.Xml.Serialization.XmlElementAttribute("interface", typeof(@interface))]
        [System.Xml.Serialization.XmlElementAttribute("guisubmenu", typeof(guisubmenu))]
        [System.Xml.Serialization.XmlElementAttribute("guimenu", typeof(guimenu))]
        [System.Xml.Serialization.XmlElementAttribute("guimenuitem", typeof(guimenuitem))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class shortcut {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mousebutton", typeof(mousebutton))]
        [System.Xml.Serialization.XmlElementAttribute("keycombo", typeof(keycombo))]
        [System.Xml.Serialization.XmlElementAttribute("keysym", typeof(keysym))]
        [System.Xml.Serialization.XmlElementAttribute("keycap", typeof(keycap))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class prompt {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("co")]
        public co[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class property {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class returnvalue {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sgmltag {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sgmltagClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
    }
    
    /// <remarks/>
    public enum sgmltagClass {
        
        /// <remarks/>
        attribute,
        
        /// <remarks/>
        attvalue,
        
        /// <remarks/>
        element,
        
        /// <remarks/>
        endtag,
        
        /// <remarks/>
        emptytag,
        
        /// <remarks/>
        genentity,
        
        /// <remarks/>
        numcharref,
        
        /// <remarks/>
        paramentity,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        xmlpi,
        
        /// <remarks/>
        starttag,
        
        /// <remarks/>
        sgmlcomment,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class structfield {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class structname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class symbol {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public symbolClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
    }
    
    /// <remarks/>
    public enum symbolClass {
        
        /// <remarks/>
        limit,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class systemitem {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("co", typeof(co))]
        [System.Xml.Serialization.XmlElementAttribute("acronym", typeof(acronym))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public systemitemClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
    }
    
    /// <remarks/>
    public enum systemitemClass {
        
        /// <remarks/>
        constant,
        
        /// <remarks/>
        @event,
        
        /// <remarks/>
        eventhandler,
        
        /// <remarks/>
        domainname,
        
        /// <remarks/>
        fqdomainname,
        
        /// <remarks/>
        ipaddress,
        
        /// <remarks/>
        netmask,
        
        /// <remarks/>
        etheraddress,
        
        /// <remarks/>
        groupname,
        
        /// <remarks/>
        library,
        
        /// <remarks/>
        macro,
        
        /// <remarks/>
        osname,
        
        /// <remarks/>
        filesystem,
        
        /// <remarks/>
        resource,
        
        /// <remarks/>
        systemname,
        
        /// <remarks/>
        username,
        
        /// <remarks/>
        newsgroup,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class token {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class userinput {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("co")]
        public co[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refname {
        
        /// <remarks/>
        public action action;
        
        /// <remarks/>
        public application application;
        
        /// <remarks/>
        public classname classname;
        
        /// <remarks/>
        public methodname methodname;
        
        /// <remarks/>
        public interfacename interfacename;
        
        /// <remarks/>
        public exceptionname exceptionname;
        
        /// <remarks/>
        public ooclass ooclass;
        
        /// <remarks/>
        public oointerface oointerface;
        
        /// <remarks/>
        public ooexception ooexception;
        
        /// <remarks/>
        public command command;
        
        /// <remarks/>
        public computeroutput computeroutput;
        
        /// <remarks/>
        public database database;
        
        /// <remarks/>
        public email email;
        
        /// <remarks/>
        public envar envar;
        
        /// <remarks/>
        public errorcode errorcode;
        
        /// <remarks/>
        public errorname errorname;
        
        /// <remarks/>
        public errortype errortype;
        
        /// <remarks/>
        public errortext errortext;
        
        /// <remarks/>
        public filename filename;
        
        /// <remarks/>
        public function function;
        
        /// <remarks/>
        public guibutton guibutton;
        
        /// <remarks/>
        public guiicon guiicon;
        
        /// <remarks/>
        public guilabel guilabel;
        
        /// <remarks/>
        public guimenu guimenu;
        
        /// <remarks/>
        public guimenuitem guimenuitem;
        
        /// <remarks/>
        public guisubmenu guisubmenu;
        
        /// <remarks/>
        public hardware hardware;
        
        /// <remarks/>
        public @interface @interface;
        
        /// <remarks/>
        public keycap keycap;
        
        /// <remarks/>
        public keycode keycode;
        
        /// <remarks/>
        public keycombo keycombo;
        
        /// <remarks/>
        public keysym keysym;
        
        /// <remarks/>
        public literal literal;
        
        /// <remarks/>
        public constant constant;
        
        /// <remarks/>
        public markup markup;
        
        /// <remarks/>
        public medialabel medialabel;
        
        /// <remarks/>
        public menuchoice menuchoice;
        
        /// <remarks/>
        public mousebutton mousebutton;
        
        /// <remarks/>
        public option option;
        
        /// <remarks/>
        public optional optional;
        
        /// <remarks/>
        public parameter parameter;
        
        /// <remarks/>
        public prompt prompt;
        
        /// <remarks/>
        public property property;
        
        /// <remarks/>
        public replaceable replaceable;
        
        /// <remarks/>
        public returnvalue returnvalue;
        
        /// <remarks/>
        public sgmltag sgmltag;
        
        /// <remarks/>
        public structfield structfield;
        
        /// <remarks/>
        public structname structname;
        
        /// <remarks/>
        public symbol symbol;
        
        /// <remarks/>
        public systemitem systemitem;
        
        /// <remarks/>
        public token token;
        
        /// <remarks/>
        public type type;
        
        /// <remarks/>
        public userinput userinput;
        
        /// <remarks/>
        public varname varname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refpurpose {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refclass {
        
        /// <remarks/>
        public application application;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refsynopsisdiv {
        
        /// <remarks/>
        public refsynopsisdivinfo refsynopsisdivinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("refsect2")]
        public refsect2[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refsynopsisdivinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refsect2 {
        
        /// <remarks/>
        public refsect2info refsect2info;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("refsect3")]
        public refsect3[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refsect2info {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refsect3 {
        
        /// <remarks/>
        public refsect3info refsect3info;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refsect3info {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refsection {
        
        /// <remarks/>
        public refsectioninfo refsectioninfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("refsection")]
        public refsection[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refsectioninfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refsect1 {
        
        /// <remarks/>
        public refsect1info refsect1info;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("refsect2")]
        public refsect2[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class refsect1info {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class section {
        
        /// <remarks/>
        public sectioninfo sectioninfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public toc toc;
        
        /// <remarks/>
        public lot lot;
        
        /// <remarks/>
        public index index;
        
        /// <remarks/>
        public glossary glossary;
        
        /// <remarks/>
        public bibliography bibliography;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("simplesect")]
        public simplesect[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toc")]
        public toc toc1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lot")]
        public lot lot1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("index")]
        public index index1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossary")]
        public glossary glossary1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliography")]
        public bibliography bibliography1;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class sectioninfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    public enum articleClass {
        
        /// <remarks/>
        journalarticle,
        
        /// <remarks/>
        productsheet,
        
        /// <remarks/>
        whitepaper,
        
        /// <remarks/>
        techreport,
        
        /// <remarks/>
        specification,
        
        /// <remarks/>
        faq,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class chapterinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class chapter {
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        public chapterinfo chapterinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public toc toc;
        
        /// <remarks/>
        public lot lot;
        
        /// <remarks/>
        public index index;
        
        /// <remarks/>
        public glossary glossary;
        
        /// <remarks/>
        public bibliography bibliography;
        
        /// <remarks/>
        public tocchap tocchap;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage beginpage1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("simplesect", typeof(simplesect))]
        [System.Xml.Serialization.XmlElementAttribute("sect1", typeof(sect1))]
        public object[] Items;
        
        /// <remarks/>
        public refentry refentry;
        
        /// <remarks/>
        public section section;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toc")]
        public toc toc1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lot")]
        public lot lot1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("index")]
        public index index1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossary")]
        public glossary glossary1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliography")]
        public bibliography bibliography1;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class appendixinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class appendix {
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        public appendixinfo appendixinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public toc toc;
        
        /// <remarks/>
        public lot lot;
        
        /// <remarks/>
        public index index;
        
        /// <remarks/>
        public glossary glossary;
        
        /// <remarks/>
        public bibliography bibliography;
        
        /// <remarks/>
        public tocchap tocchap;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage beginpage1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("simplesect", typeof(simplesect))]
        [System.Xml.Serialization.XmlElementAttribute("sect1", typeof(sect1))]
        public object[] Items;
        
        /// <remarks/>
        public refentry refentry;
        
        /// <remarks/>
        public section section;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toc")]
        public toc toc1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lot")]
        public lot lot1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("index")]
        public index index1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossary")]
        public glossary glossary1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliography")]
        public bibliography bibliography1;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class partinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class part {
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        public partinfo partinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public partintro partintro;
        
        /// <remarks/>
        public appendix appendix;
        
        /// <remarks/>
        public chapter chapter;
        
        /// <remarks/>
        public toc toc;
        
        /// <remarks/>
        public lot lot;
        
        /// <remarks/>
        public index index;
        
        /// <remarks/>
        public glossary glossary;
        
        /// <remarks/>
        public bibliography bibliography;
        
        /// <remarks/>
        public article article;
        
        /// <remarks/>
        public preface preface;
        
        /// <remarks/>
        public refentry refentry;
        
        /// <remarks/>
        public reference reference;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class partintro {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("simplesect", typeof(simplesect))]
        public object[] Items;
        
        /// <remarks/>
        public refentry refentry;
        
        /// <remarks/>
        public section section;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class preface {
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        public prefaceinfo prefaceinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public toc toc;
        
        /// <remarks/>
        public lot lot;
        
        /// <remarks/>
        public index index;
        
        /// <remarks/>
        public glossary glossary;
        
        /// <remarks/>
        public bibliography bibliography;
        
        /// <remarks/>
        public tocchap tocchap;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public synopsis synopsis;
        
        /// <remarks/>
        public cmdsynopsis cmdsynopsis;
        
        /// <remarks/>
        public funcsynopsis funcsynopsis;
        
        /// <remarks/>
        public classsynopsis classsynopsis;
        
        /// <remarks/>
        public fieldsynopsis fieldsynopsis;
        
        /// <remarks/>
        public constructorsynopsis constructorsynopsis;
        
        /// <remarks/>
        public destructorsynopsis destructorsynopsis;
        
        /// <remarks/>
        public methodsynopsis methodsynopsis;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public address address;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public graphic graphic;
        
        /// <remarks/>
        public graphicco graphicco;
        
        /// <remarks/>
        public mediaobject mediaobject;
        
        /// <remarks/>
        public mediaobjectco mediaobjectco;
        
        /// <remarks/>
        public informalequation informalequation;
        
        /// <remarks/>
        public informalexample informalexample;
        
        /// <remarks/>
        public informalfigure informalfigure;
        
        /// <remarks/>
        public informaltable informaltable;
        
        /// <remarks/>
        public equation equation;
        
        /// <remarks/>
        public example example;
        
        /// <remarks/>
        public figure figure;
        
        /// <remarks/>
        public table table;
        
        /// <remarks/>
        public msgset msgset;
        
        /// <remarks/>
        public procedure procedure;
        
        /// <remarks/>
        public sidebar sidebar;
        
        /// <remarks/>
        public qandaset qandaset;
        
        /// <remarks/>
        public anchor anchor;
        
        /// <remarks/>
        public bridgehead bridgehead;
        
        /// <remarks/>
        public remark remark;
        
        /// <remarks/>
        public highlights highlights;
        
        /// <remarks/>
        public abstractc abstractc;
        
        /// <remarks/>
        public authorblurb authorblurb;
        
        /// <remarks/>
        public epigraph epigraph;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage beginpage1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("simplesect", typeof(simplesect))]
        [System.Xml.Serialization.XmlElementAttribute("sect1", typeof(sect1))]
        public object[] Items;
        
        /// <remarks/>
        public refentry refentry;
        
        /// <remarks/>
        public section section;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toc")]
        public toc toc1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lot")]
        public lot lot1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("index")]
        public index index1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("glossary")]
        public glossary glossary1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliography")]
        public bibliography bibliography1;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class prefaceinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class reference {
        
        /// <remarks/>
        public beginpage beginpage;
        
        /// <remarks/>
        public referenceinfo referenceinfo;
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public partintro partintro;
        
        /// <remarks/>
        public refentry refentry;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class referenceinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class dedication {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public calloutlist calloutlist;
        
        /// <remarks/>
        public glosslist glosslist;
        
        /// <remarks/>
        public itemizedlist itemizedlist;
        
        /// <remarks/>
        public orderedlist orderedlist;
        
        /// <remarks/>
        public segmentedlist segmentedlist;
        
        /// <remarks/>
        public simplelist simplelist;
        
        /// <remarks/>
        public variablelist variablelist;
        
        /// <remarks/>
        public caution caution;
        
        /// <remarks/>
        public important important;
        
        /// <remarks/>
        public note note;
        
        /// <remarks/>
        public tip tip;
        
        /// <remarks/>
        public warning warning;
        
        /// <remarks/>
        public literallayout literallayout;
        
        /// <remarks/>
        public programlisting programlisting;
        
        /// <remarks/>
        public programlistingco programlistingco;
        
        /// <remarks/>
        public screen screen;
        
        /// <remarks/>
        public screenco screenco;
        
        /// <remarks/>
        public screenshot screenshot;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
        
        /// <remarks/>
        public blockquote blockquote;
        
        /// <remarks/>
        public indexterm indexterm;
        
        /// <remarks/>
        public beginpage beginpage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class bookinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREFS")]
        public string contents;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class book {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public subtitle subtitle;
        
        /// <remarks/>
        public titleabbrev titleabbrev;
        
        /// <remarks/>
        public bookinfo bookinfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliography", typeof(bibliography))]
        [System.Xml.Serialization.XmlElementAttribute("colophon", typeof(colophon))]
        [System.Xml.Serialization.XmlElementAttribute("dedication", typeof(dedication))]
        [System.Xml.Serialization.XmlElementAttribute("lot", typeof(lot))]
        [System.Xml.Serialization.XmlElementAttribute("toc", typeof(toc))]
        [System.Xml.Serialization.XmlElementAttribute("glossary", typeof(glossary))]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(part))]
        [System.Xml.Serialization.XmlElementAttribute("preface", typeof(preface))]
        [System.Xml.Serialization.XmlElementAttribute("reference", typeof(reference))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string fpi;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="tbl.row.mdl")]
    public class tblrowmdl1 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("entrytbl", typeof(entrytbl))]
        [System.Xml.Serialization.XmlElementAttribute("entry", typeof(entry))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class setinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("subjectset", typeof(subjectset))]
        [System.Xml.Serialization.XmlElementAttribute("itermset", typeof(itermset))]
        [System.Xml.Serialization.XmlElementAttribute("keywordset", typeof(keywordset))]
        [System.Xml.Serialization.XmlElementAttribute("mediaobject", typeof(mediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("modespec", typeof(modespec))]
        [System.Xml.Serialization.XmlElementAttribute("legalnotice", typeof(legalnotice))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREFS")]
        public string contents;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class biblioset {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bibliosource", typeof(bibliosource))]
        [System.Xml.Serialization.XmlElementAttribute("pubsnumber", typeof(pubsnumber))]
        [System.Xml.Serialization.XmlElementAttribute("citebiblioid", typeof(citebiblioid))]
        [System.Xml.Serialization.XmlElementAttribute("revhistory", typeof(revhistory))]
        [System.Xml.Serialization.XmlElementAttribute("corpname", typeof(corpname))]
        [System.Xml.Serialization.XmlElementAttribute("authorgroup", typeof(authorgroup))]
        [System.Xml.Serialization.XmlElementAttribute("biblioset", typeof(biblioset))]
        [System.Xml.Serialization.XmlElementAttribute("printhistory", typeof(printhistory))]
        [System.Xml.Serialization.XmlElementAttribute("edition", typeof(edition))]
        [System.Xml.Serialization.XmlElementAttribute("title", typeof(title))]
        [System.Xml.Serialization.XmlElementAttribute("personname", typeof(personname))]
        [System.Xml.Serialization.XmlElementAttribute("bibliomisc", typeof(bibliomisc))]
        [System.Xml.Serialization.XmlElementAttribute("isbn", typeof(isbn))]
        [System.Xml.Serialization.XmlElementAttribute("pubdate", typeof(pubdate))]
        [System.Xml.Serialization.XmlElementAttribute("seriesvolnums", typeof(seriesvolnums))]
        [System.Xml.Serialization.XmlElementAttribute("address", typeof(address))]
        [System.Xml.Serialization.XmlElementAttribute("bibliorelation", typeof(bibliorelation))]
        [System.Xml.Serialization.XmlElementAttribute("contractnum", typeof(contractnum))]
        [System.Xml.Serialization.XmlElementAttribute("author", typeof(author))]
        [System.Xml.Serialization.XmlElementAttribute("date", typeof(date))]
        [System.Xml.Serialization.XmlElementAttribute("othercredit", typeof(othercredit))]
        [System.Xml.Serialization.XmlElementAttribute("collab", typeof(collab))]
        [System.Xml.Serialization.XmlElementAttribute("pagenums", typeof(pagenums))]
        [System.Xml.Serialization.XmlElementAttribute("titleabbrev", typeof(titleabbrev))]
        [System.Xml.Serialization.XmlElementAttribute("corpauthor", typeof(corpauthor))]
        [System.Xml.Serialization.XmlElementAttribute("abbrev", typeof(abbrev))]
        [System.Xml.Serialization.XmlElementAttribute("volumenum", typeof(volumenum))]
        [System.Xml.Serialization.XmlElementAttribute("issn", typeof(issn))]
        [System.Xml.Serialization.XmlElementAttribute("citetitle", typeof(citetitle))]
        [System.Xml.Serialization.XmlElementAttribute("publishername", typeof(publishername))]
        [System.Xml.Serialization.XmlElementAttribute("invpartnumber", typeof(invpartnumber))]
        [System.Xml.Serialization.XmlElementAttribute("biblioid", typeof(biblioid))]
        [System.Xml.Serialization.XmlElementAttribute("publisher", typeof(publisher))]
        [System.Xml.Serialization.XmlElementAttribute("artpagenums", typeof(artpagenums))]
        [System.Xml.Serialization.XmlElementAttribute("releaseinfo", typeof(releaseinfo))]
        [System.Xml.Serialization.XmlElementAttribute("authorinitials", typeof(authorinitials))]
        [System.Xml.Serialization.XmlElementAttribute("productnumber", typeof(productnumber))]
        [System.Xml.Serialization.XmlElementAttribute("confgroup", typeof(confgroup))]
        [System.Xml.Serialization.XmlElementAttribute("bibliocoverage", typeof(bibliocoverage))]
        [System.Xml.Serialization.XmlElementAttribute("editor", typeof(editor))]
        [System.Xml.Serialization.XmlElementAttribute("issuenum", typeof(issuenum))]
        [System.Xml.Serialization.XmlElementAttribute("productname", typeof(productname))]
        [System.Xml.Serialization.XmlElementAttribute("copyright", typeof(copyright))]
        [System.Xml.Serialization.XmlElementAttribute("subtitle", typeof(subtitle))]
        [System.Xml.Serialization.XmlElementAttribute("abstract", typeof(abstractc))]
        [System.Xml.Serialization.XmlElementAttribute("contractsponsor", typeof(contractsponsor))]
        [System.Xml.Serialization.XmlElementAttribute("orgname", typeof(orgname))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string relation;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class bibliosource {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class pubsnumber {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class citebiblioid {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class corpname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class authorgroup {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("editor", typeof(editor))]
        [System.Xml.Serialization.XmlElementAttribute("collab", typeof(collab))]
        [System.Xml.Serialization.XmlElementAttribute("author", typeof(author))]
        [System.Xml.Serialization.XmlElementAttribute("othercredit", typeof(othercredit))]
        [System.Xml.Serialization.XmlElementAttribute("corpauthor", typeof(corpauthor))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class editor {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("personname")]
        public personname Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("address", typeof(address))]
        [System.Xml.Serialization.XmlElementAttribute("personblurb", typeof(personblurb))]
        [System.Xml.Serialization.XmlElementAttribute("email", typeof(email))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class personblurb {
        
        /// <remarks/>
        public title title;
        
        /// <remarks/>
        public formalpara formalpara;
        
        /// <remarks/>
        public para para;
        
        /// <remarks/>
        public simpara simpara;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class collab {
        
        /// <remarks/>
        public collabname collabname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("affiliation")]
        public affiliation[] affiliation;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class collabname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class affiliation {
        
        /// <remarks/>
        public shortaffil shortaffil;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("jobtitle")]
        public jobtitle[] jobtitle;
        
        /// <remarks/>
        public orgname orgname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("orgdiv")]
        public orgdiv[] orgdiv;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("address")]
        public address[] address;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class shortaffil {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class jobtitle {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class orgname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public orgnameClass @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string otherclass;
    }
    
    /// <remarks/>
    public enum orgnameClass {
        
        /// <remarks/>
        corporation,
        
        /// <remarks/>
        nonprofit,
        
        /// <remarks/>
        consortium,
        
        /// <remarks/>
        informal,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class orgdiv {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class author {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("personname")]
        public personname Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("address", typeof(address))]
        [System.Xml.Serialization.XmlElementAttribute("personblurb", typeof(personblurb))]
        [System.Xml.Serialization.XmlElementAttribute("email", typeof(email))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class othercredit {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("personname")]
        public personname Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("address", typeof(address))]
        [System.Xml.Serialization.XmlElementAttribute("personblurb", typeof(personblurb))]
        [System.Xml.Serialization.XmlElementAttribute("email", typeof(email))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class corpauthor {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class printhistory {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("simpara", typeof(simpara))]
        [System.Xml.Serialization.XmlElementAttribute("formalpara", typeof(formalpara))]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(para))]
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class edition {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class bibliomisc {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class isbn {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class pubdate {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class seriesvolnums {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class bibliorelation {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class contractnum {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class pagenums {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class volumenum {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class issn {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class citetitle {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public citetitlePubwork pubwork;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pubworkSpecified;
    }
    
    /// <remarks/>
    public enum citetitlePubwork {
        
        /// <remarks/>
        article,
        
        /// <remarks/>
        book,
        
        /// <remarks/>
        chapter,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        refentry,
        
        /// <remarks/>
        section,
        
        /// <remarks/>
        journal,
        
        /// <remarks/>
        series,
        
        /// <remarks/>
        set,
        
        /// <remarks/>
        manuscript,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class publishername {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class invpartnumber {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class biblioid {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class publisher {
        
        /// <remarks/>
        public publishername publishername;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("address")]
        public address[] address;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class artpagenums {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class releaseinfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class productnumber {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class confgroup {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("confsponsor", typeof(confsponsor))]
        [System.Xml.Serialization.XmlElementAttribute("address", typeof(address))]
        [System.Xml.Serialization.XmlElementAttribute("confdates", typeof(confdates))]
        [System.Xml.Serialization.XmlElementAttribute("conftitle", typeof(conftitle))]
        [System.Xml.Serialization.XmlElementAttribute("confnum", typeof(confnum))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class confsponsor {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class confdates {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class conftitle {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class confnum {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class bibliocoverage {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bibliocoverageSpatial spatial;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool spatialSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string otherspatial;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bibliocoverageTemporal temporal;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool temporalSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string othertemporal;
    }
    
    /// <remarks/>
    public enum bibliocoverageSpatial {
        
        /// <remarks/>
        dcmipoint,
        
        /// <remarks/>
        iso3166,
        
        /// <remarks/>
        dcmibox,
        
        /// <remarks/>
        tgn,
        
        /// <remarks/>
        otherspatial,
    }
    
    /// <remarks/>
    public enum bibliocoverageTemporal {
        
        /// <remarks/>
        dcmiperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("w3c-dtf")]
        w3cdtf,
        
        /// <remarks/>
        othertemporal,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class issuenum {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class productname {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(productnameClass.trade)]
        public productnameClass @class = productnameClass.trade;
    }
    
    /// <remarks/>
    public enum productnameClass {
        
        /// <remarks/>
        service,
        
        /// <remarks/>
        trade,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        copyright,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class copyright {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("year")]
        public year[] year;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("holder")]
        public holder[] holder;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class year {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class holder {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class contractsponsor {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class footnote {
        
        /// <remarks/>
        public object Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class inlineequation : inlineequationcontent {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="inlineequation.content")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inlineequation))]
    public class inlineequationcontent {
        
        /// <remarks/>
        public alt alt;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphic", typeof(graphic))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        public object[] Items;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class contrib {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class citation {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class citerefentry {
        
        /// <remarks/>
        public refentrytitle refentrytitle;
        
        /// <remarks/>
        public manvolnum manvolnum;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class firstterm {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("acronym", typeof(acronym))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class foreignphrase {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class quote {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("beginpage")]
        public beginpage Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class subscript {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("symbol", typeof(symbol))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class superscript {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("symbol", typeof(symbol))]
        [System.Xml.Serialization.XmlElementAttribute("replaceable", typeof(replaceable))]
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class wordasword {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inlinemediaobject", typeof(inlinemediaobject))]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(trademark))]
        [System.Xml.Serialization.XmlElementAttribute("beginpage", typeof(beginpage))]
        [System.Xml.Serialization.XmlElementAttribute("acronym", typeof(acronym))]
        [System.Xml.Serialization.XmlElementAttribute("inlinegraphic", typeof(inlinegraphic))]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(emphasis))]
        public object Item;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class footnoteref {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class xref {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
        public string endterm;
    }
}
